// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
}

model Tag {
  id          String     @id @default(uuid())
  name        String     @unique
  description String?    @db.Text
  color       String?    @db.VarChar(20) // For UI color coding
  donors      DonorTag[]
  events      Event[]    @relation("EventTags")
  is_deleted  Boolean    @default(false)
  deleted_at  DateTime?
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt

  @@index([name])
  @@map("Tag")
}

model Donor {
  id                String  @id @default(uuid())
  first_name        String  @db.VarChar(255)
  nick_name         String? @db.VarChar(255)
  last_name         String  @db.VarChar(255)
  organization_name String? @db.VarChar(255)
  unit_number       String? @db.VarChar(255)
  street_address    String  @db.Text
  city              City

  total_donation_amount Decimal?  @default(0) @db.Decimal(10, 2)
  total_pledge          Decimal?  @db.Decimal(10, 2)
  largest_gift_amount   Decimal?  @db.Decimal(10, 2)
  largest_gift_appeal   String?   @db.VarChar(255)
  last_gift_amount      Decimal?  @db.Decimal(10, 2)
  last_gift_request     String?   @db.VarChar(255)
  last_gift_appeal      String?   @db.VarChar(255)
  first_gift_date       DateTime?
  last_gift_date        DateTime?

  pmm      String
  exclude  Boolean?
  deceased Boolean?

  contact_phone_type            ContactPhoneType?
  phone_restrictions            String?
  email_restrictions            String?
  communication_restrictions    String?
  subscription_events_in_person SubscriptionPreference?
  subscription_events_magazine  SubscriptionPreference?
  communication_preference      CommunicationPreference?

  tags   DonorTag[]
  events DonorEvent[]

  is_deleted Boolean   @default(false)
  deleted_at DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  @@index([last_name])
  @@index([organization_name])
  @@index([city])
  @@index([exclude])
  @@index([deceased])
  @@index([pmm])
  @@index([communication_preference])
  @@index([subscription_events_in_person])
  @@index([subscription_events_magazine])
  @@index([created_at])
  @@map("Donor")
}

model DonorTag {
  donor      Donor    @relation(fields: [donor_id], references: [id], onDelete: Cascade)
  donor_id   String
  tag        Tag      @relation(fields: [tag_id], references: [id], onDelete: Cascade)
  tag_id     String
  created_at DateTime @default(now())

  @@id([donor_id, tag_id])
  @@index([donor_id])
  @@index([tag_id])
  @@map("Donor_Tag")
}

enum EventStatus {
  draft
  published
  archived
}

model Event {
  id          String       @id @default(uuid())
  name        String       @unique
  description String?      @db.Text
  date        DateTime?
  location    String?      @db.Text
  status      EventStatus  @default(draft)
  donor_count Int?
  donors      DonorEvent[]
  tags        Tag[]        @relation("EventTags")
  is_deleted  Boolean      @default(false)
  deleted_at  DateTime?
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  created_by  String

  @@index([date])
  @@map("Event")
}

model DonorEvent {
  donor    Donor  @relation(fields: [donor_id], references: [id], onDelete: Cascade)
  donor_id String

  event    Event  @relation(fields: [event_id], references: [id], onDelete: Cascade)
  event_id String

  status     ParticipationStatus?
  created_at DateTime             @default(now())

  @@id([donor_id, event_id])
  @@index([donor_id])
  @@index([event_id])
  @@map("Donor_Event")
}

enum ParticipationStatus {
  invited
  confirmed
  declined
}

enum ContactPhoneType {
  Home
  Work
  Mobile
}

enum SubscriptionPreference {
  Opt_out
  Opt_in
}

enum CommunicationPreference {
  Thank_you
  Magazine
  Inspiration_event
  Newsletter
  Survey
  Holiday_Card
  Event
  Appeal
  Research_update
}

enum City {
  Victoria
  Nanaimo
  Courtenay
  Parksville
  Campbell_River
  Saanich
  Vancouver
  Surrey
  Burnaby
  Richmond
  North_Vancouver
  White_Rock
  Coquitlam
  West_Vancouver
  New_Westminster
  Prince_George
  Williams_Lake
  Delta
  Abbotsford
  Maple_Ridge
  Kelowna
  Langley
  Port_Coquitlam
  Vernon
  Kamloops
  Salmon_Arm
}
