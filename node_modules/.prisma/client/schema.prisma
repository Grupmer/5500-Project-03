// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
}

model Donor {
  donor_id                      String     @id @default(uuid()) @db.Char(36)
  first_name                    String     @db.VarChar(255)
  middle_name                   String?    @db.VarChar(255)
  last_name                     String     @db.VarChar(255)
  gender                        String?
  age                           Int?
  email                         String?    @unique @db.VarChar(255)
  phone_number                  String?    @db.VarChar(20)
  address                       String?
  registration_date             DateTime   @default(now())
  last_donation_date            DateTime?
  total_donation_amount         Decimal    @default(0.0) @db.Decimal(10, 2)
  total_donations_count         Int        @default(0)
  anonymous_donation_preference Boolean    @default(false)
  interest_domain               String?
  is_merged                     Boolean    @default(false)
  is_company                    Boolean    @default(false)
  merge_to_donor_id             String?    @db.Char(36)
  communication_preference      String?
  createdAt                     DateTime   @default(now())
  tags                          DonorTag[]
}

model Tag {
  tag_id    String     @id @default(uuid()) @db.Char(36)
  name      String     @unique @db.VarChar(255)
  createdAt DateTime   @default(now())
  donors    DonorTag[]
}

model DonorTag {
  donor_id  String   @db.Char(36)
  tag_id    String   @db.Char(36)
  createdAt DateTime @default(now())
  donor     Donor    @relation(fields: [donor_id], references: [donor_id], onDelete: Cascade)
  tag       Tag      @relation(fields: [tag_id], references: [tag_id], onDelete: Cascade)

  @@id([donor_id, tag_id])
}
