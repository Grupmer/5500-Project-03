
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.4.1
 * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
 */
Prisma.prismaVersion = {
  client: "6.4.1",
  engine: "a9055b89e58b4b5bfb59600785423b1db3d0e75d"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
  avatar: 'avatar',
  createdAt: 'createdAt'
};

exports.Prisma.DonationScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  donation_date: 'donation_date',
  donation_type: 'donation_type',
  payment_method: 'payment_method',
  status: 'status',
  campaign_id: 'campaign_id',
  event_id: 'event_id',
  notes: 'notes',
  is_anonymous: 'is_anonymous',
  is_deleted: 'is_deleted',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  color: 'color',
  is_deleted: 'is_deleted',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DonorScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  nick_name: 'nick_name',
  last_name: 'last_name',
  organization_name: 'organization_name',
  gender: 'gender',
  age: 'age',
  email: 'email',
  phone_number: 'phone_number',
  address: 'address',
  city: 'city',
  state: 'state',
  postal_code: 'postal_code',
  country: 'country',
  registration_date: 'registration_date',
  last_donation_id: 'last_donation_id',
  total_donation_amount: 'total_donation_amount',
  total_donations_count: 'total_donations_count',
  anonymous_donation_preference: 'anonymous_donation_preference',
  is_merged: 'is_merged',
  is_company: 'is_company',
  merge_to_donor_id: 'merge_to_donor_id',
  contact_phone_type: 'contact_phone_type',
  phone_restrictions: 'phone_restrictions',
  email_restrictions: 'email_restrictions',
  communication_restrictions: 'communication_restrictions',
  subscription_events_in_person: 'subscription_events_in_person',
  subscription_events_magazine: 'subscription_events_magazine',
  communication_preference: 'communication_preference',
  is_deleted: 'is_deleted',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DonorDonationScalarFieldEnum = {
  donor_id: 'donor_id',
  donation_id: 'donation_id',
  amount: 'amount',
  is_primary: 'is_primary',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DonorTagScalarFieldEnum = {
  donor_id: 'donor_id',
  tag_id: 'tag_id',
  created_at: 'created_at'
};

exports.Prisma.InterestDomainScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DonorInterestDomainScalarFieldEnum = {
  donor_id: 'donor_id',
  interest_domain_id: 'interest_domain_id',
  level: 'level',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CommunicationScalarFieldEnum = {
  id: 'id',
  donor_id: 'donor_id',
  type: 'type',
  direction: 'direction',
  subject: 'subject',
  content: 'content',
  status: 'status',
  communication_date: 'communication_date',
  response_required: 'response_required',
  response_received: 'response_received',
  response_date: 'response_date',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  username: 'username',
  email: 'email',
  password: 'password',
  avatar: 'avatar'
};

exports.Prisma.DonationOrderByRelevanceFieldEnum = {
  id: 'id',
  donation_type: 'donation_type',
  payment_method: 'payment_method',
  status: 'status',
  campaign_id: 'campaign_id',
  event_id: 'event_id',
  notes: 'notes'
};

exports.Prisma.TagOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  color: 'color'
};

exports.Prisma.DonorOrderByRelevanceFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  nick_name: 'nick_name',
  last_name: 'last_name',
  organization_name: 'organization_name',
  gender: 'gender',
  email: 'email',
  phone_number: 'phone_number',
  address: 'address',
  city: 'city',
  state: 'state',
  postal_code: 'postal_code',
  country: 'country',
  last_donation_id: 'last_donation_id',
  merge_to_donor_id: 'merge_to_donor_id',
  contact_phone_type: 'contact_phone_type',
  phone_restrictions: 'phone_restrictions',
  email_restrictions: 'email_restrictions',
  communication_restrictions: 'communication_restrictions',
  subscription_events_in_person: 'subscription_events_in_person',
  subscription_events_magazine: 'subscription_events_magazine',
  communication_preference: 'communication_preference'
};

exports.Prisma.DonorDonationOrderByRelevanceFieldEnum = {
  donor_id: 'donor_id',
  donation_id: 'donation_id'
};

exports.Prisma.DonorTagOrderByRelevanceFieldEnum = {
  donor_id: 'donor_id',
  tag_id: 'tag_id'
};

exports.Prisma.InterestDomainOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.DonorInterestDomainOrderByRelevanceFieldEnum = {
  donor_id: 'donor_id',
  interest_domain_id: 'interest_domain_id'
};

exports.Prisma.CommunicationOrderByRelevanceFieldEnum = {
  id: 'id',
  donor_id: 'donor_id',
  type: 'type',
  direction: 'direction',
  subject: 'subject',
  content: 'content',
  status: 'status',
  notes: 'notes'
};


exports.Prisma.ModelName = {
  User: 'User',
  Donation: 'Donation',
  Tag: 'Tag',
  Donor: 'Donor',
  DonorDonation: 'DonorDonation',
  DonorTag: 'DonorTag',
  InterestDomain: 'InterestDomain',
  DonorInterestDomain: 'DonorInterestDomain',
  Communication: 'Communication'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
