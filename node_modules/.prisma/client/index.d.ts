
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Tag
 * 
 */
export type Tag = $Result.DefaultSelection<Prisma.$TagPayload>
/**
 * Model Donor
 * 
 */
export type Donor = $Result.DefaultSelection<Prisma.$DonorPayload>
/**
 * Model DonorTag
 * 
 */
export type DonorTag = $Result.DefaultSelection<Prisma.$DonorTagPayload>
/**
 * Model Event
 * 
 */
export type Event = $Result.DefaultSelection<Prisma.$EventPayload>
/**
 * Model EventCollaborator
 * 
 */
export type EventCollaborator = $Result.DefaultSelection<Prisma.$EventCollaboratorPayload>
/**
 * Model DonorEvent
 * 
 */
export type DonorEvent = $Result.DefaultSelection<Prisma.$DonorEventPayload>
/**
 * Model EventEditHistory
 * 
 */
export type EventEditHistory = $Result.DefaultSelection<Prisma.$EventEditHistoryPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const EventStatus: {
  draft: 'draft',
  published: 'published',
  archived: 'archived'
};

export type EventStatus = (typeof EventStatus)[keyof typeof EventStatus]


export const ParticipationStatus: {
  invited: 'invited',
  confirmed: 'confirmed',
  attended: 'attended',
  declined: 'declined'
};

export type ParticipationStatus = (typeof ParticipationStatus)[keyof typeof ParticipationStatus]


export const ContactPhoneType: {
  Home: 'Home',
  Work: 'Work',
  Mobile: 'Mobile'
};

export type ContactPhoneType = (typeof ContactPhoneType)[keyof typeof ContactPhoneType]


export const SubscriptionPreference: {
  Opt_out: 'Opt_out',
  Opt_in: 'Opt_in'
};

export type SubscriptionPreference = (typeof SubscriptionPreference)[keyof typeof SubscriptionPreference]


export const CommunicationPreference: {
  Thank_you: 'Thank_you',
  Magazine: 'Magazine',
  Inspiration_event: 'Inspiration_event',
  Newsletter: 'Newsletter',
  Survey: 'Survey',
  Holiday_Card: 'Holiday_Card',
  Event: 'Event',
  Appeal: 'Appeal',
  Research_update: 'Research_update'
};

export type CommunicationPreference = (typeof CommunicationPreference)[keyof typeof CommunicationPreference]


export const City: {
  Victoria: 'Victoria',
  Nanaimo: 'Nanaimo',
  Courtenay: 'Courtenay',
  Parksville: 'Parksville',
  Campbell_River: 'Campbell_River',
  Saanich: 'Saanich',
  Vancouver: 'Vancouver',
  Surrey: 'Surrey',
  Burnaby: 'Burnaby',
  Richmond: 'Richmond',
  North_Vancouver: 'North_Vancouver',
  White_Rock: 'White_Rock',
  Coquitlam: 'Coquitlam',
  West_Vancouver: 'West_Vancouver',
  New_Westminster: 'New_Westminster',
  Prince_George: 'Prince_George',
  Williams_Lake: 'Williams_Lake',
  Delta: 'Delta',
  Abbotsford: 'Abbotsford',
  Maple_Ridge: 'Maple_Ridge',
  Kelowna: 'Kelowna',
  Langley: 'Langley',
  Port_Coquitlam: 'Port_Coquitlam',
  Vernon: 'Vernon',
  Kamloops: 'Kamloops',
  Salmon_Arm: 'Salmon_Arm'
};

export type City = (typeof City)[keyof typeof City]

}

export type EventStatus = $Enums.EventStatus

export const EventStatus: typeof $Enums.EventStatus

export type ParticipationStatus = $Enums.ParticipationStatus

export const ParticipationStatus: typeof $Enums.ParticipationStatus

export type ContactPhoneType = $Enums.ContactPhoneType

export const ContactPhoneType: typeof $Enums.ContactPhoneType

export type SubscriptionPreference = $Enums.SubscriptionPreference

export const SubscriptionPreference: typeof $Enums.SubscriptionPreference

export type CommunicationPreference = $Enums.CommunicationPreference

export const CommunicationPreference: typeof $Enums.CommunicationPreference

export type City = $Enums.City

export const City: typeof $Enums.City

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tag`: Exposes CRUD operations for the **Tag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tag.findMany()
    * ```
    */
  get tag(): Prisma.TagDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donor`: Exposes CRUD operations for the **Donor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Donors
    * const donors = await prisma.donor.findMany()
    * ```
    */
  get donor(): Prisma.DonorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donorTag`: Exposes CRUD operations for the **DonorTag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DonorTags
    * const donorTags = await prisma.donorTag.findMany()
    * ```
    */
  get donorTag(): Prisma.DonorTagDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.event`: Exposes CRUD operations for the **Event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Events
    * const events = await prisma.event.findMany()
    * ```
    */
  get event(): Prisma.EventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.eventCollaborator`: Exposes CRUD operations for the **EventCollaborator** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EventCollaborators
    * const eventCollaborators = await prisma.eventCollaborator.findMany()
    * ```
    */
  get eventCollaborator(): Prisma.EventCollaboratorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donorEvent`: Exposes CRUD operations for the **DonorEvent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DonorEvents
    * const donorEvents = await prisma.donorEvent.findMany()
    * ```
    */
  get donorEvent(): Prisma.DonorEventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.eventEditHistory`: Exposes CRUD operations for the **EventEditHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EventEditHistories
    * const eventEditHistories = await prisma.eventEditHistory.findMany()
    * ```
    */
  get eventEditHistory(): Prisma.EventEditHistoryDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.5.0
   * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Tag: 'Tag',
    Donor: 'Donor',
    DonorTag: 'DonorTag',
    Event: 'Event',
    EventCollaborator: 'EventCollaborator',
    DonorEvent: 'DonorEvent',
    EventEditHistory: 'EventEditHistory'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "tag" | "donor" | "donorTag" | "event" | "eventCollaborator" | "donorEvent" | "eventEditHistory"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Tag: {
        payload: Prisma.$TagPayload<ExtArgs>
        fields: Prisma.TagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          findFirst: {
            args: Prisma.TagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          findMany: {
            args: Prisma.TagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>[]
          }
          create: {
            args: Prisma.TagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          createMany: {
            args: Prisma.TagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          update: {
            args: Prisma.TagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          deleteMany: {
            args: Prisma.TagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          aggregate: {
            args: Prisma.TagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTag>
          }
          groupBy: {
            args: Prisma.TagGroupByArgs<ExtArgs>
            result: $Utils.Optional<TagGroupByOutputType>[]
          }
          count: {
            args: Prisma.TagCountArgs<ExtArgs>
            result: $Utils.Optional<TagCountAggregateOutputType> | number
          }
        }
      }
      Donor: {
        payload: Prisma.$DonorPayload<ExtArgs>
        fields: Prisma.DonorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DonorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DonorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          findFirst: {
            args: Prisma.DonorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DonorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          findMany: {
            args: Prisma.DonorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>[]
          }
          create: {
            args: Prisma.DonorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          createMany: {
            args: Prisma.DonorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DonorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          update: {
            args: Prisma.DonorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          deleteMany: {
            args: Prisma.DonorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DonorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DonorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          aggregate: {
            args: Prisma.DonorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonor>
          }
          groupBy: {
            args: Prisma.DonorGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonorGroupByOutputType>[]
          }
          count: {
            args: Prisma.DonorCountArgs<ExtArgs>
            result: $Utils.Optional<DonorCountAggregateOutputType> | number
          }
        }
      }
      DonorTag: {
        payload: Prisma.$DonorTagPayload<ExtArgs>
        fields: Prisma.DonorTagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DonorTagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DonorTagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          findFirst: {
            args: Prisma.DonorTagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DonorTagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          findMany: {
            args: Prisma.DonorTagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>[]
          }
          create: {
            args: Prisma.DonorTagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          createMany: {
            args: Prisma.DonorTagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DonorTagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          update: {
            args: Prisma.DonorTagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          deleteMany: {
            args: Prisma.DonorTagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DonorTagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DonorTagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          aggregate: {
            args: Prisma.DonorTagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonorTag>
          }
          groupBy: {
            args: Prisma.DonorTagGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonorTagGroupByOutputType>[]
          }
          count: {
            args: Prisma.DonorTagCountArgs<ExtArgs>
            result: $Utils.Optional<DonorTagCountAggregateOutputType> | number
          }
        }
      }
      Event: {
        payload: Prisma.$EventPayload<ExtArgs>
        fields: Prisma.EventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          findFirst: {
            args: Prisma.EventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          findMany: {
            args: Prisma.EventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>[]
          }
          create: {
            args: Prisma.EventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          createMany: {
            args: Prisma.EventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          update: {
            args: Prisma.EventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          deleteMany: {
            args: Prisma.EventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          aggregate: {
            args: Prisma.EventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvent>
          }
          groupBy: {
            args: Prisma.EventGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventCountArgs<ExtArgs>
            result: $Utils.Optional<EventCountAggregateOutputType> | number
          }
        }
      }
      EventCollaborator: {
        payload: Prisma.$EventCollaboratorPayload<ExtArgs>
        fields: Prisma.EventCollaboratorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventCollaboratorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventCollaboratorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventCollaboratorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventCollaboratorPayload>
          }
          findFirst: {
            args: Prisma.EventCollaboratorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventCollaboratorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventCollaboratorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventCollaboratorPayload>
          }
          findMany: {
            args: Prisma.EventCollaboratorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventCollaboratorPayload>[]
          }
          create: {
            args: Prisma.EventCollaboratorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventCollaboratorPayload>
          }
          createMany: {
            args: Prisma.EventCollaboratorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EventCollaboratorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventCollaboratorPayload>
          }
          update: {
            args: Prisma.EventCollaboratorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventCollaboratorPayload>
          }
          deleteMany: {
            args: Prisma.EventCollaboratorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventCollaboratorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EventCollaboratorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventCollaboratorPayload>
          }
          aggregate: {
            args: Prisma.EventCollaboratorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEventCollaborator>
          }
          groupBy: {
            args: Prisma.EventCollaboratorGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventCollaboratorGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventCollaboratorCountArgs<ExtArgs>
            result: $Utils.Optional<EventCollaboratorCountAggregateOutputType> | number
          }
        }
      }
      DonorEvent: {
        payload: Prisma.$DonorEventPayload<ExtArgs>
        fields: Prisma.DonorEventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DonorEventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorEventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DonorEventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorEventPayload>
          }
          findFirst: {
            args: Prisma.DonorEventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorEventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DonorEventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorEventPayload>
          }
          findMany: {
            args: Prisma.DonorEventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorEventPayload>[]
          }
          create: {
            args: Prisma.DonorEventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorEventPayload>
          }
          createMany: {
            args: Prisma.DonorEventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DonorEventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorEventPayload>
          }
          update: {
            args: Prisma.DonorEventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorEventPayload>
          }
          deleteMany: {
            args: Prisma.DonorEventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DonorEventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DonorEventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorEventPayload>
          }
          aggregate: {
            args: Prisma.DonorEventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonorEvent>
          }
          groupBy: {
            args: Prisma.DonorEventGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonorEventGroupByOutputType>[]
          }
          count: {
            args: Prisma.DonorEventCountArgs<ExtArgs>
            result: $Utils.Optional<DonorEventCountAggregateOutputType> | number
          }
        }
      }
      EventEditHistory: {
        payload: Prisma.$EventEditHistoryPayload<ExtArgs>
        fields: Prisma.EventEditHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventEditHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventEditHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventEditHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventEditHistoryPayload>
          }
          findFirst: {
            args: Prisma.EventEditHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventEditHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventEditHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventEditHistoryPayload>
          }
          findMany: {
            args: Prisma.EventEditHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventEditHistoryPayload>[]
          }
          create: {
            args: Prisma.EventEditHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventEditHistoryPayload>
          }
          createMany: {
            args: Prisma.EventEditHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EventEditHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventEditHistoryPayload>
          }
          update: {
            args: Prisma.EventEditHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventEditHistoryPayload>
          }
          deleteMany: {
            args: Prisma.EventEditHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventEditHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EventEditHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventEditHistoryPayload>
          }
          aggregate: {
            args: Prisma.EventEditHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEventEditHistory>
          }
          groupBy: {
            args: Prisma.EventEditHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventEditHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventEditHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<EventEditHistoryCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    tag?: TagOmit
    donor?: DonorOmit
    donorTag?: DonorTagOmit
    event?: EventOmit
    eventCollaborator?: EventCollaboratorOmit
    donorEvent?: DonorEventOmit
    eventEditHistory?: EventEditHistoryOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    events: number
    collaborators: number
    editHistories: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | UserCountOutputTypeCountEventsArgs
    collaborators?: boolean | UserCountOutputTypeCountCollaboratorsArgs
    editHistories?: boolean | UserCountOutputTypeCountEditHistoriesArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCollaboratorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventCollaboratorWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEditHistoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventEditHistoryWhereInput
  }


  /**
   * Count Type TagCountOutputType
   */

  export type TagCountOutputType = {
    donors: number
    events: number
  }

  export type TagCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donors?: boolean | TagCountOutputTypeCountDonorsArgs
    events?: boolean | TagCountOutputTypeCountEventsArgs
  }

  // Custom InputTypes
  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagCountOutputType
     */
    select?: TagCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeCountDonorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorTagWhereInput
  }

  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }


  /**
   * Count Type DonorCountOutputType
   */

  export type DonorCountOutputType = {
    tags: number
    events: number
  }

  export type DonorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tags?: boolean | DonorCountOutputTypeCountTagsArgs
    events?: boolean | DonorCountOutputTypeCountEventsArgs
  }

  // Custom InputTypes
  /**
   * DonorCountOutputType without action
   */
  export type DonorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorCountOutputType
     */
    select?: DonorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DonorCountOutputType without action
   */
  export type DonorCountOutputTypeCountTagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorTagWhereInput
  }

  /**
   * DonorCountOutputType without action
   */
  export type DonorCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorEventWhereInput
  }


  /**
   * Count Type EventCountOutputType
   */

  export type EventCountOutputType = {
    donors: number
    tags: number
    editHistory: number
    collaborators: number
  }

  export type EventCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donors?: boolean | EventCountOutputTypeCountDonorsArgs
    tags?: boolean | EventCountOutputTypeCountTagsArgs
    editHistory?: boolean | EventCountOutputTypeCountEditHistoryArgs
    collaborators?: boolean | EventCountOutputTypeCountCollaboratorsArgs
  }

  // Custom InputTypes
  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCountOutputType
     */
    select?: EventCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeCountDonorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorEventWhereInput
  }

  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeCountTagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TagWhereInput
  }

  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeCountEditHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventEditHistoryWhereInput
  }

  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeCountCollaboratorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventCollaboratorWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    avatar: string | null
    createdAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    avatar: string | null
    createdAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    email: number
    password: number
    avatar: number
    createdAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    avatar?: true
    createdAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    avatar?: true
    createdAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    avatar?: true
    createdAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    username: string
    email: string
    password: string
    avatar: string | null
    createdAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    avatar?: boolean
    createdAt?: boolean
    events?: boolean | User$eventsArgs<ExtArgs>
    collaborators?: boolean | User$collaboratorsArgs<ExtArgs>
    editHistories?: boolean | User$editHistoriesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    avatar?: boolean
    createdAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "password" | "avatar" | "createdAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    events?: boolean | User$eventsArgs<ExtArgs>
    collaborators?: boolean | User$collaboratorsArgs<ExtArgs>
    editHistories?: boolean | User$editHistoriesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      events: Prisma.$EventPayload<ExtArgs>[]
      collaborators: Prisma.$EventCollaboratorPayload<ExtArgs>[]
      editHistories: Prisma.$EventEditHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      email: string
      password: string
      avatar: string | null
      createdAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    events<T extends User$eventsArgs<ExtArgs> = {}>(args?: Subset<T, User$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    collaborators<T extends User$collaboratorsArgs<ExtArgs> = {}>(args?: Subset<T, User$collaboratorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    editHistories<T extends User$editHistoriesArgs<ExtArgs> = {}>(args?: Subset<T, User$editHistoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly username: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.events
   */
  export type User$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * User.collaborators
   */
  export type User$collaboratorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    where?: EventCollaboratorWhereInput
    orderBy?: EventCollaboratorOrderByWithRelationInput | EventCollaboratorOrderByWithRelationInput[]
    cursor?: EventCollaboratorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventCollaboratorScalarFieldEnum | EventCollaboratorScalarFieldEnum[]
  }

  /**
   * User.editHistories
   */
  export type User$editHistoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    where?: EventEditHistoryWhereInput
    orderBy?: EventEditHistoryOrderByWithRelationInput | EventEditHistoryOrderByWithRelationInput[]
    cursor?: EventEditHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventEditHistoryScalarFieldEnum | EventEditHistoryScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Tag
   */

  export type AggregateTag = {
    _count: TagCountAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  export type TagMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    color: string | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TagMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    color: string | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TagCountAggregateOutputType = {
    id: number
    name: number
    description: number
    color: number
    is_deleted: number
    deleted_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TagMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    color?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type TagMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    color?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type TagCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    color?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tag to aggregate.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tags
    **/
    _count?: true | TagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagMaxAggregateInputType
  }

  export type GetTagAggregateType<T extends TagAggregateArgs> = {
        [P in keyof T & keyof AggregateTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTag[P]>
      : GetScalarType<T[P], AggregateTag[P]>
  }




  export type TagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TagWhereInput
    orderBy?: TagOrderByWithAggregationInput | TagOrderByWithAggregationInput[]
    by: TagScalarFieldEnum[] | TagScalarFieldEnum
    having?: TagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagCountAggregateInputType | true
    _min?: TagMinAggregateInputType
    _max?: TagMaxAggregateInputType
  }

  export type TagGroupByOutputType = {
    id: string
    name: string
    description: string | null
    color: string | null
    is_deleted: boolean
    deleted_at: Date | null
    created_at: Date
    updated_at: Date
    _count: TagCountAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  type GetTagGroupByPayload<T extends TagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagGroupByOutputType[P]>
            : GetScalarType<T[P], TagGroupByOutputType[P]>
        }
      >
    >


  export type TagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    color?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    donors?: boolean | Tag$donorsArgs<ExtArgs>
    events?: boolean | Tag$eventsArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tag"]>



  export type TagSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    color?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type TagOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "color" | "is_deleted" | "deleted_at" | "created_at" | "updated_at", ExtArgs["result"]["tag"]>
  export type TagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donors?: boolean | Tag$donorsArgs<ExtArgs>
    events?: boolean | Tag$eventsArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tag"
    objects: {
      donors: Prisma.$DonorTagPayload<ExtArgs>[]
      events: Prisma.$EventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      color: string | null
      is_deleted: boolean
      deleted_at: Date | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["tag"]>
    composites: {}
  }

  type TagGetPayload<S extends boolean | null | undefined | TagDefaultArgs> = $Result.GetResult<Prisma.$TagPayload, S>

  type TagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TagCountAggregateInputType | true
    }

  export interface TagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tag'], meta: { name: 'Tag' } }
    /**
     * Find zero or one Tag that matches the filter.
     * @param {TagFindUniqueArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TagFindUniqueArgs>(args: SelectSubset<T, TagFindUniqueArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tag that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TagFindUniqueOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TagFindUniqueOrThrowArgs>(args: SelectSubset<T, TagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindFirstArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TagFindFirstArgs>(args?: SelectSubset<T, TagFindFirstArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindFirstOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TagFindFirstOrThrowArgs>(args?: SelectSubset<T, TagFindFirstOrThrowArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tag.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tagWithIdOnly = await prisma.tag.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TagFindManyArgs>(args?: SelectSubset<T, TagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tag.
     * @param {TagCreateArgs} args - Arguments to create a Tag.
     * @example
     * // Create one Tag
     * const Tag = await prisma.tag.create({
     *   data: {
     *     // ... data to create a Tag
     *   }
     * })
     * 
     */
    create<T extends TagCreateArgs>(args: SelectSubset<T, TagCreateArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tags.
     * @param {TagCreateManyArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tag = await prisma.tag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TagCreateManyArgs>(args?: SelectSubset<T, TagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tag.
     * @param {TagDeleteArgs} args - Arguments to delete one Tag.
     * @example
     * // Delete one Tag
     * const Tag = await prisma.tag.delete({
     *   where: {
     *     // ... filter to delete one Tag
     *   }
     * })
     * 
     */
    delete<T extends TagDeleteArgs>(args: SelectSubset<T, TagDeleteArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tag.
     * @param {TagUpdateArgs} args - Arguments to update one Tag.
     * @example
     * // Update one Tag
     * const tag = await prisma.tag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TagUpdateArgs>(args: SelectSubset<T, TagUpdateArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tags.
     * @param {TagDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TagDeleteManyArgs>(args?: SelectSubset<T, TagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tag = await prisma.tag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TagUpdateManyArgs>(args: SelectSubset<T, TagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tag.
     * @param {TagUpsertArgs} args - Arguments to update or create a Tag.
     * @example
     * // Update or create a Tag
     * const tag = await prisma.tag.upsert({
     *   create: {
     *     // ... data to create a Tag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tag we want to update
     *   }
     * })
     */
    upsert<T extends TagUpsertArgs>(args: SelectSubset<T, TagUpsertArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tag.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends TagCountArgs>(
      args?: Subset<T, TagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagAggregateArgs>(args: Subset<T, TagAggregateArgs>): Prisma.PrismaPromise<GetTagAggregateType<T>>

    /**
     * Group by Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TagGroupByArgs['orderBy'] }
        : { orderBy?: TagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tag model
   */
  readonly fields: TagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donors<T extends Tag$donorsArgs<ExtArgs> = {}>(args?: Subset<T, Tag$donorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    events<T extends Tag$eventsArgs<ExtArgs> = {}>(args?: Subset<T, Tag$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tag model
   */ 
  interface TagFieldRefs {
    readonly id: FieldRef<"Tag", 'String'>
    readonly name: FieldRef<"Tag", 'String'>
    readonly description: FieldRef<"Tag", 'String'>
    readonly color: FieldRef<"Tag", 'String'>
    readonly is_deleted: FieldRef<"Tag", 'Boolean'>
    readonly deleted_at: FieldRef<"Tag", 'DateTime'>
    readonly created_at: FieldRef<"Tag", 'DateTime'>
    readonly updated_at: FieldRef<"Tag", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Tag findUnique
   */
  export type TagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag findUniqueOrThrow
   */
  export type TagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag findFirst
   */
  export type TagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag findFirstOrThrow
   */
  export type TagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag findMany
   */
  export type TagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag create
   */
  export type TagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The data needed to create a Tag.
     */
    data: XOR<TagCreateInput, TagUncheckedCreateInput>
  }

  /**
   * Tag createMany
   */
  export type TagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tags.
     */
    data: TagCreateManyInput | TagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tag update
   */
  export type TagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The data needed to update a Tag.
     */
    data: XOR<TagUpdateInput, TagUncheckedUpdateInput>
    /**
     * Choose, which Tag to update.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag updateMany
   */
  export type TagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tags.
     */
    data: XOR<TagUpdateManyMutationInput, TagUncheckedUpdateManyInput>
    /**
     * Filter which Tags to update
     */
    where?: TagWhereInput
    /**
     * Limit how many Tags to update.
     */
    limit?: number
  }

  /**
   * Tag upsert
   */
  export type TagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The filter to search for the Tag to update in case it exists.
     */
    where: TagWhereUniqueInput
    /**
     * In case the Tag found by the `where` argument doesn't exist, create a new Tag with this data.
     */
    create: XOR<TagCreateInput, TagUncheckedCreateInput>
    /**
     * In case the Tag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TagUpdateInput, TagUncheckedUpdateInput>
  }

  /**
   * Tag delete
   */
  export type TagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter which Tag to delete.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag deleteMany
   */
  export type TagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tags to delete
     */
    where?: TagWhereInput
    /**
     * Limit how many Tags to delete.
     */
    limit?: number
  }

  /**
   * Tag.donors
   */
  export type Tag$donorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    where?: DonorTagWhereInput
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    cursor?: DonorTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * Tag.events
   */
  export type Tag$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Tag without action
   */
  export type TagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
  }


  /**
   * Model Donor
   */

  export type AggregateDonor = {
    _count: DonorCountAggregateOutputType | null
    _avg: DonorAvgAggregateOutputType | null
    _sum: DonorSumAggregateOutputType | null
    _min: DonorMinAggregateOutputType | null
    _max: DonorMaxAggregateOutputType | null
  }

  export type DonorAvgAggregateOutputType = {
    total_donation_amount: Decimal | null
    total_pledge: Decimal | null
    largest_gift_amount: Decimal | null
    last_gift_amount: Decimal | null
    total_invitations: number | null
    total_attendance: number | null
    invitation_acceptance_rate: number | null
    ml_score: number | null
  }

  export type DonorSumAggregateOutputType = {
    total_donation_amount: Decimal | null
    total_pledge: Decimal | null
    largest_gift_amount: Decimal | null
    last_gift_amount: Decimal | null
    total_invitations: number | null
    total_attendance: number | null
    invitation_acceptance_rate: number | null
    ml_score: number | null
  }

  export type DonorMinAggregateOutputType = {
    id: string | null
    first_name: string | null
    nick_name: string | null
    last_name: string | null
    organization_name: string | null
    unit_number: string | null
    street_address: string | null
    city: $Enums.City | null
    total_donation_amount: Decimal | null
    total_pledge: Decimal | null
    largest_gift_amount: Decimal | null
    largest_gift_appeal: string | null
    last_gift_amount: Decimal | null
    last_gift_request: string | null
    last_gift_appeal: string | null
    first_gift_date: Date | null
    last_gift_date: Date | null
    pmm: string | null
    exclude: boolean | null
    deceased: boolean | null
    contact_phone_type: $Enums.ContactPhoneType | null
    phone_restrictions: string | null
    email_restrictions: string | null
    communication_restrictions: string | null
    subscription_events_in_person: $Enums.SubscriptionPreference | null
    subscription_events_magazine: $Enums.SubscriptionPreference | null
    communication_preference: $Enums.CommunicationPreference | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    attendance_lable: boolean | null
    donation_lable: boolean | null
    total_invitations: number | null
    total_attendance: number | null
    last_invitation_attendance: boolean | null
    invitation_acceptance_rate: number | null
    ml_score: number | null
  }

  export type DonorMaxAggregateOutputType = {
    id: string | null
    first_name: string | null
    nick_name: string | null
    last_name: string | null
    organization_name: string | null
    unit_number: string | null
    street_address: string | null
    city: $Enums.City | null
    total_donation_amount: Decimal | null
    total_pledge: Decimal | null
    largest_gift_amount: Decimal | null
    largest_gift_appeal: string | null
    last_gift_amount: Decimal | null
    last_gift_request: string | null
    last_gift_appeal: string | null
    first_gift_date: Date | null
    last_gift_date: Date | null
    pmm: string | null
    exclude: boolean | null
    deceased: boolean | null
    contact_phone_type: $Enums.ContactPhoneType | null
    phone_restrictions: string | null
    email_restrictions: string | null
    communication_restrictions: string | null
    subscription_events_in_person: $Enums.SubscriptionPreference | null
    subscription_events_magazine: $Enums.SubscriptionPreference | null
    communication_preference: $Enums.CommunicationPreference | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    attendance_lable: boolean | null
    donation_lable: boolean | null
    total_invitations: number | null
    total_attendance: number | null
    last_invitation_attendance: boolean | null
    invitation_acceptance_rate: number | null
    ml_score: number | null
  }

  export type DonorCountAggregateOutputType = {
    id: number
    first_name: number
    nick_name: number
    last_name: number
    organization_name: number
    unit_number: number
    street_address: number
    city: number
    total_donation_amount: number
    total_pledge: number
    largest_gift_amount: number
    largest_gift_appeal: number
    last_gift_amount: number
    last_gift_request: number
    last_gift_appeal: number
    first_gift_date: number
    last_gift_date: number
    pmm: number
    exclude: number
    deceased: number
    contact_phone_type: number
    phone_restrictions: number
    email_restrictions: number
    communication_restrictions: number
    subscription_events_in_person: number
    subscription_events_magazine: number
    communication_preference: number
    is_deleted: number
    deleted_at: number
    created_at: number
    updated_at: number
    attendance_lable: number
    donation_lable: number
    total_invitations: number
    total_attendance: number
    last_invitation_attendance: number
    invitation_acceptance_rate: number
    ml_score: number
    _all: number
  }


  export type DonorAvgAggregateInputType = {
    total_donation_amount?: true
    total_pledge?: true
    largest_gift_amount?: true
    last_gift_amount?: true
    total_invitations?: true
    total_attendance?: true
    invitation_acceptance_rate?: true
    ml_score?: true
  }

  export type DonorSumAggregateInputType = {
    total_donation_amount?: true
    total_pledge?: true
    largest_gift_amount?: true
    last_gift_amount?: true
    total_invitations?: true
    total_attendance?: true
    invitation_acceptance_rate?: true
    ml_score?: true
  }

  export type DonorMinAggregateInputType = {
    id?: true
    first_name?: true
    nick_name?: true
    last_name?: true
    organization_name?: true
    unit_number?: true
    street_address?: true
    city?: true
    total_donation_amount?: true
    total_pledge?: true
    largest_gift_amount?: true
    largest_gift_appeal?: true
    last_gift_amount?: true
    last_gift_request?: true
    last_gift_appeal?: true
    first_gift_date?: true
    last_gift_date?: true
    pmm?: true
    exclude?: true
    deceased?: true
    contact_phone_type?: true
    phone_restrictions?: true
    email_restrictions?: true
    communication_restrictions?: true
    subscription_events_in_person?: true
    subscription_events_magazine?: true
    communication_preference?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    attendance_lable?: true
    donation_lable?: true
    total_invitations?: true
    total_attendance?: true
    last_invitation_attendance?: true
    invitation_acceptance_rate?: true
    ml_score?: true
  }

  export type DonorMaxAggregateInputType = {
    id?: true
    first_name?: true
    nick_name?: true
    last_name?: true
    organization_name?: true
    unit_number?: true
    street_address?: true
    city?: true
    total_donation_amount?: true
    total_pledge?: true
    largest_gift_amount?: true
    largest_gift_appeal?: true
    last_gift_amount?: true
    last_gift_request?: true
    last_gift_appeal?: true
    first_gift_date?: true
    last_gift_date?: true
    pmm?: true
    exclude?: true
    deceased?: true
    contact_phone_type?: true
    phone_restrictions?: true
    email_restrictions?: true
    communication_restrictions?: true
    subscription_events_in_person?: true
    subscription_events_magazine?: true
    communication_preference?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    attendance_lable?: true
    donation_lable?: true
    total_invitations?: true
    total_attendance?: true
    last_invitation_attendance?: true
    invitation_acceptance_rate?: true
    ml_score?: true
  }

  export type DonorCountAggregateInputType = {
    id?: true
    first_name?: true
    nick_name?: true
    last_name?: true
    organization_name?: true
    unit_number?: true
    street_address?: true
    city?: true
    total_donation_amount?: true
    total_pledge?: true
    largest_gift_amount?: true
    largest_gift_appeal?: true
    last_gift_amount?: true
    last_gift_request?: true
    last_gift_appeal?: true
    first_gift_date?: true
    last_gift_date?: true
    pmm?: true
    exclude?: true
    deceased?: true
    contact_phone_type?: true
    phone_restrictions?: true
    email_restrictions?: true
    communication_restrictions?: true
    subscription_events_in_person?: true
    subscription_events_magazine?: true
    communication_preference?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    attendance_lable?: true
    donation_lable?: true
    total_invitations?: true
    total_attendance?: true
    last_invitation_attendance?: true
    invitation_acceptance_rate?: true
    ml_score?: true
    _all?: true
  }

  export type DonorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Donor to aggregate.
     */
    where?: DonorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donors to fetch.
     */
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DonorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Donors
    **/
    _count?: true | DonorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DonorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DonorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonorMaxAggregateInputType
  }

  export type GetDonorAggregateType<T extends DonorAggregateArgs> = {
        [P in keyof T & keyof AggregateDonor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonor[P]>
      : GetScalarType<T[P], AggregateDonor[P]>
  }




  export type DonorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorWhereInput
    orderBy?: DonorOrderByWithAggregationInput | DonorOrderByWithAggregationInput[]
    by: DonorScalarFieldEnum[] | DonorScalarFieldEnum
    having?: DonorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonorCountAggregateInputType | true
    _avg?: DonorAvgAggregateInputType
    _sum?: DonorSumAggregateInputType
    _min?: DonorMinAggregateInputType
    _max?: DonorMaxAggregateInputType
  }

  export type DonorGroupByOutputType = {
    id: string
    first_name: string
    nick_name: string | null
    last_name: string
    organization_name: string | null
    unit_number: string | null
    street_address: string
    city: $Enums.City
    total_donation_amount: Decimal | null
    total_pledge: Decimal | null
    largest_gift_amount: Decimal | null
    largest_gift_appeal: string | null
    last_gift_amount: Decimal | null
    last_gift_request: string | null
    last_gift_appeal: string | null
    first_gift_date: Date | null
    last_gift_date: Date | null
    pmm: string
    exclude: boolean | null
    deceased: boolean | null
    contact_phone_type: $Enums.ContactPhoneType | null
    phone_restrictions: string | null
    email_restrictions: string | null
    communication_restrictions: string | null
    subscription_events_in_person: $Enums.SubscriptionPreference | null
    subscription_events_magazine: $Enums.SubscriptionPreference | null
    communication_preference: $Enums.CommunicationPreference | null
    is_deleted: boolean
    deleted_at: Date | null
    created_at: Date
    updated_at: Date
    attendance_lable: boolean | null
    donation_lable: boolean | null
    total_invitations: number | null
    total_attendance: number | null
    last_invitation_attendance: boolean | null
    invitation_acceptance_rate: number | null
    ml_score: number | null
    _count: DonorCountAggregateOutputType | null
    _avg: DonorAvgAggregateOutputType | null
    _sum: DonorSumAggregateOutputType | null
    _min: DonorMinAggregateOutputType | null
    _max: DonorMaxAggregateOutputType | null
  }

  type GetDonorGroupByPayload<T extends DonorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonorGroupByOutputType[P]>
            : GetScalarType<T[P], DonorGroupByOutputType[P]>
        }
      >
    >


  export type DonorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    nick_name?: boolean
    last_name?: boolean
    organization_name?: boolean
    unit_number?: boolean
    street_address?: boolean
    city?: boolean
    total_donation_amount?: boolean
    total_pledge?: boolean
    largest_gift_amount?: boolean
    largest_gift_appeal?: boolean
    last_gift_amount?: boolean
    last_gift_request?: boolean
    last_gift_appeal?: boolean
    first_gift_date?: boolean
    last_gift_date?: boolean
    pmm?: boolean
    exclude?: boolean
    deceased?: boolean
    contact_phone_type?: boolean
    phone_restrictions?: boolean
    email_restrictions?: boolean
    communication_restrictions?: boolean
    subscription_events_in_person?: boolean
    subscription_events_magazine?: boolean
    communication_preference?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    attendance_lable?: boolean
    donation_lable?: boolean
    total_invitations?: boolean
    total_attendance?: boolean
    last_invitation_attendance?: boolean
    invitation_acceptance_rate?: boolean
    ml_score?: boolean
    tags?: boolean | Donor$tagsArgs<ExtArgs>
    events?: boolean | Donor$eventsArgs<ExtArgs>
    _count?: boolean | DonorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donor"]>



  export type DonorSelectScalar = {
    id?: boolean
    first_name?: boolean
    nick_name?: boolean
    last_name?: boolean
    organization_name?: boolean
    unit_number?: boolean
    street_address?: boolean
    city?: boolean
    total_donation_amount?: boolean
    total_pledge?: boolean
    largest_gift_amount?: boolean
    largest_gift_appeal?: boolean
    last_gift_amount?: boolean
    last_gift_request?: boolean
    last_gift_appeal?: boolean
    first_gift_date?: boolean
    last_gift_date?: boolean
    pmm?: boolean
    exclude?: boolean
    deceased?: boolean
    contact_phone_type?: boolean
    phone_restrictions?: boolean
    email_restrictions?: boolean
    communication_restrictions?: boolean
    subscription_events_in_person?: boolean
    subscription_events_magazine?: boolean
    communication_preference?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    attendance_lable?: boolean
    donation_lable?: boolean
    total_invitations?: boolean
    total_attendance?: boolean
    last_invitation_attendance?: boolean
    invitation_acceptance_rate?: boolean
    ml_score?: boolean
  }

  export type DonorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "first_name" | "nick_name" | "last_name" | "organization_name" | "unit_number" | "street_address" | "city" | "total_donation_amount" | "total_pledge" | "largest_gift_amount" | "largest_gift_appeal" | "last_gift_amount" | "last_gift_request" | "last_gift_appeal" | "first_gift_date" | "last_gift_date" | "pmm" | "exclude" | "deceased" | "contact_phone_type" | "phone_restrictions" | "email_restrictions" | "communication_restrictions" | "subscription_events_in_person" | "subscription_events_magazine" | "communication_preference" | "is_deleted" | "deleted_at" | "created_at" | "updated_at" | "attendance_lable" | "donation_lable" | "total_invitations" | "total_attendance" | "last_invitation_attendance" | "invitation_acceptance_rate" | "ml_score", ExtArgs["result"]["donor"]>
  export type DonorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tags?: boolean | Donor$tagsArgs<ExtArgs>
    events?: boolean | Donor$eventsArgs<ExtArgs>
    _count?: boolean | DonorCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $DonorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Donor"
    objects: {
      tags: Prisma.$DonorTagPayload<ExtArgs>[]
      events: Prisma.$DonorEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      first_name: string
      nick_name: string | null
      last_name: string
      organization_name: string | null
      unit_number: string | null
      street_address: string
      city: $Enums.City
      total_donation_amount: Prisma.Decimal | null
      total_pledge: Prisma.Decimal | null
      largest_gift_amount: Prisma.Decimal | null
      largest_gift_appeal: string | null
      last_gift_amount: Prisma.Decimal | null
      last_gift_request: string | null
      last_gift_appeal: string | null
      first_gift_date: Date | null
      last_gift_date: Date | null
      pmm: string
      exclude: boolean | null
      deceased: boolean | null
      contact_phone_type: $Enums.ContactPhoneType | null
      phone_restrictions: string | null
      email_restrictions: string | null
      communication_restrictions: string | null
      subscription_events_in_person: $Enums.SubscriptionPreference | null
      subscription_events_magazine: $Enums.SubscriptionPreference | null
      communication_preference: $Enums.CommunicationPreference | null
      is_deleted: boolean
      deleted_at: Date | null
      created_at: Date
      updated_at: Date
      attendance_lable: boolean | null
      donation_lable: boolean | null
      total_invitations: number | null
      total_attendance: number | null
      last_invitation_attendance: boolean | null
      invitation_acceptance_rate: number | null
      ml_score: number | null
    }, ExtArgs["result"]["donor"]>
    composites: {}
  }

  type DonorGetPayload<S extends boolean | null | undefined | DonorDefaultArgs> = $Result.GetResult<Prisma.$DonorPayload, S>

  type DonorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DonorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonorCountAggregateInputType | true
    }

  export interface DonorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Donor'], meta: { name: 'Donor' } }
    /**
     * Find zero or one Donor that matches the filter.
     * @param {DonorFindUniqueArgs} args - Arguments to find a Donor
     * @example
     * // Get one Donor
     * const donor = await prisma.donor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DonorFindUniqueArgs>(args: SelectSubset<T, DonorFindUniqueArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Donor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DonorFindUniqueOrThrowArgs} args - Arguments to find a Donor
     * @example
     * // Get one Donor
     * const donor = await prisma.donor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DonorFindUniqueOrThrowArgs>(args: SelectSubset<T, DonorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Donor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorFindFirstArgs} args - Arguments to find a Donor
     * @example
     * // Get one Donor
     * const donor = await prisma.donor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DonorFindFirstArgs>(args?: SelectSubset<T, DonorFindFirstArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Donor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorFindFirstOrThrowArgs} args - Arguments to find a Donor
     * @example
     * // Get one Donor
     * const donor = await prisma.donor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DonorFindFirstOrThrowArgs>(args?: SelectSubset<T, DonorFindFirstOrThrowArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Donors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Donors
     * const donors = await prisma.donor.findMany()
     * 
     * // Get first 10 Donors
     * const donors = await prisma.donor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const donorWithIdOnly = await prisma.donor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DonorFindManyArgs>(args?: SelectSubset<T, DonorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Donor.
     * @param {DonorCreateArgs} args - Arguments to create a Donor.
     * @example
     * // Create one Donor
     * const Donor = await prisma.donor.create({
     *   data: {
     *     // ... data to create a Donor
     *   }
     * })
     * 
     */
    create<T extends DonorCreateArgs>(args: SelectSubset<T, DonorCreateArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Donors.
     * @param {DonorCreateManyArgs} args - Arguments to create many Donors.
     * @example
     * // Create many Donors
     * const donor = await prisma.donor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DonorCreateManyArgs>(args?: SelectSubset<T, DonorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Donor.
     * @param {DonorDeleteArgs} args - Arguments to delete one Donor.
     * @example
     * // Delete one Donor
     * const Donor = await prisma.donor.delete({
     *   where: {
     *     // ... filter to delete one Donor
     *   }
     * })
     * 
     */
    delete<T extends DonorDeleteArgs>(args: SelectSubset<T, DonorDeleteArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Donor.
     * @param {DonorUpdateArgs} args - Arguments to update one Donor.
     * @example
     * // Update one Donor
     * const donor = await prisma.donor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DonorUpdateArgs>(args: SelectSubset<T, DonorUpdateArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Donors.
     * @param {DonorDeleteManyArgs} args - Arguments to filter Donors to delete.
     * @example
     * // Delete a few Donors
     * const { count } = await prisma.donor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DonorDeleteManyArgs>(args?: SelectSubset<T, DonorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Donors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Donors
     * const donor = await prisma.donor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DonorUpdateManyArgs>(args: SelectSubset<T, DonorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Donor.
     * @param {DonorUpsertArgs} args - Arguments to update or create a Donor.
     * @example
     * // Update or create a Donor
     * const donor = await prisma.donor.upsert({
     *   create: {
     *     // ... data to create a Donor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Donor we want to update
     *   }
     * })
     */
    upsert<T extends DonorUpsertArgs>(args: SelectSubset<T, DonorUpsertArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Donors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorCountArgs} args - Arguments to filter Donors to count.
     * @example
     * // Count the number of Donors
     * const count = await prisma.donor.count({
     *   where: {
     *     // ... the filter for the Donors we want to count
     *   }
     * })
    **/
    count<T extends DonorCountArgs>(
      args?: Subset<T, DonorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Donor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonorAggregateArgs>(args: Subset<T, DonorAggregateArgs>): Prisma.PrismaPromise<GetDonorAggregateType<T>>

    /**
     * Group by Donor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DonorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DonorGroupByArgs['orderBy'] }
        : { orderBy?: DonorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DonorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Donor model
   */
  readonly fields: DonorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Donor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DonorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tags<T extends Donor$tagsArgs<ExtArgs> = {}>(args?: Subset<T, Donor$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    events<T extends Donor$eventsArgs<ExtArgs> = {}>(args?: Subset<T, Donor$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Donor model
   */ 
  interface DonorFieldRefs {
    readonly id: FieldRef<"Donor", 'String'>
    readonly first_name: FieldRef<"Donor", 'String'>
    readonly nick_name: FieldRef<"Donor", 'String'>
    readonly last_name: FieldRef<"Donor", 'String'>
    readonly organization_name: FieldRef<"Donor", 'String'>
    readonly unit_number: FieldRef<"Donor", 'String'>
    readonly street_address: FieldRef<"Donor", 'String'>
    readonly city: FieldRef<"Donor", 'City'>
    readonly total_donation_amount: FieldRef<"Donor", 'Decimal'>
    readonly total_pledge: FieldRef<"Donor", 'Decimal'>
    readonly largest_gift_amount: FieldRef<"Donor", 'Decimal'>
    readonly largest_gift_appeal: FieldRef<"Donor", 'String'>
    readonly last_gift_amount: FieldRef<"Donor", 'Decimal'>
    readonly last_gift_request: FieldRef<"Donor", 'String'>
    readonly last_gift_appeal: FieldRef<"Donor", 'String'>
    readonly first_gift_date: FieldRef<"Donor", 'DateTime'>
    readonly last_gift_date: FieldRef<"Donor", 'DateTime'>
    readonly pmm: FieldRef<"Donor", 'String'>
    readonly exclude: FieldRef<"Donor", 'Boolean'>
    readonly deceased: FieldRef<"Donor", 'Boolean'>
    readonly contact_phone_type: FieldRef<"Donor", 'ContactPhoneType'>
    readonly phone_restrictions: FieldRef<"Donor", 'String'>
    readonly email_restrictions: FieldRef<"Donor", 'String'>
    readonly communication_restrictions: FieldRef<"Donor", 'String'>
    readonly subscription_events_in_person: FieldRef<"Donor", 'SubscriptionPreference'>
    readonly subscription_events_magazine: FieldRef<"Donor", 'SubscriptionPreference'>
    readonly communication_preference: FieldRef<"Donor", 'CommunicationPreference'>
    readonly is_deleted: FieldRef<"Donor", 'Boolean'>
    readonly deleted_at: FieldRef<"Donor", 'DateTime'>
    readonly created_at: FieldRef<"Donor", 'DateTime'>
    readonly updated_at: FieldRef<"Donor", 'DateTime'>
    readonly attendance_lable: FieldRef<"Donor", 'Boolean'>
    readonly donation_lable: FieldRef<"Donor", 'Boolean'>
    readonly total_invitations: FieldRef<"Donor", 'Int'>
    readonly total_attendance: FieldRef<"Donor", 'Int'>
    readonly last_invitation_attendance: FieldRef<"Donor", 'Boolean'>
    readonly invitation_acceptance_rate: FieldRef<"Donor", 'Float'>
    readonly ml_score: FieldRef<"Donor", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Donor findUnique
   */
  export type DonorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donor to fetch.
     */
    where: DonorWhereUniqueInput
  }

  /**
   * Donor findUniqueOrThrow
   */
  export type DonorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donor to fetch.
     */
    where: DonorWhereUniqueInput
  }

  /**
   * Donor findFirst
   */
  export type DonorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donor to fetch.
     */
    where?: DonorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donors to fetch.
     */
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Donors.
     */
    cursor?: DonorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Donors.
     */
    distinct?: DonorScalarFieldEnum | DonorScalarFieldEnum[]
  }

  /**
   * Donor findFirstOrThrow
   */
  export type DonorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donor to fetch.
     */
    where?: DonorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donors to fetch.
     */
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Donors.
     */
    cursor?: DonorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Donors.
     */
    distinct?: DonorScalarFieldEnum | DonorScalarFieldEnum[]
  }

  /**
   * Donor findMany
   */
  export type DonorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donors to fetch.
     */
    where?: DonorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donors to fetch.
     */
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Donors.
     */
    cursor?: DonorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donors.
     */
    skip?: number
    distinct?: DonorScalarFieldEnum | DonorScalarFieldEnum[]
  }

  /**
   * Donor create
   */
  export type DonorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * The data needed to create a Donor.
     */
    data: XOR<DonorCreateInput, DonorUncheckedCreateInput>
  }

  /**
   * Donor createMany
   */
  export type DonorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Donors.
     */
    data: DonorCreateManyInput | DonorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Donor update
   */
  export type DonorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * The data needed to update a Donor.
     */
    data: XOR<DonorUpdateInput, DonorUncheckedUpdateInput>
    /**
     * Choose, which Donor to update.
     */
    where: DonorWhereUniqueInput
  }

  /**
   * Donor updateMany
   */
  export type DonorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Donors.
     */
    data: XOR<DonorUpdateManyMutationInput, DonorUncheckedUpdateManyInput>
    /**
     * Filter which Donors to update
     */
    where?: DonorWhereInput
    /**
     * Limit how many Donors to update.
     */
    limit?: number
  }

  /**
   * Donor upsert
   */
  export type DonorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * The filter to search for the Donor to update in case it exists.
     */
    where: DonorWhereUniqueInput
    /**
     * In case the Donor found by the `where` argument doesn't exist, create a new Donor with this data.
     */
    create: XOR<DonorCreateInput, DonorUncheckedCreateInput>
    /**
     * In case the Donor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DonorUpdateInput, DonorUncheckedUpdateInput>
  }

  /**
   * Donor delete
   */
  export type DonorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter which Donor to delete.
     */
    where: DonorWhereUniqueInput
  }

  /**
   * Donor deleteMany
   */
  export type DonorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Donors to delete
     */
    where?: DonorWhereInput
    /**
     * Limit how many Donors to delete.
     */
    limit?: number
  }

  /**
   * Donor.tags
   */
  export type Donor$tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    where?: DonorTagWhereInput
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    cursor?: DonorTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * Donor.events
   */
  export type Donor$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    where?: DonorEventWhereInput
    orderBy?: DonorEventOrderByWithRelationInput | DonorEventOrderByWithRelationInput[]
    cursor?: DonorEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorEventScalarFieldEnum | DonorEventScalarFieldEnum[]
  }

  /**
   * Donor without action
   */
  export type DonorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
  }


  /**
   * Model DonorTag
   */

  export type AggregateDonorTag = {
    _count: DonorTagCountAggregateOutputType | null
    _min: DonorTagMinAggregateOutputType | null
    _max: DonorTagMaxAggregateOutputType | null
  }

  export type DonorTagMinAggregateOutputType = {
    donor_id: string | null
    tag_id: string | null
    created_at: Date | null
  }

  export type DonorTagMaxAggregateOutputType = {
    donor_id: string | null
    tag_id: string | null
    created_at: Date | null
  }

  export type DonorTagCountAggregateOutputType = {
    donor_id: number
    tag_id: number
    created_at: number
    _all: number
  }


  export type DonorTagMinAggregateInputType = {
    donor_id?: true
    tag_id?: true
    created_at?: true
  }

  export type DonorTagMaxAggregateInputType = {
    donor_id?: true
    tag_id?: true
    created_at?: true
  }

  export type DonorTagCountAggregateInputType = {
    donor_id?: true
    tag_id?: true
    created_at?: true
    _all?: true
  }

  export type DonorTagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorTag to aggregate.
     */
    where?: DonorTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorTags to fetch.
     */
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DonorTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DonorTags
    **/
    _count?: true | DonorTagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonorTagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonorTagMaxAggregateInputType
  }

  export type GetDonorTagAggregateType<T extends DonorTagAggregateArgs> = {
        [P in keyof T & keyof AggregateDonorTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonorTag[P]>
      : GetScalarType<T[P], AggregateDonorTag[P]>
  }




  export type DonorTagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorTagWhereInput
    orderBy?: DonorTagOrderByWithAggregationInput | DonorTagOrderByWithAggregationInput[]
    by: DonorTagScalarFieldEnum[] | DonorTagScalarFieldEnum
    having?: DonorTagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonorTagCountAggregateInputType | true
    _min?: DonorTagMinAggregateInputType
    _max?: DonorTagMaxAggregateInputType
  }

  export type DonorTagGroupByOutputType = {
    donor_id: string
    tag_id: string
    created_at: Date
    _count: DonorTagCountAggregateOutputType | null
    _min: DonorTagMinAggregateOutputType | null
    _max: DonorTagMaxAggregateOutputType | null
  }

  type GetDonorTagGroupByPayload<T extends DonorTagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonorTagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonorTagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonorTagGroupByOutputType[P]>
            : GetScalarType<T[P], DonorTagGroupByOutputType[P]>
        }
      >
    >


  export type DonorTagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    donor_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donorTag"]>



  export type DonorTagSelectScalar = {
    donor_id?: boolean
    tag_id?: boolean
    created_at?: boolean
  }

  export type DonorTagOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"donor_id" | "tag_id" | "created_at", ExtArgs["result"]["donorTag"]>
  export type DonorTagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }

  export type $DonorTagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DonorTag"
    objects: {
      donor: Prisma.$DonorPayload<ExtArgs>
      tag: Prisma.$TagPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      donor_id: string
      tag_id: string
      created_at: Date
    }, ExtArgs["result"]["donorTag"]>
    composites: {}
  }

  type DonorTagGetPayload<S extends boolean | null | undefined | DonorTagDefaultArgs> = $Result.GetResult<Prisma.$DonorTagPayload, S>

  type DonorTagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DonorTagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonorTagCountAggregateInputType | true
    }

  export interface DonorTagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DonorTag'], meta: { name: 'DonorTag' } }
    /**
     * Find zero or one DonorTag that matches the filter.
     * @param {DonorTagFindUniqueArgs} args - Arguments to find a DonorTag
     * @example
     * // Get one DonorTag
     * const donorTag = await prisma.donorTag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DonorTagFindUniqueArgs>(args: SelectSubset<T, DonorTagFindUniqueArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DonorTag that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DonorTagFindUniqueOrThrowArgs} args - Arguments to find a DonorTag
     * @example
     * // Get one DonorTag
     * const donorTag = await prisma.donorTag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DonorTagFindUniqueOrThrowArgs>(args: SelectSubset<T, DonorTagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DonorTag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagFindFirstArgs} args - Arguments to find a DonorTag
     * @example
     * // Get one DonorTag
     * const donorTag = await prisma.donorTag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DonorTagFindFirstArgs>(args?: SelectSubset<T, DonorTagFindFirstArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DonorTag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagFindFirstOrThrowArgs} args - Arguments to find a DonorTag
     * @example
     * // Get one DonorTag
     * const donorTag = await prisma.donorTag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DonorTagFindFirstOrThrowArgs>(args?: SelectSubset<T, DonorTagFindFirstOrThrowArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DonorTags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DonorTags
     * const donorTags = await prisma.donorTag.findMany()
     * 
     * // Get first 10 DonorTags
     * const donorTags = await prisma.donorTag.findMany({ take: 10 })
     * 
     * // Only select the `donor_id`
     * const donorTagWithDonor_idOnly = await prisma.donorTag.findMany({ select: { donor_id: true } })
     * 
     */
    findMany<T extends DonorTagFindManyArgs>(args?: SelectSubset<T, DonorTagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DonorTag.
     * @param {DonorTagCreateArgs} args - Arguments to create a DonorTag.
     * @example
     * // Create one DonorTag
     * const DonorTag = await prisma.donorTag.create({
     *   data: {
     *     // ... data to create a DonorTag
     *   }
     * })
     * 
     */
    create<T extends DonorTagCreateArgs>(args: SelectSubset<T, DonorTagCreateArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DonorTags.
     * @param {DonorTagCreateManyArgs} args - Arguments to create many DonorTags.
     * @example
     * // Create many DonorTags
     * const donorTag = await prisma.donorTag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DonorTagCreateManyArgs>(args?: SelectSubset<T, DonorTagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DonorTag.
     * @param {DonorTagDeleteArgs} args - Arguments to delete one DonorTag.
     * @example
     * // Delete one DonorTag
     * const DonorTag = await prisma.donorTag.delete({
     *   where: {
     *     // ... filter to delete one DonorTag
     *   }
     * })
     * 
     */
    delete<T extends DonorTagDeleteArgs>(args: SelectSubset<T, DonorTagDeleteArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DonorTag.
     * @param {DonorTagUpdateArgs} args - Arguments to update one DonorTag.
     * @example
     * // Update one DonorTag
     * const donorTag = await prisma.donorTag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DonorTagUpdateArgs>(args: SelectSubset<T, DonorTagUpdateArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DonorTags.
     * @param {DonorTagDeleteManyArgs} args - Arguments to filter DonorTags to delete.
     * @example
     * // Delete a few DonorTags
     * const { count } = await prisma.donorTag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DonorTagDeleteManyArgs>(args?: SelectSubset<T, DonorTagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DonorTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DonorTags
     * const donorTag = await prisma.donorTag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DonorTagUpdateManyArgs>(args: SelectSubset<T, DonorTagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DonorTag.
     * @param {DonorTagUpsertArgs} args - Arguments to update or create a DonorTag.
     * @example
     * // Update or create a DonorTag
     * const donorTag = await prisma.donorTag.upsert({
     *   create: {
     *     // ... data to create a DonorTag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DonorTag we want to update
     *   }
     * })
     */
    upsert<T extends DonorTagUpsertArgs>(args: SelectSubset<T, DonorTagUpsertArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DonorTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagCountArgs} args - Arguments to filter DonorTags to count.
     * @example
     * // Count the number of DonorTags
     * const count = await prisma.donorTag.count({
     *   where: {
     *     // ... the filter for the DonorTags we want to count
     *   }
     * })
    **/
    count<T extends DonorTagCountArgs>(
      args?: Subset<T, DonorTagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonorTagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DonorTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonorTagAggregateArgs>(args: Subset<T, DonorTagAggregateArgs>): Prisma.PrismaPromise<GetDonorTagAggregateType<T>>

    /**
     * Group by DonorTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DonorTagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DonorTagGroupByArgs['orderBy'] }
        : { orderBy?: DonorTagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DonorTagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonorTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DonorTag model
   */
  readonly fields: DonorTagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DonorTag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DonorTagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donor<T extends DonorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DonorDefaultArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tag<T extends TagDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TagDefaultArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DonorTag model
   */ 
  interface DonorTagFieldRefs {
    readonly donor_id: FieldRef<"DonorTag", 'String'>
    readonly tag_id: FieldRef<"DonorTag", 'String'>
    readonly created_at: FieldRef<"DonorTag", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DonorTag findUnique
   */
  export type DonorTagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTag to fetch.
     */
    where: DonorTagWhereUniqueInput
  }

  /**
   * DonorTag findUniqueOrThrow
   */
  export type DonorTagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTag to fetch.
     */
    where: DonorTagWhereUniqueInput
  }

  /**
   * DonorTag findFirst
   */
  export type DonorTagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTag to fetch.
     */
    where?: DonorTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorTags to fetch.
     */
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorTags.
     */
    cursor?: DonorTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorTags.
     */
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * DonorTag findFirstOrThrow
   */
  export type DonorTagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTag to fetch.
     */
    where?: DonorTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorTags to fetch.
     */
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorTags.
     */
    cursor?: DonorTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorTags.
     */
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * DonorTag findMany
   */
  export type DonorTagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTags to fetch.
     */
    where?: DonorTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorTags to fetch.
     */
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DonorTags.
     */
    cursor?: DonorTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorTags.
     */
    skip?: number
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * DonorTag create
   */
  export type DonorTagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * The data needed to create a DonorTag.
     */
    data: XOR<DonorTagCreateInput, DonorTagUncheckedCreateInput>
  }

  /**
   * DonorTag createMany
   */
  export type DonorTagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DonorTags.
     */
    data: DonorTagCreateManyInput | DonorTagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DonorTag update
   */
  export type DonorTagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * The data needed to update a DonorTag.
     */
    data: XOR<DonorTagUpdateInput, DonorTagUncheckedUpdateInput>
    /**
     * Choose, which DonorTag to update.
     */
    where: DonorTagWhereUniqueInput
  }

  /**
   * DonorTag updateMany
   */
  export type DonorTagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DonorTags.
     */
    data: XOR<DonorTagUpdateManyMutationInput, DonorTagUncheckedUpdateManyInput>
    /**
     * Filter which DonorTags to update
     */
    where?: DonorTagWhereInput
    /**
     * Limit how many DonorTags to update.
     */
    limit?: number
  }

  /**
   * DonorTag upsert
   */
  export type DonorTagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * The filter to search for the DonorTag to update in case it exists.
     */
    where: DonorTagWhereUniqueInput
    /**
     * In case the DonorTag found by the `where` argument doesn't exist, create a new DonorTag with this data.
     */
    create: XOR<DonorTagCreateInput, DonorTagUncheckedCreateInput>
    /**
     * In case the DonorTag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DonorTagUpdateInput, DonorTagUncheckedUpdateInput>
  }

  /**
   * DonorTag delete
   */
  export type DonorTagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter which DonorTag to delete.
     */
    where: DonorTagWhereUniqueInput
  }

  /**
   * DonorTag deleteMany
   */
  export type DonorTagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorTags to delete
     */
    where?: DonorTagWhereInput
    /**
     * Limit how many DonorTags to delete.
     */
    limit?: number
  }

  /**
   * DonorTag without action
   */
  export type DonorTagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
  }


  /**
   * Model Event
   */

  export type AggregateEvent = {
    _count: EventCountAggregateOutputType | null
    _avg: EventAvgAggregateOutputType | null
    _sum: EventSumAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  export type EventAvgAggregateOutputType = {
    capacity: number | null
    created_by: number | null
  }

  export type EventSumAggregateOutputType = {
    capacity: number | null
    created_by: number | null
  }

  export type EventMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    date: Date | null
    location: string | null
    status: $Enums.EventStatus | null
    capacity: number | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    created_by: number | null
  }

  export type EventMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    date: Date | null
    location: string | null
    status: $Enums.EventStatus | null
    capacity: number | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    created_by: number | null
  }

  export type EventCountAggregateOutputType = {
    id: number
    name: number
    description: number
    date: number
    location: number
    status: number
    capacity: number
    is_deleted: number
    deleted_at: number
    created_at: number
    updated_at: number
    created_by: number
    _all: number
  }


  export type EventAvgAggregateInputType = {
    capacity?: true
    created_by?: true
  }

  export type EventSumAggregateInputType = {
    capacity?: true
    created_by?: true
  }

  export type EventMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    date?: true
    location?: true
    status?: true
    capacity?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    created_by?: true
  }

  export type EventMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    date?: true
    location?: true
    status?: true
    capacity?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    created_by?: true
  }

  export type EventCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    date?: true
    location?: true
    status?: true
    capacity?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    created_by?: true
    _all?: true
  }

  export type EventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Event to aggregate.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Events
    **/
    _count?: true | EventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventMaxAggregateInputType
  }

  export type GetEventAggregateType<T extends EventAggregateArgs> = {
        [P in keyof T & keyof AggregateEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvent[P]>
      : GetScalarType<T[P], AggregateEvent[P]>
  }




  export type EventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
    orderBy?: EventOrderByWithAggregationInput | EventOrderByWithAggregationInput[]
    by: EventScalarFieldEnum[] | EventScalarFieldEnum
    having?: EventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventCountAggregateInputType | true
    _avg?: EventAvgAggregateInputType
    _sum?: EventSumAggregateInputType
    _min?: EventMinAggregateInputType
    _max?: EventMaxAggregateInputType
  }

  export type EventGroupByOutputType = {
    id: string
    name: string
    description: string | null
    date: Date | null
    location: string | null
    status: $Enums.EventStatus
    capacity: number | null
    is_deleted: boolean
    deleted_at: Date | null
    created_at: Date
    updated_at: Date
    created_by: number | null
    _count: EventCountAggregateOutputType | null
    _avg: EventAvgAggregateOutputType | null
    _sum: EventSumAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  type GetEventGroupByPayload<T extends EventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventGroupByOutputType[P]>
            : GetScalarType<T[P], EventGroupByOutputType[P]>
        }
      >
    >


  export type EventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    date?: boolean
    location?: boolean
    status?: boolean
    capacity?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_by?: boolean
    donors?: boolean | Event$donorsArgs<ExtArgs>
    tags?: boolean | Event$tagsArgs<ExtArgs>
    editHistory?: boolean | Event$editHistoryArgs<ExtArgs>
    createdBy?: boolean | Event$createdByArgs<ExtArgs>
    collaborators?: boolean | Event$collaboratorsArgs<ExtArgs>
    _count?: boolean | EventCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["event"]>



  export type EventSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    date?: boolean
    location?: boolean
    status?: boolean
    capacity?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_by?: boolean
  }

  export type EventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "date" | "location" | "status" | "capacity" | "is_deleted" | "deleted_at" | "created_at" | "updated_at" | "created_by", ExtArgs["result"]["event"]>
  export type EventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donors?: boolean | Event$donorsArgs<ExtArgs>
    tags?: boolean | Event$tagsArgs<ExtArgs>
    editHistory?: boolean | Event$editHistoryArgs<ExtArgs>
    createdBy?: boolean | Event$createdByArgs<ExtArgs>
    collaborators?: boolean | Event$collaboratorsArgs<ExtArgs>
    _count?: boolean | EventCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $EventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Event"
    objects: {
      donors: Prisma.$DonorEventPayload<ExtArgs>[]
      tags: Prisma.$TagPayload<ExtArgs>[]
      editHistory: Prisma.$EventEditHistoryPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      collaborators: Prisma.$EventCollaboratorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      date: Date | null
      location: string | null
      status: $Enums.EventStatus
      capacity: number | null
      is_deleted: boolean
      deleted_at: Date | null
      created_at: Date
      updated_at: Date
      created_by: number | null
    }, ExtArgs["result"]["event"]>
    composites: {}
  }

  type EventGetPayload<S extends boolean | null | undefined | EventDefaultArgs> = $Result.GetResult<Prisma.$EventPayload, S>

  type EventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventCountAggregateInputType | true
    }

  export interface EventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Event'], meta: { name: 'Event' } }
    /**
     * Find zero or one Event that matches the filter.
     * @param {EventFindUniqueArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventFindUniqueArgs>(args: SelectSubset<T, EventFindUniqueArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Event that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventFindUniqueOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventFindUniqueOrThrowArgs>(args: SelectSubset<T, EventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventFindFirstArgs>(args?: SelectSubset<T, EventFindFirstArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventFindFirstOrThrowArgs>(args?: SelectSubset<T, EventFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Events
     * const events = await prisma.event.findMany()
     * 
     * // Get first 10 Events
     * const events = await prisma.event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventWithIdOnly = await prisma.event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventFindManyArgs>(args?: SelectSubset<T, EventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Event.
     * @param {EventCreateArgs} args - Arguments to create a Event.
     * @example
     * // Create one Event
     * const Event = await prisma.event.create({
     *   data: {
     *     // ... data to create a Event
     *   }
     * })
     * 
     */
    create<T extends EventCreateArgs>(args: SelectSubset<T, EventCreateArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Events.
     * @param {EventCreateManyArgs} args - Arguments to create many Events.
     * @example
     * // Create many Events
     * const event = await prisma.event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventCreateManyArgs>(args?: SelectSubset<T, EventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Event.
     * @param {EventDeleteArgs} args - Arguments to delete one Event.
     * @example
     * // Delete one Event
     * const Event = await prisma.event.delete({
     *   where: {
     *     // ... filter to delete one Event
     *   }
     * })
     * 
     */
    delete<T extends EventDeleteArgs>(args: SelectSubset<T, EventDeleteArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Event.
     * @param {EventUpdateArgs} args - Arguments to update one Event.
     * @example
     * // Update one Event
     * const event = await prisma.event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventUpdateArgs>(args: SelectSubset<T, EventUpdateArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Events.
     * @param {EventDeleteManyArgs} args - Arguments to filter Events to delete.
     * @example
     * // Delete a few Events
     * const { count } = await prisma.event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventDeleteManyArgs>(args?: SelectSubset<T, EventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Events
     * const event = await prisma.event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventUpdateManyArgs>(args: SelectSubset<T, EventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Event.
     * @param {EventUpsertArgs} args - Arguments to update or create a Event.
     * @example
     * // Update or create a Event
     * const event = await prisma.event.upsert({
     *   create: {
     *     // ... data to create a Event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Event we want to update
     *   }
     * })
     */
    upsert<T extends EventUpsertArgs>(args: SelectSubset<T, EventUpsertArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCountArgs} args - Arguments to filter Events to count.
     * @example
     * // Count the number of Events
     * const count = await prisma.event.count({
     *   where: {
     *     // ... the filter for the Events we want to count
     *   }
     * })
    **/
    count<T extends EventCountArgs>(
      args?: Subset<T, EventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventAggregateArgs>(args: Subset<T, EventAggregateArgs>): Prisma.PrismaPromise<GetEventAggregateType<T>>

    /**
     * Group by Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventGroupByArgs['orderBy'] }
        : { orderBy?: EventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Event model
   */
  readonly fields: EventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donors<T extends Event$donorsArgs<ExtArgs> = {}>(args?: Subset<T, Event$donorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tags<T extends Event$tagsArgs<ExtArgs> = {}>(args?: Subset<T, Event$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    editHistory<T extends Event$editHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Event$editHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Event$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Event$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    collaborators<T extends Event$collaboratorsArgs<ExtArgs> = {}>(args?: Subset<T, Event$collaboratorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Event model
   */ 
  interface EventFieldRefs {
    readonly id: FieldRef<"Event", 'String'>
    readonly name: FieldRef<"Event", 'String'>
    readonly description: FieldRef<"Event", 'String'>
    readonly date: FieldRef<"Event", 'DateTime'>
    readonly location: FieldRef<"Event", 'String'>
    readonly status: FieldRef<"Event", 'EventStatus'>
    readonly capacity: FieldRef<"Event", 'Int'>
    readonly is_deleted: FieldRef<"Event", 'Boolean'>
    readonly deleted_at: FieldRef<"Event", 'DateTime'>
    readonly created_at: FieldRef<"Event", 'DateTime'>
    readonly updated_at: FieldRef<"Event", 'DateTime'>
    readonly created_by: FieldRef<"Event", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Event findUnique
   */
  export type EventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event findUniqueOrThrow
   */
  export type EventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event findFirst
   */
  export type EventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Events.
     */
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event findFirstOrThrow
   */
  export type EventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Events.
     */
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event findMany
   */
  export type EventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Events to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event create
   */
  export type EventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The data needed to create a Event.
     */
    data: XOR<EventCreateInput, EventUncheckedCreateInput>
  }

  /**
   * Event createMany
   */
  export type EventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Events.
     */
    data: EventCreateManyInput | EventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Event update
   */
  export type EventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The data needed to update a Event.
     */
    data: XOR<EventUpdateInput, EventUncheckedUpdateInput>
    /**
     * Choose, which Event to update.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event updateMany
   */
  export type EventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Events.
     */
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyInput>
    /**
     * Filter which Events to update
     */
    where?: EventWhereInput
    /**
     * Limit how many Events to update.
     */
    limit?: number
  }

  /**
   * Event upsert
   */
  export type EventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The filter to search for the Event to update in case it exists.
     */
    where: EventWhereUniqueInput
    /**
     * In case the Event found by the `where` argument doesn't exist, create a new Event with this data.
     */
    create: XOR<EventCreateInput, EventUncheckedCreateInput>
    /**
     * In case the Event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventUpdateInput, EventUncheckedUpdateInput>
  }

  /**
   * Event delete
   */
  export type EventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter which Event to delete.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event deleteMany
   */
  export type EventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Events to delete
     */
    where?: EventWhereInput
    /**
     * Limit how many Events to delete.
     */
    limit?: number
  }

  /**
   * Event.donors
   */
  export type Event$donorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    where?: DonorEventWhereInput
    orderBy?: DonorEventOrderByWithRelationInput | DonorEventOrderByWithRelationInput[]
    cursor?: DonorEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorEventScalarFieldEnum | DonorEventScalarFieldEnum[]
  }

  /**
   * Event.tags
   */
  export type Event$tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    where?: TagWhereInput
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    cursor?: TagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Event.editHistory
   */
  export type Event$editHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    where?: EventEditHistoryWhereInput
    orderBy?: EventEditHistoryOrderByWithRelationInput | EventEditHistoryOrderByWithRelationInput[]
    cursor?: EventEditHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventEditHistoryScalarFieldEnum | EventEditHistoryScalarFieldEnum[]
  }

  /**
   * Event.createdBy
   */
  export type Event$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Event.collaborators
   */
  export type Event$collaboratorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    where?: EventCollaboratorWhereInput
    orderBy?: EventCollaboratorOrderByWithRelationInput | EventCollaboratorOrderByWithRelationInput[]
    cursor?: EventCollaboratorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventCollaboratorScalarFieldEnum | EventCollaboratorScalarFieldEnum[]
  }

  /**
   * Event without action
   */
  export type EventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
  }


  /**
   * Model EventCollaborator
   */

  export type AggregateEventCollaborator = {
    _count: EventCollaboratorCountAggregateOutputType | null
    _avg: EventCollaboratorAvgAggregateOutputType | null
    _sum: EventCollaboratorSumAggregateOutputType | null
    _min: EventCollaboratorMinAggregateOutputType | null
    _max: EventCollaboratorMaxAggregateOutputType | null
  }

  export type EventCollaboratorAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type EventCollaboratorSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type EventCollaboratorMinAggregateOutputType = {
    id: number | null
    eventId: string | null
    userId: number | null
  }

  export type EventCollaboratorMaxAggregateOutputType = {
    id: number | null
    eventId: string | null
    userId: number | null
  }

  export type EventCollaboratorCountAggregateOutputType = {
    id: number
    eventId: number
    userId: number
    _all: number
  }


  export type EventCollaboratorAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type EventCollaboratorSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type EventCollaboratorMinAggregateInputType = {
    id?: true
    eventId?: true
    userId?: true
  }

  export type EventCollaboratorMaxAggregateInputType = {
    id?: true
    eventId?: true
    userId?: true
  }

  export type EventCollaboratorCountAggregateInputType = {
    id?: true
    eventId?: true
    userId?: true
    _all?: true
  }

  export type EventCollaboratorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventCollaborator to aggregate.
     */
    where?: EventCollaboratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventCollaborators to fetch.
     */
    orderBy?: EventCollaboratorOrderByWithRelationInput | EventCollaboratorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventCollaboratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventCollaborators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventCollaborators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EventCollaborators
    **/
    _count?: true | EventCollaboratorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventCollaboratorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventCollaboratorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventCollaboratorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventCollaboratorMaxAggregateInputType
  }

  export type GetEventCollaboratorAggregateType<T extends EventCollaboratorAggregateArgs> = {
        [P in keyof T & keyof AggregateEventCollaborator]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEventCollaborator[P]>
      : GetScalarType<T[P], AggregateEventCollaborator[P]>
  }




  export type EventCollaboratorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventCollaboratorWhereInput
    orderBy?: EventCollaboratorOrderByWithAggregationInput | EventCollaboratorOrderByWithAggregationInput[]
    by: EventCollaboratorScalarFieldEnum[] | EventCollaboratorScalarFieldEnum
    having?: EventCollaboratorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventCollaboratorCountAggregateInputType | true
    _avg?: EventCollaboratorAvgAggregateInputType
    _sum?: EventCollaboratorSumAggregateInputType
    _min?: EventCollaboratorMinAggregateInputType
    _max?: EventCollaboratorMaxAggregateInputType
  }

  export type EventCollaboratorGroupByOutputType = {
    id: number
    eventId: string
    userId: number
    _count: EventCollaboratorCountAggregateOutputType | null
    _avg: EventCollaboratorAvgAggregateOutputType | null
    _sum: EventCollaboratorSumAggregateOutputType | null
    _min: EventCollaboratorMinAggregateOutputType | null
    _max: EventCollaboratorMaxAggregateOutputType | null
  }

  type GetEventCollaboratorGroupByPayload<T extends EventCollaboratorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventCollaboratorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventCollaboratorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventCollaboratorGroupByOutputType[P]>
            : GetScalarType<T[P], EventCollaboratorGroupByOutputType[P]>
        }
      >
    >


  export type EventCollaboratorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    userId?: boolean
    event?: boolean | EventDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventCollaborator"]>



  export type EventCollaboratorSelectScalar = {
    id?: boolean
    eventId?: boolean
    userId?: boolean
  }

  export type EventCollaboratorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "eventId" | "userId", ExtArgs["result"]["eventCollaborator"]>
  export type EventCollaboratorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | EventDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $EventCollaboratorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EventCollaborator"
    objects: {
      event: Prisma.$EventPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      eventId: string
      userId: number
    }, ExtArgs["result"]["eventCollaborator"]>
    composites: {}
  }

  type EventCollaboratorGetPayload<S extends boolean | null | undefined | EventCollaboratorDefaultArgs> = $Result.GetResult<Prisma.$EventCollaboratorPayload, S>

  type EventCollaboratorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventCollaboratorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventCollaboratorCountAggregateInputType | true
    }

  export interface EventCollaboratorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventCollaborator'], meta: { name: 'EventCollaborator' } }
    /**
     * Find zero or one EventCollaborator that matches the filter.
     * @param {EventCollaboratorFindUniqueArgs} args - Arguments to find a EventCollaborator
     * @example
     * // Get one EventCollaborator
     * const eventCollaborator = await prisma.eventCollaborator.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventCollaboratorFindUniqueArgs>(args: SelectSubset<T, EventCollaboratorFindUniqueArgs<ExtArgs>>): Prisma__EventCollaboratorClient<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EventCollaborator that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventCollaboratorFindUniqueOrThrowArgs} args - Arguments to find a EventCollaborator
     * @example
     * // Get one EventCollaborator
     * const eventCollaborator = await prisma.eventCollaborator.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventCollaboratorFindUniqueOrThrowArgs>(args: SelectSubset<T, EventCollaboratorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventCollaboratorClient<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventCollaborator that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCollaboratorFindFirstArgs} args - Arguments to find a EventCollaborator
     * @example
     * // Get one EventCollaborator
     * const eventCollaborator = await prisma.eventCollaborator.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventCollaboratorFindFirstArgs>(args?: SelectSubset<T, EventCollaboratorFindFirstArgs<ExtArgs>>): Prisma__EventCollaboratorClient<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventCollaborator that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCollaboratorFindFirstOrThrowArgs} args - Arguments to find a EventCollaborator
     * @example
     * // Get one EventCollaborator
     * const eventCollaborator = await prisma.eventCollaborator.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventCollaboratorFindFirstOrThrowArgs>(args?: SelectSubset<T, EventCollaboratorFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventCollaboratorClient<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EventCollaborators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCollaboratorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EventCollaborators
     * const eventCollaborators = await prisma.eventCollaborator.findMany()
     * 
     * // Get first 10 EventCollaborators
     * const eventCollaborators = await prisma.eventCollaborator.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventCollaboratorWithIdOnly = await prisma.eventCollaborator.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventCollaboratorFindManyArgs>(args?: SelectSubset<T, EventCollaboratorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EventCollaborator.
     * @param {EventCollaboratorCreateArgs} args - Arguments to create a EventCollaborator.
     * @example
     * // Create one EventCollaborator
     * const EventCollaborator = await prisma.eventCollaborator.create({
     *   data: {
     *     // ... data to create a EventCollaborator
     *   }
     * })
     * 
     */
    create<T extends EventCollaboratorCreateArgs>(args: SelectSubset<T, EventCollaboratorCreateArgs<ExtArgs>>): Prisma__EventCollaboratorClient<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EventCollaborators.
     * @param {EventCollaboratorCreateManyArgs} args - Arguments to create many EventCollaborators.
     * @example
     * // Create many EventCollaborators
     * const eventCollaborator = await prisma.eventCollaborator.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventCollaboratorCreateManyArgs>(args?: SelectSubset<T, EventCollaboratorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EventCollaborator.
     * @param {EventCollaboratorDeleteArgs} args - Arguments to delete one EventCollaborator.
     * @example
     * // Delete one EventCollaborator
     * const EventCollaborator = await prisma.eventCollaborator.delete({
     *   where: {
     *     // ... filter to delete one EventCollaborator
     *   }
     * })
     * 
     */
    delete<T extends EventCollaboratorDeleteArgs>(args: SelectSubset<T, EventCollaboratorDeleteArgs<ExtArgs>>): Prisma__EventCollaboratorClient<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EventCollaborator.
     * @param {EventCollaboratorUpdateArgs} args - Arguments to update one EventCollaborator.
     * @example
     * // Update one EventCollaborator
     * const eventCollaborator = await prisma.eventCollaborator.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventCollaboratorUpdateArgs>(args: SelectSubset<T, EventCollaboratorUpdateArgs<ExtArgs>>): Prisma__EventCollaboratorClient<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EventCollaborators.
     * @param {EventCollaboratorDeleteManyArgs} args - Arguments to filter EventCollaborators to delete.
     * @example
     * // Delete a few EventCollaborators
     * const { count } = await prisma.eventCollaborator.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventCollaboratorDeleteManyArgs>(args?: SelectSubset<T, EventCollaboratorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventCollaborators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCollaboratorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EventCollaborators
     * const eventCollaborator = await prisma.eventCollaborator.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventCollaboratorUpdateManyArgs>(args: SelectSubset<T, EventCollaboratorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EventCollaborator.
     * @param {EventCollaboratorUpsertArgs} args - Arguments to update or create a EventCollaborator.
     * @example
     * // Update or create a EventCollaborator
     * const eventCollaborator = await prisma.eventCollaborator.upsert({
     *   create: {
     *     // ... data to create a EventCollaborator
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EventCollaborator we want to update
     *   }
     * })
     */
    upsert<T extends EventCollaboratorUpsertArgs>(args: SelectSubset<T, EventCollaboratorUpsertArgs<ExtArgs>>): Prisma__EventCollaboratorClient<$Result.GetResult<Prisma.$EventCollaboratorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EventCollaborators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCollaboratorCountArgs} args - Arguments to filter EventCollaborators to count.
     * @example
     * // Count the number of EventCollaborators
     * const count = await prisma.eventCollaborator.count({
     *   where: {
     *     // ... the filter for the EventCollaborators we want to count
     *   }
     * })
    **/
    count<T extends EventCollaboratorCountArgs>(
      args?: Subset<T, EventCollaboratorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventCollaboratorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EventCollaborator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCollaboratorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventCollaboratorAggregateArgs>(args: Subset<T, EventCollaboratorAggregateArgs>): Prisma.PrismaPromise<GetEventCollaboratorAggregateType<T>>

    /**
     * Group by EventCollaborator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCollaboratorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventCollaboratorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventCollaboratorGroupByArgs['orderBy'] }
        : { orderBy?: EventCollaboratorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventCollaboratorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventCollaboratorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EventCollaborator model
   */
  readonly fields: EventCollaboratorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EventCollaborator.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventCollaboratorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    event<T extends EventDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EventDefaultArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EventCollaborator model
   */ 
  interface EventCollaboratorFieldRefs {
    readonly id: FieldRef<"EventCollaborator", 'Int'>
    readonly eventId: FieldRef<"EventCollaborator", 'String'>
    readonly userId: FieldRef<"EventCollaborator", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * EventCollaborator findUnique
   */
  export type EventCollaboratorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    /**
     * Filter, which EventCollaborator to fetch.
     */
    where: EventCollaboratorWhereUniqueInput
  }

  /**
   * EventCollaborator findUniqueOrThrow
   */
  export type EventCollaboratorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    /**
     * Filter, which EventCollaborator to fetch.
     */
    where: EventCollaboratorWhereUniqueInput
  }

  /**
   * EventCollaborator findFirst
   */
  export type EventCollaboratorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    /**
     * Filter, which EventCollaborator to fetch.
     */
    where?: EventCollaboratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventCollaborators to fetch.
     */
    orderBy?: EventCollaboratorOrderByWithRelationInput | EventCollaboratorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventCollaborators.
     */
    cursor?: EventCollaboratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventCollaborators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventCollaborators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventCollaborators.
     */
    distinct?: EventCollaboratorScalarFieldEnum | EventCollaboratorScalarFieldEnum[]
  }

  /**
   * EventCollaborator findFirstOrThrow
   */
  export type EventCollaboratorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    /**
     * Filter, which EventCollaborator to fetch.
     */
    where?: EventCollaboratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventCollaborators to fetch.
     */
    orderBy?: EventCollaboratorOrderByWithRelationInput | EventCollaboratorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventCollaborators.
     */
    cursor?: EventCollaboratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventCollaborators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventCollaborators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventCollaborators.
     */
    distinct?: EventCollaboratorScalarFieldEnum | EventCollaboratorScalarFieldEnum[]
  }

  /**
   * EventCollaborator findMany
   */
  export type EventCollaboratorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    /**
     * Filter, which EventCollaborators to fetch.
     */
    where?: EventCollaboratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventCollaborators to fetch.
     */
    orderBy?: EventCollaboratorOrderByWithRelationInput | EventCollaboratorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EventCollaborators.
     */
    cursor?: EventCollaboratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventCollaborators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventCollaborators.
     */
    skip?: number
    distinct?: EventCollaboratorScalarFieldEnum | EventCollaboratorScalarFieldEnum[]
  }

  /**
   * EventCollaborator create
   */
  export type EventCollaboratorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    /**
     * The data needed to create a EventCollaborator.
     */
    data: XOR<EventCollaboratorCreateInput, EventCollaboratorUncheckedCreateInput>
  }

  /**
   * EventCollaborator createMany
   */
  export type EventCollaboratorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EventCollaborators.
     */
    data: EventCollaboratorCreateManyInput | EventCollaboratorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EventCollaborator update
   */
  export type EventCollaboratorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    /**
     * The data needed to update a EventCollaborator.
     */
    data: XOR<EventCollaboratorUpdateInput, EventCollaboratorUncheckedUpdateInput>
    /**
     * Choose, which EventCollaborator to update.
     */
    where: EventCollaboratorWhereUniqueInput
  }

  /**
   * EventCollaborator updateMany
   */
  export type EventCollaboratorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EventCollaborators.
     */
    data: XOR<EventCollaboratorUpdateManyMutationInput, EventCollaboratorUncheckedUpdateManyInput>
    /**
     * Filter which EventCollaborators to update
     */
    where?: EventCollaboratorWhereInput
    /**
     * Limit how many EventCollaborators to update.
     */
    limit?: number
  }

  /**
   * EventCollaborator upsert
   */
  export type EventCollaboratorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    /**
     * The filter to search for the EventCollaborator to update in case it exists.
     */
    where: EventCollaboratorWhereUniqueInput
    /**
     * In case the EventCollaborator found by the `where` argument doesn't exist, create a new EventCollaborator with this data.
     */
    create: XOR<EventCollaboratorCreateInput, EventCollaboratorUncheckedCreateInput>
    /**
     * In case the EventCollaborator was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventCollaboratorUpdateInput, EventCollaboratorUncheckedUpdateInput>
  }

  /**
   * EventCollaborator delete
   */
  export type EventCollaboratorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
    /**
     * Filter which EventCollaborator to delete.
     */
    where: EventCollaboratorWhereUniqueInput
  }

  /**
   * EventCollaborator deleteMany
   */
  export type EventCollaboratorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventCollaborators to delete
     */
    where?: EventCollaboratorWhereInput
    /**
     * Limit how many EventCollaborators to delete.
     */
    limit?: number
  }

  /**
   * EventCollaborator without action
   */
  export type EventCollaboratorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCollaborator
     */
    select?: EventCollaboratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventCollaborator
     */
    omit?: EventCollaboratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventCollaboratorInclude<ExtArgs> | null
  }


  /**
   * Model DonorEvent
   */

  export type AggregateDonorEvent = {
    _count: DonorEventCountAggregateOutputType | null
    _min: DonorEventMinAggregateOutputType | null
    _max: DonorEventMaxAggregateOutputType | null
  }

  export type DonorEventMinAggregateOutputType = {
    donor_id: string | null
    event_id: string | null
    status: $Enums.ParticipationStatus | null
    counted_invitation: boolean | null
    counted_attendance: boolean | null
    decline_reason: string | null
    created_at: Date | null
  }

  export type DonorEventMaxAggregateOutputType = {
    donor_id: string | null
    event_id: string | null
    status: $Enums.ParticipationStatus | null
    counted_invitation: boolean | null
    counted_attendance: boolean | null
    decline_reason: string | null
    created_at: Date | null
  }

  export type DonorEventCountAggregateOutputType = {
    donor_id: number
    event_id: number
    status: number
    counted_invitation: number
    counted_attendance: number
    decline_reason: number
    created_at: number
    _all: number
  }


  export type DonorEventMinAggregateInputType = {
    donor_id?: true
    event_id?: true
    status?: true
    counted_invitation?: true
    counted_attendance?: true
    decline_reason?: true
    created_at?: true
  }

  export type DonorEventMaxAggregateInputType = {
    donor_id?: true
    event_id?: true
    status?: true
    counted_invitation?: true
    counted_attendance?: true
    decline_reason?: true
    created_at?: true
  }

  export type DonorEventCountAggregateInputType = {
    donor_id?: true
    event_id?: true
    status?: true
    counted_invitation?: true
    counted_attendance?: true
    decline_reason?: true
    created_at?: true
    _all?: true
  }

  export type DonorEventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorEvent to aggregate.
     */
    where?: DonorEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorEvents to fetch.
     */
    orderBy?: DonorEventOrderByWithRelationInput | DonorEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DonorEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DonorEvents
    **/
    _count?: true | DonorEventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonorEventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonorEventMaxAggregateInputType
  }

  export type GetDonorEventAggregateType<T extends DonorEventAggregateArgs> = {
        [P in keyof T & keyof AggregateDonorEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonorEvent[P]>
      : GetScalarType<T[P], AggregateDonorEvent[P]>
  }




  export type DonorEventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorEventWhereInput
    orderBy?: DonorEventOrderByWithAggregationInput | DonorEventOrderByWithAggregationInput[]
    by: DonorEventScalarFieldEnum[] | DonorEventScalarFieldEnum
    having?: DonorEventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonorEventCountAggregateInputType | true
    _min?: DonorEventMinAggregateInputType
    _max?: DonorEventMaxAggregateInputType
  }

  export type DonorEventGroupByOutputType = {
    donor_id: string
    event_id: string
    status: $Enums.ParticipationStatus | null
    counted_invitation: boolean
    counted_attendance: boolean
    decline_reason: string | null
    created_at: Date
    _count: DonorEventCountAggregateOutputType | null
    _min: DonorEventMinAggregateOutputType | null
    _max: DonorEventMaxAggregateOutputType | null
  }

  type GetDonorEventGroupByPayload<T extends DonorEventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonorEventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonorEventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonorEventGroupByOutputType[P]>
            : GetScalarType<T[P], DonorEventGroupByOutputType[P]>
        }
      >
    >


  export type DonorEventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    donor_id?: boolean
    event_id?: boolean
    status?: boolean
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: boolean
    created_at?: boolean
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    event?: boolean | EventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donorEvent"]>



  export type DonorEventSelectScalar = {
    donor_id?: boolean
    event_id?: boolean
    status?: boolean
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: boolean
    created_at?: boolean
  }

  export type DonorEventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"donor_id" | "event_id" | "status" | "counted_invitation" | "counted_attendance" | "decline_reason" | "created_at", ExtArgs["result"]["donorEvent"]>
  export type DonorEventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    event?: boolean | EventDefaultArgs<ExtArgs>
  }

  export type $DonorEventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DonorEvent"
    objects: {
      donor: Prisma.$DonorPayload<ExtArgs>
      event: Prisma.$EventPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      donor_id: string
      event_id: string
      status: $Enums.ParticipationStatus | null
      counted_invitation: boolean
      counted_attendance: boolean
      decline_reason: string | null
      created_at: Date
    }, ExtArgs["result"]["donorEvent"]>
    composites: {}
  }

  type DonorEventGetPayload<S extends boolean | null | undefined | DonorEventDefaultArgs> = $Result.GetResult<Prisma.$DonorEventPayload, S>

  type DonorEventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DonorEventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonorEventCountAggregateInputType | true
    }

  export interface DonorEventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DonorEvent'], meta: { name: 'DonorEvent' } }
    /**
     * Find zero or one DonorEvent that matches the filter.
     * @param {DonorEventFindUniqueArgs} args - Arguments to find a DonorEvent
     * @example
     * // Get one DonorEvent
     * const donorEvent = await prisma.donorEvent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DonorEventFindUniqueArgs>(args: SelectSubset<T, DonorEventFindUniqueArgs<ExtArgs>>): Prisma__DonorEventClient<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DonorEvent that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DonorEventFindUniqueOrThrowArgs} args - Arguments to find a DonorEvent
     * @example
     * // Get one DonorEvent
     * const donorEvent = await prisma.donorEvent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DonorEventFindUniqueOrThrowArgs>(args: SelectSubset<T, DonorEventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DonorEventClient<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DonorEvent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorEventFindFirstArgs} args - Arguments to find a DonorEvent
     * @example
     * // Get one DonorEvent
     * const donorEvent = await prisma.donorEvent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DonorEventFindFirstArgs>(args?: SelectSubset<T, DonorEventFindFirstArgs<ExtArgs>>): Prisma__DonorEventClient<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DonorEvent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorEventFindFirstOrThrowArgs} args - Arguments to find a DonorEvent
     * @example
     * // Get one DonorEvent
     * const donorEvent = await prisma.donorEvent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DonorEventFindFirstOrThrowArgs>(args?: SelectSubset<T, DonorEventFindFirstOrThrowArgs<ExtArgs>>): Prisma__DonorEventClient<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DonorEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorEventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DonorEvents
     * const donorEvents = await prisma.donorEvent.findMany()
     * 
     * // Get first 10 DonorEvents
     * const donorEvents = await prisma.donorEvent.findMany({ take: 10 })
     * 
     * // Only select the `donor_id`
     * const donorEventWithDonor_idOnly = await prisma.donorEvent.findMany({ select: { donor_id: true } })
     * 
     */
    findMany<T extends DonorEventFindManyArgs>(args?: SelectSubset<T, DonorEventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DonorEvent.
     * @param {DonorEventCreateArgs} args - Arguments to create a DonorEvent.
     * @example
     * // Create one DonorEvent
     * const DonorEvent = await prisma.donorEvent.create({
     *   data: {
     *     // ... data to create a DonorEvent
     *   }
     * })
     * 
     */
    create<T extends DonorEventCreateArgs>(args: SelectSubset<T, DonorEventCreateArgs<ExtArgs>>): Prisma__DonorEventClient<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DonorEvents.
     * @param {DonorEventCreateManyArgs} args - Arguments to create many DonorEvents.
     * @example
     * // Create many DonorEvents
     * const donorEvent = await prisma.donorEvent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DonorEventCreateManyArgs>(args?: SelectSubset<T, DonorEventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DonorEvent.
     * @param {DonorEventDeleteArgs} args - Arguments to delete one DonorEvent.
     * @example
     * // Delete one DonorEvent
     * const DonorEvent = await prisma.donorEvent.delete({
     *   where: {
     *     // ... filter to delete one DonorEvent
     *   }
     * })
     * 
     */
    delete<T extends DonorEventDeleteArgs>(args: SelectSubset<T, DonorEventDeleteArgs<ExtArgs>>): Prisma__DonorEventClient<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DonorEvent.
     * @param {DonorEventUpdateArgs} args - Arguments to update one DonorEvent.
     * @example
     * // Update one DonorEvent
     * const donorEvent = await prisma.donorEvent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DonorEventUpdateArgs>(args: SelectSubset<T, DonorEventUpdateArgs<ExtArgs>>): Prisma__DonorEventClient<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DonorEvents.
     * @param {DonorEventDeleteManyArgs} args - Arguments to filter DonorEvents to delete.
     * @example
     * // Delete a few DonorEvents
     * const { count } = await prisma.donorEvent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DonorEventDeleteManyArgs>(args?: SelectSubset<T, DonorEventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DonorEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorEventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DonorEvents
     * const donorEvent = await prisma.donorEvent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DonorEventUpdateManyArgs>(args: SelectSubset<T, DonorEventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DonorEvent.
     * @param {DonorEventUpsertArgs} args - Arguments to update or create a DonorEvent.
     * @example
     * // Update or create a DonorEvent
     * const donorEvent = await prisma.donorEvent.upsert({
     *   create: {
     *     // ... data to create a DonorEvent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DonorEvent we want to update
     *   }
     * })
     */
    upsert<T extends DonorEventUpsertArgs>(args: SelectSubset<T, DonorEventUpsertArgs<ExtArgs>>): Prisma__DonorEventClient<$Result.GetResult<Prisma.$DonorEventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DonorEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorEventCountArgs} args - Arguments to filter DonorEvents to count.
     * @example
     * // Count the number of DonorEvents
     * const count = await prisma.donorEvent.count({
     *   where: {
     *     // ... the filter for the DonorEvents we want to count
     *   }
     * })
    **/
    count<T extends DonorEventCountArgs>(
      args?: Subset<T, DonorEventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonorEventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DonorEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonorEventAggregateArgs>(args: Subset<T, DonorEventAggregateArgs>): Prisma.PrismaPromise<GetDonorEventAggregateType<T>>

    /**
     * Group by DonorEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorEventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DonorEventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DonorEventGroupByArgs['orderBy'] }
        : { orderBy?: DonorEventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DonorEventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonorEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DonorEvent model
   */
  readonly fields: DonorEventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DonorEvent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DonorEventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donor<T extends DonorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DonorDefaultArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    event<T extends EventDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EventDefaultArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DonorEvent model
   */ 
  interface DonorEventFieldRefs {
    readonly donor_id: FieldRef<"DonorEvent", 'String'>
    readonly event_id: FieldRef<"DonorEvent", 'String'>
    readonly status: FieldRef<"DonorEvent", 'ParticipationStatus'>
    readonly counted_invitation: FieldRef<"DonorEvent", 'Boolean'>
    readonly counted_attendance: FieldRef<"DonorEvent", 'Boolean'>
    readonly decline_reason: FieldRef<"DonorEvent", 'String'>
    readonly created_at: FieldRef<"DonorEvent", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DonorEvent findUnique
   */
  export type DonorEventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    /**
     * Filter, which DonorEvent to fetch.
     */
    where: DonorEventWhereUniqueInput
  }

  /**
   * DonorEvent findUniqueOrThrow
   */
  export type DonorEventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    /**
     * Filter, which DonorEvent to fetch.
     */
    where: DonorEventWhereUniqueInput
  }

  /**
   * DonorEvent findFirst
   */
  export type DonorEventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    /**
     * Filter, which DonorEvent to fetch.
     */
    where?: DonorEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorEvents to fetch.
     */
    orderBy?: DonorEventOrderByWithRelationInput | DonorEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorEvents.
     */
    cursor?: DonorEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorEvents.
     */
    distinct?: DonorEventScalarFieldEnum | DonorEventScalarFieldEnum[]
  }

  /**
   * DonorEvent findFirstOrThrow
   */
  export type DonorEventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    /**
     * Filter, which DonorEvent to fetch.
     */
    where?: DonorEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorEvents to fetch.
     */
    orderBy?: DonorEventOrderByWithRelationInput | DonorEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorEvents.
     */
    cursor?: DonorEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorEvents.
     */
    distinct?: DonorEventScalarFieldEnum | DonorEventScalarFieldEnum[]
  }

  /**
   * DonorEvent findMany
   */
  export type DonorEventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    /**
     * Filter, which DonorEvents to fetch.
     */
    where?: DonorEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorEvents to fetch.
     */
    orderBy?: DonorEventOrderByWithRelationInput | DonorEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DonorEvents.
     */
    cursor?: DonorEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorEvents.
     */
    skip?: number
    distinct?: DonorEventScalarFieldEnum | DonorEventScalarFieldEnum[]
  }

  /**
   * DonorEvent create
   */
  export type DonorEventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    /**
     * The data needed to create a DonorEvent.
     */
    data: XOR<DonorEventCreateInput, DonorEventUncheckedCreateInput>
  }

  /**
   * DonorEvent createMany
   */
  export type DonorEventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DonorEvents.
     */
    data: DonorEventCreateManyInput | DonorEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DonorEvent update
   */
  export type DonorEventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    /**
     * The data needed to update a DonorEvent.
     */
    data: XOR<DonorEventUpdateInput, DonorEventUncheckedUpdateInput>
    /**
     * Choose, which DonorEvent to update.
     */
    where: DonorEventWhereUniqueInput
  }

  /**
   * DonorEvent updateMany
   */
  export type DonorEventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DonorEvents.
     */
    data: XOR<DonorEventUpdateManyMutationInput, DonorEventUncheckedUpdateManyInput>
    /**
     * Filter which DonorEvents to update
     */
    where?: DonorEventWhereInput
    /**
     * Limit how many DonorEvents to update.
     */
    limit?: number
  }

  /**
   * DonorEvent upsert
   */
  export type DonorEventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    /**
     * The filter to search for the DonorEvent to update in case it exists.
     */
    where: DonorEventWhereUniqueInput
    /**
     * In case the DonorEvent found by the `where` argument doesn't exist, create a new DonorEvent with this data.
     */
    create: XOR<DonorEventCreateInput, DonorEventUncheckedCreateInput>
    /**
     * In case the DonorEvent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DonorEventUpdateInput, DonorEventUncheckedUpdateInput>
  }

  /**
   * DonorEvent delete
   */
  export type DonorEventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
    /**
     * Filter which DonorEvent to delete.
     */
    where: DonorEventWhereUniqueInput
  }

  /**
   * DonorEvent deleteMany
   */
  export type DonorEventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorEvents to delete
     */
    where?: DonorEventWhereInput
    /**
     * Limit how many DonorEvents to delete.
     */
    limit?: number
  }

  /**
   * DonorEvent without action
   */
  export type DonorEventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorEvent
     */
    select?: DonorEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorEvent
     */
    omit?: DonorEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorEventInclude<ExtArgs> | null
  }


  /**
   * Model EventEditHistory
   */

  export type AggregateEventEditHistory = {
    _count: EventEditHistoryCountAggregateOutputType | null
    _avg: EventEditHistoryAvgAggregateOutputType | null
    _sum: EventEditHistorySumAggregateOutputType | null
    _min: EventEditHistoryMinAggregateOutputType | null
    _max: EventEditHistoryMaxAggregateOutputType | null
  }

  export type EventEditHistoryAvgAggregateOutputType = {
    editor_id: number | null
  }

  export type EventEditHistorySumAggregateOutputType = {
    editor_id: number | null
  }

  export type EventEditHistoryMinAggregateOutputType = {
    id: string | null
    event_id: string | null
    editor_id: number | null
    edit_type: string | null
    old_value: string | null
    new_value: string | null
    created_at: Date | null
  }

  export type EventEditHistoryMaxAggregateOutputType = {
    id: string | null
    event_id: string | null
    editor_id: number | null
    edit_type: string | null
    old_value: string | null
    new_value: string | null
    created_at: Date | null
  }

  export type EventEditHistoryCountAggregateOutputType = {
    id: number
    event_id: number
    editor_id: number
    edit_type: number
    old_value: number
    new_value: number
    meta: number
    created_at: number
    _all: number
  }


  export type EventEditHistoryAvgAggregateInputType = {
    editor_id?: true
  }

  export type EventEditHistorySumAggregateInputType = {
    editor_id?: true
  }

  export type EventEditHistoryMinAggregateInputType = {
    id?: true
    event_id?: true
    editor_id?: true
    edit_type?: true
    old_value?: true
    new_value?: true
    created_at?: true
  }

  export type EventEditHistoryMaxAggregateInputType = {
    id?: true
    event_id?: true
    editor_id?: true
    edit_type?: true
    old_value?: true
    new_value?: true
    created_at?: true
  }

  export type EventEditHistoryCountAggregateInputType = {
    id?: true
    event_id?: true
    editor_id?: true
    edit_type?: true
    old_value?: true
    new_value?: true
    meta?: true
    created_at?: true
    _all?: true
  }

  export type EventEditHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventEditHistory to aggregate.
     */
    where?: EventEditHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventEditHistories to fetch.
     */
    orderBy?: EventEditHistoryOrderByWithRelationInput | EventEditHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventEditHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventEditHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventEditHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EventEditHistories
    **/
    _count?: true | EventEditHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventEditHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventEditHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventEditHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventEditHistoryMaxAggregateInputType
  }

  export type GetEventEditHistoryAggregateType<T extends EventEditHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateEventEditHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEventEditHistory[P]>
      : GetScalarType<T[P], AggregateEventEditHistory[P]>
  }




  export type EventEditHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventEditHistoryWhereInput
    orderBy?: EventEditHistoryOrderByWithAggregationInput | EventEditHistoryOrderByWithAggregationInput[]
    by: EventEditHistoryScalarFieldEnum[] | EventEditHistoryScalarFieldEnum
    having?: EventEditHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventEditHistoryCountAggregateInputType | true
    _avg?: EventEditHistoryAvgAggregateInputType
    _sum?: EventEditHistorySumAggregateInputType
    _min?: EventEditHistoryMinAggregateInputType
    _max?: EventEditHistoryMaxAggregateInputType
  }

  export type EventEditHistoryGroupByOutputType = {
    id: string
    event_id: string
    editor_id: number | null
    edit_type: string
    old_value: string | null
    new_value: string | null
    meta: JsonValue | null
    created_at: Date
    _count: EventEditHistoryCountAggregateOutputType | null
    _avg: EventEditHistoryAvgAggregateOutputType | null
    _sum: EventEditHistorySumAggregateOutputType | null
    _min: EventEditHistoryMinAggregateOutputType | null
    _max: EventEditHistoryMaxAggregateOutputType | null
  }

  type GetEventEditHistoryGroupByPayload<T extends EventEditHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventEditHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventEditHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventEditHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], EventEditHistoryGroupByOutputType[P]>
        }
      >
    >


  export type EventEditHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_id?: boolean
    editor_id?: boolean
    edit_type?: boolean
    old_value?: boolean
    new_value?: boolean
    meta?: boolean
    created_at?: boolean
    event?: boolean | EventDefaultArgs<ExtArgs>
    editor?: boolean | EventEditHistory$editorArgs<ExtArgs>
  }, ExtArgs["result"]["eventEditHistory"]>



  export type EventEditHistorySelectScalar = {
    id?: boolean
    event_id?: boolean
    editor_id?: boolean
    edit_type?: boolean
    old_value?: boolean
    new_value?: boolean
    meta?: boolean
    created_at?: boolean
  }

  export type EventEditHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "event_id" | "editor_id" | "edit_type" | "old_value" | "new_value" | "meta" | "created_at", ExtArgs["result"]["eventEditHistory"]>
  export type EventEditHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | EventDefaultArgs<ExtArgs>
    editor?: boolean | EventEditHistory$editorArgs<ExtArgs>
  }

  export type $EventEditHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EventEditHistory"
    objects: {
      event: Prisma.$EventPayload<ExtArgs>
      editor: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      event_id: string
      editor_id: number | null
      edit_type: string
      old_value: string | null
      new_value: string | null
      meta: Prisma.JsonValue | null
      created_at: Date
    }, ExtArgs["result"]["eventEditHistory"]>
    composites: {}
  }

  type EventEditHistoryGetPayload<S extends boolean | null | undefined | EventEditHistoryDefaultArgs> = $Result.GetResult<Prisma.$EventEditHistoryPayload, S>

  type EventEditHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventEditHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventEditHistoryCountAggregateInputType | true
    }

  export interface EventEditHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventEditHistory'], meta: { name: 'EventEditHistory' } }
    /**
     * Find zero or one EventEditHistory that matches the filter.
     * @param {EventEditHistoryFindUniqueArgs} args - Arguments to find a EventEditHistory
     * @example
     * // Get one EventEditHistory
     * const eventEditHistory = await prisma.eventEditHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventEditHistoryFindUniqueArgs>(args: SelectSubset<T, EventEditHistoryFindUniqueArgs<ExtArgs>>): Prisma__EventEditHistoryClient<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EventEditHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventEditHistoryFindUniqueOrThrowArgs} args - Arguments to find a EventEditHistory
     * @example
     * // Get one EventEditHistory
     * const eventEditHistory = await prisma.eventEditHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventEditHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, EventEditHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventEditHistoryClient<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventEditHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventEditHistoryFindFirstArgs} args - Arguments to find a EventEditHistory
     * @example
     * // Get one EventEditHistory
     * const eventEditHistory = await prisma.eventEditHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventEditHistoryFindFirstArgs>(args?: SelectSubset<T, EventEditHistoryFindFirstArgs<ExtArgs>>): Prisma__EventEditHistoryClient<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventEditHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventEditHistoryFindFirstOrThrowArgs} args - Arguments to find a EventEditHistory
     * @example
     * // Get one EventEditHistory
     * const eventEditHistory = await prisma.eventEditHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventEditHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, EventEditHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventEditHistoryClient<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EventEditHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventEditHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EventEditHistories
     * const eventEditHistories = await prisma.eventEditHistory.findMany()
     * 
     * // Get first 10 EventEditHistories
     * const eventEditHistories = await prisma.eventEditHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventEditHistoryWithIdOnly = await prisma.eventEditHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventEditHistoryFindManyArgs>(args?: SelectSubset<T, EventEditHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EventEditHistory.
     * @param {EventEditHistoryCreateArgs} args - Arguments to create a EventEditHistory.
     * @example
     * // Create one EventEditHistory
     * const EventEditHistory = await prisma.eventEditHistory.create({
     *   data: {
     *     // ... data to create a EventEditHistory
     *   }
     * })
     * 
     */
    create<T extends EventEditHistoryCreateArgs>(args: SelectSubset<T, EventEditHistoryCreateArgs<ExtArgs>>): Prisma__EventEditHistoryClient<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EventEditHistories.
     * @param {EventEditHistoryCreateManyArgs} args - Arguments to create many EventEditHistories.
     * @example
     * // Create many EventEditHistories
     * const eventEditHistory = await prisma.eventEditHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventEditHistoryCreateManyArgs>(args?: SelectSubset<T, EventEditHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EventEditHistory.
     * @param {EventEditHistoryDeleteArgs} args - Arguments to delete one EventEditHistory.
     * @example
     * // Delete one EventEditHistory
     * const EventEditHistory = await prisma.eventEditHistory.delete({
     *   where: {
     *     // ... filter to delete one EventEditHistory
     *   }
     * })
     * 
     */
    delete<T extends EventEditHistoryDeleteArgs>(args: SelectSubset<T, EventEditHistoryDeleteArgs<ExtArgs>>): Prisma__EventEditHistoryClient<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EventEditHistory.
     * @param {EventEditHistoryUpdateArgs} args - Arguments to update one EventEditHistory.
     * @example
     * // Update one EventEditHistory
     * const eventEditHistory = await prisma.eventEditHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventEditHistoryUpdateArgs>(args: SelectSubset<T, EventEditHistoryUpdateArgs<ExtArgs>>): Prisma__EventEditHistoryClient<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EventEditHistories.
     * @param {EventEditHistoryDeleteManyArgs} args - Arguments to filter EventEditHistories to delete.
     * @example
     * // Delete a few EventEditHistories
     * const { count } = await prisma.eventEditHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventEditHistoryDeleteManyArgs>(args?: SelectSubset<T, EventEditHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventEditHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventEditHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EventEditHistories
     * const eventEditHistory = await prisma.eventEditHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventEditHistoryUpdateManyArgs>(args: SelectSubset<T, EventEditHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EventEditHistory.
     * @param {EventEditHistoryUpsertArgs} args - Arguments to update or create a EventEditHistory.
     * @example
     * // Update or create a EventEditHistory
     * const eventEditHistory = await prisma.eventEditHistory.upsert({
     *   create: {
     *     // ... data to create a EventEditHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EventEditHistory we want to update
     *   }
     * })
     */
    upsert<T extends EventEditHistoryUpsertArgs>(args: SelectSubset<T, EventEditHistoryUpsertArgs<ExtArgs>>): Prisma__EventEditHistoryClient<$Result.GetResult<Prisma.$EventEditHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EventEditHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventEditHistoryCountArgs} args - Arguments to filter EventEditHistories to count.
     * @example
     * // Count the number of EventEditHistories
     * const count = await prisma.eventEditHistory.count({
     *   where: {
     *     // ... the filter for the EventEditHistories we want to count
     *   }
     * })
    **/
    count<T extends EventEditHistoryCountArgs>(
      args?: Subset<T, EventEditHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventEditHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EventEditHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventEditHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventEditHistoryAggregateArgs>(args: Subset<T, EventEditHistoryAggregateArgs>): Prisma.PrismaPromise<GetEventEditHistoryAggregateType<T>>

    /**
     * Group by EventEditHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventEditHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventEditHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventEditHistoryGroupByArgs['orderBy'] }
        : { orderBy?: EventEditHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventEditHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventEditHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EventEditHistory model
   */
  readonly fields: EventEditHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EventEditHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventEditHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    event<T extends EventDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EventDefaultArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    editor<T extends EventEditHistory$editorArgs<ExtArgs> = {}>(args?: Subset<T, EventEditHistory$editorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EventEditHistory model
   */ 
  interface EventEditHistoryFieldRefs {
    readonly id: FieldRef<"EventEditHistory", 'String'>
    readonly event_id: FieldRef<"EventEditHistory", 'String'>
    readonly editor_id: FieldRef<"EventEditHistory", 'Int'>
    readonly edit_type: FieldRef<"EventEditHistory", 'String'>
    readonly old_value: FieldRef<"EventEditHistory", 'String'>
    readonly new_value: FieldRef<"EventEditHistory", 'String'>
    readonly meta: FieldRef<"EventEditHistory", 'Json'>
    readonly created_at: FieldRef<"EventEditHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EventEditHistory findUnique
   */
  export type EventEditHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventEditHistory to fetch.
     */
    where: EventEditHistoryWhereUniqueInput
  }

  /**
   * EventEditHistory findUniqueOrThrow
   */
  export type EventEditHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventEditHistory to fetch.
     */
    where: EventEditHistoryWhereUniqueInput
  }

  /**
   * EventEditHistory findFirst
   */
  export type EventEditHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventEditHistory to fetch.
     */
    where?: EventEditHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventEditHistories to fetch.
     */
    orderBy?: EventEditHistoryOrderByWithRelationInput | EventEditHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventEditHistories.
     */
    cursor?: EventEditHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventEditHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventEditHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventEditHistories.
     */
    distinct?: EventEditHistoryScalarFieldEnum | EventEditHistoryScalarFieldEnum[]
  }

  /**
   * EventEditHistory findFirstOrThrow
   */
  export type EventEditHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventEditHistory to fetch.
     */
    where?: EventEditHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventEditHistories to fetch.
     */
    orderBy?: EventEditHistoryOrderByWithRelationInput | EventEditHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventEditHistories.
     */
    cursor?: EventEditHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventEditHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventEditHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventEditHistories.
     */
    distinct?: EventEditHistoryScalarFieldEnum | EventEditHistoryScalarFieldEnum[]
  }

  /**
   * EventEditHistory findMany
   */
  export type EventEditHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventEditHistories to fetch.
     */
    where?: EventEditHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventEditHistories to fetch.
     */
    orderBy?: EventEditHistoryOrderByWithRelationInput | EventEditHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EventEditHistories.
     */
    cursor?: EventEditHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventEditHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventEditHistories.
     */
    skip?: number
    distinct?: EventEditHistoryScalarFieldEnum | EventEditHistoryScalarFieldEnum[]
  }

  /**
   * EventEditHistory create
   */
  export type EventEditHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a EventEditHistory.
     */
    data: XOR<EventEditHistoryCreateInput, EventEditHistoryUncheckedCreateInput>
  }

  /**
   * EventEditHistory createMany
   */
  export type EventEditHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EventEditHistories.
     */
    data: EventEditHistoryCreateManyInput | EventEditHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EventEditHistory update
   */
  export type EventEditHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a EventEditHistory.
     */
    data: XOR<EventEditHistoryUpdateInput, EventEditHistoryUncheckedUpdateInput>
    /**
     * Choose, which EventEditHistory to update.
     */
    where: EventEditHistoryWhereUniqueInput
  }

  /**
   * EventEditHistory updateMany
   */
  export type EventEditHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EventEditHistories.
     */
    data: XOR<EventEditHistoryUpdateManyMutationInput, EventEditHistoryUncheckedUpdateManyInput>
    /**
     * Filter which EventEditHistories to update
     */
    where?: EventEditHistoryWhereInput
    /**
     * Limit how many EventEditHistories to update.
     */
    limit?: number
  }

  /**
   * EventEditHistory upsert
   */
  export type EventEditHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the EventEditHistory to update in case it exists.
     */
    where: EventEditHistoryWhereUniqueInput
    /**
     * In case the EventEditHistory found by the `where` argument doesn't exist, create a new EventEditHistory with this data.
     */
    create: XOR<EventEditHistoryCreateInput, EventEditHistoryUncheckedCreateInput>
    /**
     * In case the EventEditHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventEditHistoryUpdateInput, EventEditHistoryUncheckedUpdateInput>
  }

  /**
   * EventEditHistory delete
   */
  export type EventEditHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
    /**
     * Filter which EventEditHistory to delete.
     */
    where: EventEditHistoryWhereUniqueInput
  }

  /**
   * EventEditHistory deleteMany
   */
  export type EventEditHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventEditHistories to delete
     */
    where?: EventEditHistoryWhereInput
    /**
     * Limit how many EventEditHistories to delete.
     */
    limit?: number
  }

  /**
   * EventEditHistory.editor
   */
  export type EventEditHistory$editorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * EventEditHistory without action
   */
  export type EventEditHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventEditHistory
     */
    select?: EventEditHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventEditHistory
     */
    omit?: EventEditHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventEditHistoryInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    password: 'password',
    avatar: 'avatar',
    createdAt: 'createdAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const TagScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    color: 'color',
    is_deleted: 'is_deleted',
    deleted_at: 'deleted_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TagScalarFieldEnum = (typeof TagScalarFieldEnum)[keyof typeof TagScalarFieldEnum]


  export const DonorScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    nick_name: 'nick_name',
    last_name: 'last_name',
    organization_name: 'organization_name',
    unit_number: 'unit_number',
    street_address: 'street_address',
    city: 'city',
    total_donation_amount: 'total_donation_amount',
    total_pledge: 'total_pledge',
    largest_gift_amount: 'largest_gift_amount',
    largest_gift_appeal: 'largest_gift_appeal',
    last_gift_amount: 'last_gift_amount',
    last_gift_request: 'last_gift_request',
    last_gift_appeal: 'last_gift_appeal',
    first_gift_date: 'first_gift_date',
    last_gift_date: 'last_gift_date',
    pmm: 'pmm',
    exclude: 'exclude',
    deceased: 'deceased',
    contact_phone_type: 'contact_phone_type',
    phone_restrictions: 'phone_restrictions',
    email_restrictions: 'email_restrictions',
    communication_restrictions: 'communication_restrictions',
    subscription_events_in_person: 'subscription_events_in_person',
    subscription_events_magazine: 'subscription_events_magazine',
    communication_preference: 'communication_preference',
    is_deleted: 'is_deleted',
    deleted_at: 'deleted_at',
    created_at: 'created_at',
    updated_at: 'updated_at',
    attendance_lable: 'attendance_lable',
    donation_lable: 'donation_lable',
    total_invitations: 'total_invitations',
    total_attendance: 'total_attendance',
    last_invitation_attendance: 'last_invitation_attendance',
    invitation_acceptance_rate: 'invitation_acceptance_rate',
    ml_score: 'ml_score'
  };

  export type DonorScalarFieldEnum = (typeof DonorScalarFieldEnum)[keyof typeof DonorScalarFieldEnum]


  export const DonorTagScalarFieldEnum: {
    donor_id: 'donor_id',
    tag_id: 'tag_id',
    created_at: 'created_at'
  };

  export type DonorTagScalarFieldEnum = (typeof DonorTagScalarFieldEnum)[keyof typeof DonorTagScalarFieldEnum]


  export const EventScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    date: 'date',
    location: 'location',
    status: 'status',
    capacity: 'capacity',
    is_deleted: 'is_deleted',
    deleted_at: 'deleted_at',
    created_at: 'created_at',
    updated_at: 'updated_at',
    created_by: 'created_by'
  };

  export type EventScalarFieldEnum = (typeof EventScalarFieldEnum)[keyof typeof EventScalarFieldEnum]


  export const EventCollaboratorScalarFieldEnum: {
    id: 'id',
    eventId: 'eventId',
    userId: 'userId'
  };

  export type EventCollaboratorScalarFieldEnum = (typeof EventCollaboratorScalarFieldEnum)[keyof typeof EventCollaboratorScalarFieldEnum]


  export const DonorEventScalarFieldEnum: {
    donor_id: 'donor_id',
    event_id: 'event_id',
    status: 'status',
    counted_invitation: 'counted_invitation',
    counted_attendance: 'counted_attendance',
    decline_reason: 'decline_reason',
    created_at: 'created_at'
  };

  export type DonorEventScalarFieldEnum = (typeof DonorEventScalarFieldEnum)[keyof typeof DonorEventScalarFieldEnum]


  export const EventEditHistoryScalarFieldEnum: {
    id: 'id',
    event_id: 'event_id',
    editor_id: 'editor_id',
    edit_type: 'edit_type',
    old_value: 'old_value',
    new_value: 'new_value',
    meta: 'meta',
    created_at: 'created_at'
  };

  export type EventEditHistoryScalarFieldEnum = (typeof EventEditHistoryScalarFieldEnum)[keyof typeof EventEditHistoryScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const UserOrderByRelevanceFieldEnum: {
    username: 'username',
    email: 'email',
    password: 'password',
    avatar: 'avatar'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const TagOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    color: 'color'
  };

  export type TagOrderByRelevanceFieldEnum = (typeof TagOrderByRelevanceFieldEnum)[keyof typeof TagOrderByRelevanceFieldEnum]


  export const DonorOrderByRelevanceFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    nick_name: 'nick_name',
    last_name: 'last_name',
    organization_name: 'organization_name',
    unit_number: 'unit_number',
    street_address: 'street_address',
    largest_gift_appeal: 'largest_gift_appeal',
    last_gift_request: 'last_gift_request',
    last_gift_appeal: 'last_gift_appeal',
    pmm: 'pmm',
    phone_restrictions: 'phone_restrictions',
    email_restrictions: 'email_restrictions',
    communication_restrictions: 'communication_restrictions'
  };

  export type DonorOrderByRelevanceFieldEnum = (typeof DonorOrderByRelevanceFieldEnum)[keyof typeof DonorOrderByRelevanceFieldEnum]


  export const DonorTagOrderByRelevanceFieldEnum: {
    donor_id: 'donor_id',
    tag_id: 'tag_id'
  };

  export type DonorTagOrderByRelevanceFieldEnum = (typeof DonorTagOrderByRelevanceFieldEnum)[keyof typeof DonorTagOrderByRelevanceFieldEnum]


  export const EventOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    location: 'location'
  };

  export type EventOrderByRelevanceFieldEnum = (typeof EventOrderByRelevanceFieldEnum)[keyof typeof EventOrderByRelevanceFieldEnum]


  export const EventCollaboratorOrderByRelevanceFieldEnum: {
    eventId: 'eventId'
  };

  export type EventCollaboratorOrderByRelevanceFieldEnum = (typeof EventCollaboratorOrderByRelevanceFieldEnum)[keyof typeof EventCollaboratorOrderByRelevanceFieldEnum]


  export const DonorEventOrderByRelevanceFieldEnum: {
    donor_id: 'donor_id',
    event_id: 'event_id',
    decline_reason: 'decline_reason'
  };

  export type DonorEventOrderByRelevanceFieldEnum = (typeof DonorEventOrderByRelevanceFieldEnum)[keyof typeof DonorEventOrderByRelevanceFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const EventEditHistoryOrderByRelevanceFieldEnum: {
    id: 'id',
    event_id: 'event_id',
    edit_type: 'edit_type',
    old_value: 'old_value',
    new_value: 'new_value'
  };

  export type EventEditHistoryOrderByRelevanceFieldEnum = (typeof EventEditHistoryOrderByRelevanceFieldEnum)[keyof typeof EventEditHistoryOrderByRelevanceFieldEnum]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'City'
   */
  export type EnumCityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'City'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'ContactPhoneType'
   */
  export type EnumContactPhoneTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ContactPhoneType'>
    


  /**
   * Reference to a field of type 'SubscriptionPreference'
   */
  export type EnumSubscriptionPreferenceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionPreference'>
    


  /**
   * Reference to a field of type 'CommunicationPreference'
   */
  export type EnumCommunicationPreferenceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CommunicationPreference'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'EventStatus'
   */
  export type EnumEventStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EventStatus'>
    


  /**
   * Reference to a field of type 'ParticipationStatus'
   */
  export type EnumParticipationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ParticipationStatus'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    events?: EventListRelationFilter
    collaborators?: EventCollaboratorListRelationFilter
    editHistories?: EventEditHistoryListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    events?: EventOrderByRelationAggregateInput
    collaborators?: EventCollaboratorOrderByRelationAggregateInput
    editHistories?: EventEditHistoryOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    events?: EventListRelationFilter
    collaborators?: EventCollaboratorListRelationFilter
    editHistories?: EventEditHistoryListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    username?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type TagWhereInput = {
    AND?: TagWhereInput | TagWhereInput[]
    OR?: TagWhereInput[]
    NOT?: TagWhereInput | TagWhereInput[]
    id?: StringFilter<"Tag"> | string
    name?: StringFilter<"Tag"> | string
    description?: StringNullableFilter<"Tag"> | string | null
    color?: StringNullableFilter<"Tag"> | string | null
    is_deleted?: BoolFilter<"Tag"> | boolean
    deleted_at?: DateTimeNullableFilter<"Tag"> | Date | string | null
    created_at?: DateTimeFilter<"Tag"> | Date | string
    updated_at?: DateTimeFilter<"Tag"> | Date | string
    donors?: DonorTagListRelationFilter
    events?: EventListRelationFilter
  }

  export type TagOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    donors?: DonorTagOrderByRelationAggregateInput
    events?: EventOrderByRelationAggregateInput
    _relevance?: TagOrderByRelevanceInput
  }

  export type TagWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: TagWhereInput | TagWhereInput[]
    OR?: TagWhereInput[]
    NOT?: TagWhereInput | TagWhereInput[]
    description?: StringNullableFilter<"Tag"> | string | null
    color?: StringNullableFilter<"Tag"> | string | null
    is_deleted?: BoolFilter<"Tag"> | boolean
    deleted_at?: DateTimeNullableFilter<"Tag"> | Date | string | null
    created_at?: DateTimeFilter<"Tag"> | Date | string
    updated_at?: DateTimeFilter<"Tag"> | Date | string
    donors?: DonorTagListRelationFilter
    events?: EventListRelationFilter
  }, "id" | "name">

  export type TagOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: TagCountOrderByAggregateInput
    _max?: TagMaxOrderByAggregateInput
    _min?: TagMinOrderByAggregateInput
  }

  export type TagScalarWhereWithAggregatesInput = {
    AND?: TagScalarWhereWithAggregatesInput | TagScalarWhereWithAggregatesInput[]
    OR?: TagScalarWhereWithAggregatesInput[]
    NOT?: TagScalarWhereWithAggregatesInput | TagScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Tag"> | string
    name?: StringWithAggregatesFilter<"Tag"> | string
    description?: StringNullableWithAggregatesFilter<"Tag"> | string | null
    color?: StringNullableWithAggregatesFilter<"Tag"> | string | null
    is_deleted?: BoolWithAggregatesFilter<"Tag"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"Tag"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"Tag"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Tag"> | Date | string
  }

  export type DonorWhereInput = {
    AND?: DonorWhereInput | DonorWhereInput[]
    OR?: DonorWhereInput[]
    NOT?: DonorWhereInput | DonorWhereInput[]
    id?: StringFilter<"Donor"> | string
    first_name?: StringFilter<"Donor"> | string
    nick_name?: StringNullableFilter<"Donor"> | string | null
    last_name?: StringFilter<"Donor"> | string
    organization_name?: StringNullableFilter<"Donor"> | string | null
    unit_number?: StringNullableFilter<"Donor"> | string | null
    street_address?: StringFilter<"Donor"> | string
    city?: EnumCityFilter<"Donor"> | $Enums.City
    total_donation_amount?: DecimalNullableFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    total_pledge?: DecimalNullableFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: DecimalNullableFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: StringNullableFilter<"Donor"> | string | null
    last_gift_amount?: DecimalNullableFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: StringNullableFilter<"Donor"> | string | null
    last_gift_appeal?: StringNullableFilter<"Donor"> | string | null
    first_gift_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    last_gift_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    pmm?: StringFilter<"Donor"> | string
    exclude?: BoolNullableFilter<"Donor"> | boolean | null
    deceased?: BoolNullableFilter<"Donor"> | boolean | null
    contact_phone_type?: EnumContactPhoneTypeNullableFilter<"Donor"> | $Enums.ContactPhoneType | null
    phone_restrictions?: StringNullableFilter<"Donor"> | string | null
    email_restrictions?: StringNullableFilter<"Donor"> | string | null
    communication_restrictions?: StringNullableFilter<"Donor"> | string | null
    subscription_events_in_person?: EnumSubscriptionPreferenceNullableFilter<"Donor"> | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: EnumSubscriptionPreferenceNullableFilter<"Donor"> | $Enums.SubscriptionPreference | null
    communication_preference?: EnumCommunicationPreferenceNullableFilter<"Donor"> | $Enums.CommunicationPreference | null
    is_deleted?: BoolFilter<"Donor"> | boolean
    deleted_at?: DateTimeNullableFilter<"Donor"> | Date | string | null
    created_at?: DateTimeFilter<"Donor"> | Date | string
    updated_at?: DateTimeFilter<"Donor"> | Date | string
    attendance_lable?: BoolNullableFilter<"Donor"> | boolean | null
    donation_lable?: BoolNullableFilter<"Donor"> | boolean | null
    total_invitations?: IntNullableFilter<"Donor"> | number | null
    total_attendance?: IntNullableFilter<"Donor"> | number | null
    last_invitation_attendance?: BoolNullableFilter<"Donor"> | boolean | null
    invitation_acceptance_rate?: FloatNullableFilter<"Donor"> | number | null
    ml_score?: FloatNullableFilter<"Donor"> | number | null
    tags?: DonorTagListRelationFilter
    events?: DonorEventListRelationFilter
  }

  export type DonorOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrder
    nick_name?: SortOrderInput | SortOrder
    last_name?: SortOrder
    organization_name?: SortOrderInput | SortOrder
    unit_number?: SortOrderInput | SortOrder
    street_address?: SortOrder
    city?: SortOrder
    total_donation_amount?: SortOrderInput | SortOrder
    total_pledge?: SortOrderInput | SortOrder
    largest_gift_amount?: SortOrderInput | SortOrder
    largest_gift_appeal?: SortOrderInput | SortOrder
    last_gift_amount?: SortOrderInput | SortOrder
    last_gift_request?: SortOrderInput | SortOrder
    last_gift_appeal?: SortOrderInput | SortOrder
    first_gift_date?: SortOrderInput | SortOrder
    last_gift_date?: SortOrderInput | SortOrder
    pmm?: SortOrder
    exclude?: SortOrderInput | SortOrder
    deceased?: SortOrderInput | SortOrder
    contact_phone_type?: SortOrderInput | SortOrder
    phone_restrictions?: SortOrderInput | SortOrder
    email_restrictions?: SortOrderInput | SortOrder
    communication_restrictions?: SortOrderInput | SortOrder
    subscription_events_in_person?: SortOrderInput | SortOrder
    subscription_events_magazine?: SortOrderInput | SortOrder
    communication_preference?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    attendance_lable?: SortOrderInput | SortOrder
    donation_lable?: SortOrderInput | SortOrder
    total_invitations?: SortOrderInput | SortOrder
    total_attendance?: SortOrderInput | SortOrder
    last_invitation_attendance?: SortOrderInput | SortOrder
    invitation_acceptance_rate?: SortOrderInput | SortOrder
    ml_score?: SortOrderInput | SortOrder
    tags?: DonorTagOrderByRelationAggregateInput
    events?: DonorEventOrderByRelationAggregateInput
    _relevance?: DonorOrderByRelevanceInput
  }

  export type DonorWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DonorWhereInput | DonorWhereInput[]
    OR?: DonorWhereInput[]
    NOT?: DonorWhereInput | DonorWhereInput[]
    first_name?: StringFilter<"Donor"> | string
    nick_name?: StringNullableFilter<"Donor"> | string | null
    last_name?: StringFilter<"Donor"> | string
    organization_name?: StringNullableFilter<"Donor"> | string | null
    unit_number?: StringNullableFilter<"Donor"> | string | null
    street_address?: StringFilter<"Donor"> | string
    city?: EnumCityFilter<"Donor"> | $Enums.City
    total_donation_amount?: DecimalNullableFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    total_pledge?: DecimalNullableFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: DecimalNullableFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: StringNullableFilter<"Donor"> | string | null
    last_gift_amount?: DecimalNullableFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: StringNullableFilter<"Donor"> | string | null
    last_gift_appeal?: StringNullableFilter<"Donor"> | string | null
    first_gift_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    last_gift_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    pmm?: StringFilter<"Donor"> | string
    exclude?: BoolNullableFilter<"Donor"> | boolean | null
    deceased?: BoolNullableFilter<"Donor"> | boolean | null
    contact_phone_type?: EnumContactPhoneTypeNullableFilter<"Donor"> | $Enums.ContactPhoneType | null
    phone_restrictions?: StringNullableFilter<"Donor"> | string | null
    email_restrictions?: StringNullableFilter<"Donor"> | string | null
    communication_restrictions?: StringNullableFilter<"Donor"> | string | null
    subscription_events_in_person?: EnumSubscriptionPreferenceNullableFilter<"Donor"> | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: EnumSubscriptionPreferenceNullableFilter<"Donor"> | $Enums.SubscriptionPreference | null
    communication_preference?: EnumCommunicationPreferenceNullableFilter<"Donor"> | $Enums.CommunicationPreference | null
    is_deleted?: BoolFilter<"Donor"> | boolean
    deleted_at?: DateTimeNullableFilter<"Donor"> | Date | string | null
    created_at?: DateTimeFilter<"Donor"> | Date | string
    updated_at?: DateTimeFilter<"Donor"> | Date | string
    attendance_lable?: BoolNullableFilter<"Donor"> | boolean | null
    donation_lable?: BoolNullableFilter<"Donor"> | boolean | null
    total_invitations?: IntNullableFilter<"Donor"> | number | null
    total_attendance?: IntNullableFilter<"Donor"> | number | null
    last_invitation_attendance?: BoolNullableFilter<"Donor"> | boolean | null
    invitation_acceptance_rate?: FloatNullableFilter<"Donor"> | number | null
    ml_score?: FloatNullableFilter<"Donor"> | number | null
    tags?: DonorTagListRelationFilter
    events?: DonorEventListRelationFilter
  }, "id">

  export type DonorOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrder
    nick_name?: SortOrderInput | SortOrder
    last_name?: SortOrder
    organization_name?: SortOrderInput | SortOrder
    unit_number?: SortOrderInput | SortOrder
    street_address?: SortOrder
    city?: SortOrder
    total_donation_amount?: SortOrderInput | SortOrder
    total_pledge?: SortOrderInput | SortOrder
    largest_gift_amount?: SortOrderInput | SortOrder
    largest_gift_appeal?: SortOrderInput | SortOrder
    last_gift_amount?: SortOrderInput | SortOrder
    last_gift_request?: SortOrderInput | SortOrder
    last_gift_appeal?: SortOrderInput | SortOrder
    first_gift_date?: SortOrderInput | SortOrder
    last_gift_date?: SortOrderInput | SortOrder
    pmm?: SortOrder
    exclude?: SortOrderInput | SortOrder
    deceased?: SortOrderInput | SortOrder
    contact_phone_type?: SortOrderInput | SortOrder
    phone_restrictions?: SortOrderInput | SortOrder
    email_restrictions?: SortOrderInput | SortOrder
    communication_restrictions?: SortOrderInput | SortOrder
    subscription_events_in_person?: SortOrderInput | SortOrder
    subscription_events_magazine?: SortOrderInput | SortOrder
    communication_preference?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    attendance_lable?: SortOrderInput | SortOrder
    donation_lable?: SortOrderInput | SortOrder
    total_invitations?: SortOrderInput | SortOrder
    total_attendance?: SortOrderInput | SortOrder
    last_invitation_attendance?: SortOrderInput | SortOrder
    invitation_acceptance_rate?: SortOrderInput | SortOrder
    ml_score?: SortOrderInput | SortOrder
    _count?: DonorCountOrderByAggregateInput
    _avg?: DonorAvgOrderByAggregateInput
    _max?: DonorMaxOrderByAggregateInput
    _min?: DonorMinOrderByAggregateInput
    _sum?: DonorSumOrderByAggregateInput
  }

  export type DonorScalarWhereWithAggregatesInput = {
    AND?: DonorScalarWhereWithAggregatesInput | DonorScalarWhereWithAggregatesInput[]
    OR?: DonorScalarWhereWithAggregatesInput[]
    NOT?: DonorScalarWhereWithAggregatesInput | DonorScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Donor"> | string
    first_name?: StringWithAggregatesFilter<"Donor"> | string
    nick_name?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    last_name?: StringWithAggregatesFilter<"Donor"> | string
    organization_name?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    unit_number?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    street_address?: StringWithAggregatesFilter<"Donor"> | string
    city?: EnumCityWithAggregatesFilter<"Donor"> | $Enums.City
    total_donation_amount?: DecimalNullableWithAggregatesFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    total_pledge?: DecimalNullableWithAggregatesFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: DecimalNullableWithAggregatesFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    last_gift_amount?: DecimalNullableWithAggregatesFilter<"Donor"> | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    last_gift_appeal?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    first_gift_date?: DateTimeNullableWithAggregatesFilter<"Donor"> | Date | string | null
    last_gift_date?: DateTimeNullableWithAggregatesFilter<"Donor"> | Date | string | null
    pmm?: StringWithAggregatesFilter<"Donor"> | string
    exclude?: BoolNullableWithAggregatesFilter<"Donor"> | boolean | null
    deceased?: BoolNullableWithAggregatesFilter<"Donor"> | boolean | null
    contact_phone_type?: EnumContactPhoneTypeNullableWithAggregatesFilter<"Donor"> | $Enums.ContactPhoneType | null
    phone_restrictions?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    email_restrictions?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    communication_restrictions?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    subscription_events_in_person?: EnumSubscriptionPreferenceNullableWithAggregatesFilter<"Donor"> | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: EnumSubscriptionPreferenceNullableWithAggregatesFilter<"Donor"> | $Enums.SubscriptionPreference | null
    communication_preference?: EnumCommunicationPreferenceNullableWithAggregatesFilter<"Donor"> | $Enums.CommunicationPreference | null
    is_deleted?: BoolWithAggregatesFilter<"Donor"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"Donor"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"Donor"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Donor"> | Date | string
    attendance_lable?: BoolNullableWithAggregatesFilter<"Donor"> | boolean | null
    donation_lable?: BoolNullableWithAggregatesFilter<"Donor"> | boolean | null
    total_invitations?: IntNullableWithAggregatesFilter<"Donor"> | number | null
    total_attendance?: IntNullableWithAggregatesFilter<"Donor"> | number | null
    last_invitation_attendance?: BoolNullableWithAggregatesFilter<"Donor"> | boolean | null
    invitation_acceptance_rate?: FloatNullableWithAggregatesFilter<"Donor"> | number | null
    ml_score?: FloatNullableWithAggregatesFilter<"Donor"> | number | null
  }

  export type DonorTagWhereInput = {
    AND?: DonorTagWhereInput | DonorTagWhereInput[]
    OR?: DonorTagWhereInput[]
    NOT?: DonorTagWhereInput | DonorTagWhereInput[]
    donor_id?: StringFilter<"DonorTag"> | string
    tag_id?: StringFilter<"DonorTag"> | string
    created_at?: DateTimeFilter<"DonorTag"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    tag?: XOR<TagScalarRelationFilter, TagWhereInput>
  }

  export type DonorTagOrderByWithRelationInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    donor?: DonorOrderByWithRelationInput
    tag?: TagOrderByWithRelationInput
    _relevance?: DonorTagOrderByRelevanceInput
  }

  export type DonorTagWhereUniqueInput = Prisma.AtLeast<{
    donor_id_tag_id?: DonorTagDonor_idTag_idCompoundUniqueInput
    AND?: DonorTagWhereInput | DonorTagWhereInput[]
    OR?: DonorTagWhereInput[]
    NOT?: DonorTagWhereInput | DonorTagWhereInput[]
    donor_id?: StringFilter<"DonorTag"> | string
    tag_id?: StringFilter<"DonorTag"> | string
    created_at?: DateTimeFilter<"DonorTag"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    tag?: XOR<TagScalarRelationFilter, TagWhereInput>
  }, "donor_id_tag_id">

  export type DonorTagOrderByWithAggregationInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    _count?: DonorTagCountOrderByAggregateInput
    _max?: DonorTagMaxOrderByAggregateInput
    _min?: DonorTagMinOrderByAggregateInput
  }

  export type DonorTagScalarWhereWithAggregatesInput = {
    AND?: DonorTagScalarWhereWithAggregatesInput | DonorTagScalarWhereWithAggregatesInput[]
    OR?: DonorTagScalarWhereWithAggregatesInput[]
    NOT?: DonorTagScalarWhereWithAggregatesInput | DonorTagScalarWhereWithAggregatesInput[]
    donor_id?: StringWithAggregatesFilter<"DonorTag"> | string
    tag_id?: StringWithAggregatesFilter<"DonorTag"> | string
    created_at?: DateTimeWithAggregatesFilter<"DonorTag"> | Date | string
  }

  export type EventWhereInput = {
    AND?: EventWhereInput | EventWhereInput[]
    OR?: EventWhereInput[]
    NOT?: EventWhereInput | EventWhereInput[]
    id?: StringFilter<"Event"> | string
    name?: StringFilter<"Event"> | string
    description?: StringNullableFilter<"Event"> | string | null
    date?: DateTimeNullableFilter<"Event"> | Date | string | null
    location?: StringNullableFilter<"Event"> | string | null
    status?: EnumEventStatusFilter<"Event"> | $Enums.EventStatus
    capacity?: IntNullableFilter<"Event"> | number | null
    is_deleted?: BoolFilter<"Event"> | boolean
    deleted_at?: DateTimeNullableFilter<"Event"> | Date | string | null
    created_at?: DateTimeFilter<"Event"> | Date | string
    updated_at?: DateTimeFilter<"Event"> | Date | string
    created_by?: IntNullableFilter<"Event"> | number | null
    donors?: DonorEventListRelationFilter
    tags?: TagListRelationFilter
    editHistory?: EventEditHistoryListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    collaborators?: EventCollaboratorListRelationFilter
  }

  export type EventOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    status?: SortOrder
    capacity?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    donors?: DonorEventOrderByRelationAggregateInput
    tags?: TagOrderByRelationAggregateInput
    editHistory?: EventEditHistoryOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    collaborators?: EventCollaboratorOrderByRelationAggregateInput
    _relevance?: EventOrderByRelevanceInput
  }

  export type EventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: EventWhereInput | EventWhereInput[]
    OR?: EventWhereInput[]
    NOT?: EventWhereInput | EventWhereInput[]
    description?: StringNullableFilter<"Event"> | string | null
    date?: DateTimeNullableFilter<"Event"> | Date | string | null
    location?: StringNullableFilter<"Event"> | string | null
    status?: EnumEventStatusFilter<"Event"> | $Enums.EventStatus
    capacity?: IntNullableFilter<"Event"> | number | null
    is_deleted?: BoolFilter<"Event"> | boolean
    deleted_at?: DateTimeNullableFilter<"Event"> | Date | string | null
    created_at?: DateTimeFilter<"Event"> | Date | string
    updated_at?: DateTimeFilter<"Event"> | Date | string
    created_by?: IntNullableFilter<"Event"> | number | null
    donors?: DonorEventListRelationFilter
    tags?: TagListRelationFilter
    editHistory?: EventEditHistoryListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    collaborators?: EventCollaboratorListRelationFilter
  }, "id" | "name">

  export type EventOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    status?: SortOrder
    capacity?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_by?: SortOrderInput | SortOrder
    _count?: EventCountOrderByAggregateInput
    _avg?: EventAvgOrderByAggregateInput
    _max?: EventMaxOrderByAggregateInput
    _min?: EventMinOrderByAggregateInput
    _sum?: EventSumOrderByAggregateInput
  }

  export type EventScalarWhereWithAggregatesInput = {
    AND?: EventScalarWhereWithAggregatesInput | EventScalarWhereWithAggregatesInput[]
    OR?: EventScalarWhereWithAggregatesInput[]
    NOT?: EventScalarWhereWithAggregatesInput | EventScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Event"> | string
    name?: StringWithAggregatesFilter<"Event"> | string
    description?: StringNullableWithAggregatesFilter<"Event"> | string | null
    date?: DateTimeNullableWithAggregatesFilter<"Event"> | Date | string | null
    location?: StringNullableWithAggregatesFilter<"Event"> | string | null
    status?: EnumEventStatusWithAggregatesFilter<"Event"> | $Enums.EventStatus
    capacity?: IntNullableWithAggregatesFilter<"Event"> | number | null
    is_deleted?: BoolWithAggregatesFilter<"Event"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"Event"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"Event"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Event"> | Date | string
    created_by?: IntNullableWithAggregatesFilter<"Event"> | number | null
  }

  export type EventCollaboratorWhereInput = {
    AND?: EventCollaboratorWhereInput | EventCollaboratorWhereInput[]
    OR?: EventCollaboratorWhereInput[]
    NOT?: EventCollaboratorWhereInput | EventCollaboratorWhereInput[]
    id?: IntFilter<"EventCollaborator"> | number
    eventId?: StringFilter<"EventCollaborator"> | string
    userId?: IntFilter<"EventCollaborator"> | number
    event?: XOR<EventScalarRelationFilter, EventWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type EventCollaboratorOrderByWithRelationInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
    event?: EventOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    _relevance?: EventCollaboratorOrderByRelevanceInput
  }

  export type EventCollaboratorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    eventId_userId?: EventCollaboratorEventIdUserIdCompoundUniqueInput
    AND?: EventCollaboratorWhereInput | EventCollaboratorWhereInput[]
    OR?: EventCollaboratorWhereInput[]
    NOT?: EventCollaboratorWhereInput | EventCollaboratorWhereInput[]
    eventId?: StringFilter<"EventCollaborator"> | string
    userId?: IntFilter<"EventCollaborator"> | number
    event?: XOR<EventScalarRelationFilter, EventWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "eventId_userId">

  export type EventCollaboratorOrderByWithAggregationInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
    _count?: EventCollaboratorCountOrderByAggregateInput
    _avg?: EventCollaboratorAvgOrderByAggregateInput
    _max?: EventCollaboratorMaxOrderByAggregateInput
    _min?: EventCollaboratorMinOrderByAggregateInput
    _sum?: EventCollaboratorSumOrderByAggregateInput
  }

  export type EventCollaboratorScalarWhereWithAggregatesInput = {
    AND?: EventCollaboratorScalarWhereWithAggregatesInput | EventCollaboratorScalarWhereWithAggregatesInput[]
    OR?: EventCollaboratorScalarWhereWithAggregatesInput[]
    NOT?: EventCollaboratorScalarWhereWithAggregatesInput | EventCollaboratorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EventCollaborator"> | number
    eventId?: StringWithAggregatesFilter<"EventCollaborator"> | string
    userId?: IntWithAggregatesFilter<"EventCollaborator"> | number
  }

  export type DonorEventWhereInput = {
    AND?: DonorEventWhereInput | DonorEventWhereInput[]
    OR?: DonorEventWhereInput[]
    NOT?: DonorEventWhereInput | DonorEventWhereInput[]
    donor_id?: StringFilter<"DonorEvent"> | string
    event_id?: StringFilter<"DonorEvent"> | string
    status?: EnumParticipationStatusNullableFilter<"DonorEvent"> | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFilter<"DonorEvent"> | boolean
    counted_attendance?: BoolFilter<"DonorEvent"> | boolean
    decline_reason?: StringNullableFilter<"DonorEvent"> | string | null
    created_at?: DateTimeFilter<"DonorEvent"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    event?: XOR<EventScalarRelationFilter, EventWhereInput>
  }

  export type DonorEventOrderByWithRelationInput = {
    donor_id?: SortOrder
    event_id?: SortOrder
    status?: SortOrderInput | SortOrder
    counted_invitation?: SortOrder
    counted_attendance?: SortOrder
    decline_reason?: SortOrderInput | SortOrder
    created_at?: SortOrder
    donor?: DonorOrderByWithRelationInput
    event?: EventOrderByWithRelationInput
    _relevance?: DonorEventOrderByRelevanceInput
  }

  export type DonorEventWhereUniqueInput = Prisma.AtLeast<{
    donor_id_event_id?: DonorEventDonor_idEvent_idCompoundUniqueInput
    AND?: DonorEventWhereInput | DonorEventWhereInput[]
    OR?: DonorEventWhereInput[]
    NOT?: DonorEventWhereInput | DonorEventWhereInput[]
    donor_id?: StringFilter<"DonorEvent"> | string
    event_id?: StringFilter<"DonorEvent"> | string
    status?: EnumParticipationStatusNullableFilter<"DonorEvent"> | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFilter<"DonorEvent"> | boolean
    counted_attendance?: BoolFilter<"DonorEvent"> | boolean
    decline_reason?: StringNullableFilter<"DonorEvent"> | string | null
    created_at?: DateTimeFilter<"DonorEvent"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    event?: XOR<EventScalarRelationFilter, EventWhereInput>
  }, "donor_id_event_id">

  export type DonorEventOrderByWithAggregationInput = {
    donor_id?: SortOrder
    event_id?: SortOrder
    status?: SortOrderInput | SortOrder
    counted_invitation?: SortOrder
    counted_attendance?: SortOrder
    decline_reason?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: DonorEventCountOrderByAggregateInput
    _max?: DonorEventMaxOrderByAggregateInput
    _min?: DonorEventMinOrderByAggregateInput
  }

  export type DonorEventScalarWhereWithAggregatesInput = {
    AND?: DonorEventScalarWhereWithAggregatesInput | DonorEventScalarWhereWithAggregatesInput[]
    OR?: DonorEventScalarWhereWithAggregatesInput[]
    NOT?: DonorEventScalarWhereWithAggregatesInput | DonorEventScalarWhereWithAggregatesInput[]
    donor_id?: StringWithAggregatesFilter<"DonorEvent"> | string
    event_id?: StringWithAggregatesFilter<"DonorEvent"> | string
    status?: EnumParticipationStatusNullableWithAggregatesFilter<"DonorEvent"> | $Enums.ParticipationStatus | null
    counted_invitation?: BoolWithAggregatesFilter<"DonorEvent"> | boolean
    counted_attendance?: BoolWithAggregatesFilter<"DonorEvent"> | boolean
    decline_reason?: StringNullableWithAggregatesFilter<"DonorEvent"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"DonorEvent"> | Date | string
  }

  export type EventEditHistoryWhereInput = {
    AND?: EventEditHistoryWhereInput | EventEditHistoryWhereInput[]
    OR?: EventEditHistoryWhereInput[]
    NOT?: EventEditHistoryWhereInput | EventEditHistoryWhereInput[]
    id?: StringFilter<"EventEditHistory"> | string
    event_id?: StringFilter<"EventEditHistory"> | string
    editor_id?: IntNullableFilter<"EventEditHistory"> | number | null
    edit_type?: StringFilter<"EventEditHistory"> | string
    old_value?: StringNullableFilter<"EventEditHistory"> | string | null
    new_value?: StringNullableFilter<"EventEditHistory"> | string | null
    meta?: JsonNullableFilter<"EventEditHistory">
    created_at?: DateTimeFilter<"EventEditHistory"> | Date | string
    event?: XOR<EventScalarRelationFilter, EventWhereInput>
    editor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type EventEditHistoryOrderByWithRelationInput = {
    id?: SortOrder
    event_id?: SortOrder
    editor_id?: SortOrderInput | SortOrder
    edit_type?: SortOrder
    old_value?: SortOrderInput | SortOrder
    new_value?: SortOrderInput | SortOrder
    meta?: SortOrderInput | SortOrder
    created_at?: SortOrder
    event?: EventOrderByWithRelationInput
    editor?: UserOrderByWithRelationInput
    _relevance?: EventEditHistoryOrderByRelevanceInput
  }

  export type EventEditHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EventEditHistoryWhereInput | EventEditHistoryWhereInput[]
    OR?: EventEditHistoryWhereInput[]
    NOT?: EventEditHistoryWhereInput | EventEditHistoryWhereInput[]
    event_id?: StringFilter<"EventEditHistory"> | string
    editor_id?: IntNullableFilter<"EventEditHistory"> | number | null
    edit_type?: StringFilter<"EventEditHistory"> | string
    old_value?: StringNullableFilter<"EventEditHistory"> | string | null
    new_value?: StringNullableFilter<"EventEditHistory"> | string | null
    meta?: JsonNullableFilter<"EventEditHistory">
    created_at?: DateTimeFilter<"EventEditHistory"> | Date | string
    event?: XOR<EventScalarRelationFilter, EventWhereInput>
    editor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type EventEditHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    event_id?: SortOrder
    editor_id?: SortOrderInput | SortOrder
    edit_type?: SortOrder
    old_value?: SortOrderInput | SortOrder
    new_value?: SortOrderInput | SortOrder
    meta?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: EventEditHistoryCountOrderByAggregateInput
    _avg?: EventEditHistoryAvgOrderByAggregateInput
    _max?: EventEditHistoryMaxOrderByAggregateInput
    _min?: EventEditHistoryMinOrderByAggregateInput
    _sum?: EventEditHistorySumOrderByAggregateInput
  }

  export type EventEditHistoryScalarWhereWithAggregatesInput = {
    AND?: EventEditHistoryScalarWhereWithAggregatesInput | EventEditHistoryScalarWhereWithAggregatesInput[]
    OR?: EventEditHistoryScalarWhereWithAggregatesInput[]
    NOT?: EventEditHistoryScalarWhereWithAggregatesInput | EventEditHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EventEditHistory"> | string
    event_id?: StringWithAggregatesFilter<"EventEditHistory"> | string
    editor_id?: IntNullableWithAggregatesFilter<"EventEditHistory"> | number | null
    edit_type?: StringWithAggregatesFilter<"EventEditHistory"> | string
    old_value?: StringNullableWithAggregatesFilter<"EventEditHistory"> | string | null
    new_value?: StringNullableWithAggregatesFilter<"EventEditHistory"> | string | null
    meta?: JsonNullableWithAggregatesFilter<"EventEditHistory">
    created_at?: DateTimeWithAggregatesFilter<"EventEditHistory"> | Date | string
  }

  export type UserCreateInput = {
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
    events?: EventCreateNestedManyWithoutCreatedByInput
    collaborators?: EventCollaboratorCreateNestedManyWithoutUserInput
    editHistories?: EventEditHistoryCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
    events?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    collaborators?: EventCollaboratorUncheckedCreateNestedManyWithoutUserInput
    editHistories?: EventEditHistoryUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    events?: EventUpdateManyWithoutCreatedByNestedInput
    collaborators?: EventCollaboratorUpdateManyWithoutUserNestedInput
    editHistories?: EventEditHistoryUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    events?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    collaborators?: EventCollaboratorUncheckedUpdateManyWithoutUserNestedInput
    editHistories?: EventEditHistoryUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TagCreateInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorTagCreateNestedManyWithoutTagInput
    events?: EventCreateNestedManyWithoutTagsInput
  }

  export type TagUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorTagUncheckedCreateNestedManyWithoutTagInput
    events?: EventUncheckedCreateNestedManyWithoutTagsInput
  }

  export type TagUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorTagUpdateManyWithoutTagNestedInput
    events?: EventUpdateManyWithoutTagsNestedInput
  }

  export type TagUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorTagUncheckedUpdateManyWithoutTagNestedInput
    events?: EventUncheckedUpdateManyWithoutTagsNestedInput
  }

  export type TagCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type TagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorCreateInput = {
    id?: string
    first_name: string
    nick_name?: string | null
    last_name: string
    organization_name?: string | null
    unit_number?: string | null
    street_address: string
    city: $Enums.City
    total_donation_amount?: Decimal | DecimalJsLike | number | string | null
    total_pledge?: Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: string | null
    last_gift_amount?: Decimal | DecimalJsLike | number | string | null
    last_gift_request?: string | null
    last_gift_appeal?: string | null
    first_gift_date?: Date | string | null
    last_gift_date?: Date | string | null
    pmm: string
    exclude?: boolean | null
    deceased?: boolean | null
    contact_phone_type?: $Enums.ContactPhoneType | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: $Enums.SubscriptionPreference | null
    subscription_events_magazine?: $Enums.SubscriptionPreference | null
    communication_preference?: $Enums.CommunicationPreference | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    attendance_lable?: boolean | null
    donation_lable?: boolean | null
    total_invitations?: number | null
    total_attendance?: number | null
    last_invitation_attendance?: boolean | null
    invitation_acceptance_rate?: number | null
    ml_score?: number | null
    tags?: DonorTagCreateNestedManyWithoutDonorInput
    events?: DonorEventCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateInput = {
    id?: string
    first_name: string
    nick_name?: string | null
    last_name: string
    organization_name?: string | null
    unit_number?: string | null
    street_address: string
    city: $Enums.City
    total_donation_amount?: Decimal | DecimalJsLike | number | string | null
    total_pledge?: Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: string | null
    last_gift_amount?: Decimal | DecimalJsLike | number | string | null
    last_gift_request?: string | null
    last_gift_appeal?: string | null
    first_gift_date?: Date | string | null
    last_gift_date?: Date | string | null
    pmm: string
    exclude?: boolean | null
    deceased?: boolean | null
    contact_phone_type?: $Enums.ContactPhoneType | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: $Enums.SubscriptionPreference | null
    subscription_events_magazine?: $Enums.SubscriptionPreference | null
    communication_preference?: $Enums.CommunicationPreference | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    attendance_lable?: boolean | null
    donation_lable?: boolean | null
    total_invitations?: number | null
    total_attendance?: number | null
    last_invitation_attendance?: boolean | null
    invitation_acceptance_rate?: number | null
    ml_score?: number | null
    tags?: DonorTagUncheckedCreateNestedManyWithoutDonorInput
    events?: DonorEventUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_address?: StringFieldUpdateOperationsInput | string
    city?: EnumCityFieldUpdateOperationsInput | $Enums.City
    total_donation_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_pledge?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    first_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pmm?: StringFieldUpdateOperationsInput | string
    exclude?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deceased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    contact_phone_type?: NullableEnumContactPhoneTypeFieldUpdateOperationsInput | $Enums.ContactPhoneType | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    communication_preference?: NullableEnumCommunicationPreferenceFieldUpdateOperationsInput | $Enums.CommunicationPreference | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attendance_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    donation_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    total_invitations?: NullableIntFieldUpdateOperationsInput | number | null
    total_attendance?: NullableIntFieldUpdateOperationsInput | number | null
    last_invitation_attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invitation_acceptance_rate?: NullableFloatFieldUpdateOperationsInput | number | null
    ml_score?: NullableFloatFieldUpdateOperationsInput | number | null
    tags?: DonorTagUpdateManyWithoutDonorNestedInput
    events?: DonorEventUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_address?: StringFieldUpdateOperationsInput | string
    city?: EnumCityFieldUpdateOperationsInput | $Enums.City
    total_donation_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_pledge?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    first_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pmm?: StringFieldUpdateOperationsInput | string
    exclude?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deceased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    contact_phone_type?: NullableEnumContactPhoneTypeFieldUpdateOperationsInput | $Enums.ContactPhoneType | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    communication_preference?: NullableEnumCommunicationPreferenceFieldUpdateOperationsInput | $Enums.CommunicationPreference | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attendance_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    donation_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    total_invitations?: NullableIntFieldUpdateOperationsInput | number | null
    total_attendance?: NullableIntFieldUpdateOperationsInput | number | null
    last_invitation_attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invitation_acceptance_rate?: NullableFloatFieldUpdateOperationsInput | number | null
    ml_score?: NullableFloatFieldUpdateOperationsInput | number | null
    tags?: DonorTagUncheckedUpdateManyWithoutDonorNestedInput
    events?: DonorEventUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type DonorCreateManyInput = {
    id?: string
    first_name: string
    nick_name?: string | null
    last_name: string
    organization_name?: string | null
    unit_number?: string | null
    street_address: string
    city: $Enums.City
    total_donation_amount?: Decimal | DecimalJsLike | number | string | null
    total_pledge?: Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: string | null
    last_gift_amount?: Decimal | DecimalJsLike | number | string | null
    last_gift_request?: string | null
    last_gift_appeal?: string | null
    first_gift_date?: Date | string | null
    last_gift_date?: Date | string | null
    pmm: string
    exclude?: boolean | null
    deceased?: boolean | null
    contact_phone_type?: $Enums.ContactPhoneType | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: $Enums.SubscriptionPreference | null
    subscription_events_magazine?: $Enums.SubscriptionPreference | null
    communication_preference?: $Enums.CommunicationPreference | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    attendance_lable?: boolean | null
    donation_lable?: boolean | null
    total_invitations?: number | null
    total_attendance?: number | null
    last_invitation_attendance?: boolean | null
    invitation_acceptance_rate?: number | null
    ml_score?: number | null
  }

  export type DonorUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_address?: StringFieldUpdateOperationsInput | string
    city?: EnumCityFieldUpdateOperationsInput | $Enums.City
    total_donation_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_pledge?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    first_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pmm?: StringFieldUpdateOperationsInput | string
    exclude?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deceased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    contact_phone_type?: NullableEnumContactPhoneTypeFieldUpdateOperationsInput | $Enums.ContactPhoneType | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    communication_preference?: NullableEnumCommunicationPreferenceFieldUpdateOperationsInput | $Enums.CommunicationPreference | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attendance_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    donation_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    total_invitations?: NullableIntFieldUpdateOperationsInput | number | null
    total_attendance?: NullableIntFieldUpdateOperationsInput | number | null
    last_invitation_attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invitation_acceptance_rate?: NullableFloatFieldUpdateOperationsInput | number | null
    ml_score?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type DonorUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_address?: StringFieldUpdateOperationsInput | string
    city?: EnumCityFieldUpdateOperationsInput | $Enums.City
    total_donation_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_pledge?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    first_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pmm?: StringFieldUpdateOperationsInput | string
    exclude?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deceased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    contact_phone_type?: NullableEnumContactPhoneTypeFieldUpdateOperationsInput | $Enums.ContactPhoneType | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    communication_preference?: NullableEnumCommunicationPreferenceFieldUpdateOperationsInput | $Enums.CommunicationPreference | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attendance_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    donation_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    total_invitations?: NullableIntFieldUpdateOperationsInput | number | null
    total_attendance?: NullableIntFieldUpdateOperationsInput | number | null
    last_invitation_attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invitation_acceptance_rate?: NullableFloatFieldUpdateOperationsInput | number | null
    ml_score?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type DonorTagCreateInput = {
    created_at?: Date | string
    donor: DonorCreateNestedOneWithoutTagsInput
    tag: TagCreateNestedOneWithoutDonorsInput
  }

  export type DonorTagUncheckedCreateInput = {
    donor_id: string
    tag_id: string
    created_at?: Date | string
  }

  export type DonorTagUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutTagsNestedInput
    tag?: TagUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorTagUncheckedUpdateInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    tag_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagCreateManyInput = {
    donor_id: string
    tag_id: string
    created_at?: Date | string
  }

  export type DonorTagUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagUncheckedUpdateManyInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    tag_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventCreateInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorEventCreateNestedManyWithoutEventInput
    tags?: TagCreateNestedManyWithoutEventsInput
    editHistory?: EventEditHistoryCreateNestedManyWithoutEventInput
    createdBy?: UserCreateNestedOneWithoutEventsInput
    collaborators?: EventCollaboratorCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    created_by?: number | null
    donors?: DonorEventUncheckedCreateNestedManyWithoutEventInput
    tags?: TagUncheckedCreateNestedManyWithoutEventsInput
    editHistory?: EventEditHistoryUncheckedCreateNestedManyWithoutEventInput
    collaborators?: EventCollaboratorUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorEventUpdateManyWithoutEventNestedInput
    tags?: TagUpdateManyWithoutEventsNestedInput
    editHistory?: EventEditHistoryUpdateManyWithoutEventNestedInput
    createdBy?: UserUpdateOneWithoutEventsNestedInput
    collaborators?: EventCollaboratorUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    donors?: DonorEventUncheckedUpdateManyWithoutEventNestedInput
    tags?: TagUncheckedUpdateManyWithoutEventsNestedInput
    editHistory?: EventEditHistoryUncheckedUpdateManyWithoutEventNestedInput
    collaborators?: EventCollaboratorUncheckedUpdateManyWithoutEventNestedInput
  }

  export type EventCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    created_by?: number | null
  }

  export type EventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EventCollaboratorCreateInput = {
    event: EventCreateNestedOneWithoutCollaboratorsInput
    user: UserCreateNestedOneWithoutCollaboratorsInput
  }

  export type EventCollaboratorUncheckedCreateInput = {
    id?: number
    eventId: string
    userId: number
  }

  export type EventCollaboratorUpdateInput = {
    event?: EventUpdateOneRequiredWithoutCollaboratorsNestedInput
    user?: UserUpdateOneRequiredWithoutCollaboratorsNestedInput
  }

  export type EventCollaboratorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    eventId?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type EventCollaboratorCreateManyInput = {
    id?: number
    eventId: string
    userId: number
  }

  export type EventCollaboratorUpdateManyMutationInput = {

  }

  export type EventCollaboratorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    eventId?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type DonorEventCreateInput = {
    status?: $Enums.ParticipationStatus | null
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: string | null
    created_at?: Date | string
    donor: DonorCreateNestedOneWithoutEventsInput
    event: EventCreateNestedOneWithoutDonorsInput
  }

  export type DonorEventUncheckedCreateInput = {
    donor_id: string
    event_id: string
    status?: $Enums.ParticipationStatus | null
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: string | null
    created_at?: Date | string
  }

  export type DonorEventUpdateInput = {
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutEventsNestedInput
    event?: EventUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorEventUncheckedUpdateInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    event_id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorEventCreateManyInput = {
    donor_id: string
    event_id: string
    status?: $Enums.ParticipationStatus | null
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: string | null
    created_at?: Date | string
  }

  export type DonorEventUpdateManyMutationInput = {
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorEventUncheckedUpdateManyInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    event_id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventEditHistoryCreateInput = {
    id?: string
    edit_type: string
    old_value?: string | null
    new_value?: string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    event: EventCreateNestedOneWithoutEditHistoryInput
    editor?: UserCreateNestedOneWithoutEditHistoriesInput
  }

  export type EventEditHistoryUncheckedCreateInput = {
    id?: string
    event_id: string
    editor_id?: number | null
    edit_type: string
    old_value?: string | null
    new_value?: string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type EventEditHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    event?: EventUpdateOneRequiredWithoutEditHistoryNestedInput
    editor?: UserUpdateOneWithoutEditHistoriesNestedInput
  }

  export type EventEditHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    event_id?: StringFieldUpdateOperationsInput | string
    editor_id?: NullableIntFieldUpdateOperationsInput | number | null
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventEditHistoryCreateManyInput = {
    id?: string
    event_id: string
    editor_id?: number | null
    edit_type: string
    old_value?: string | null
    new_value?: string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type EventEditHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventEditHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    event_id?: StringFieldUpdateOperationsInput | string
    editor_id?: NullableIntFieldUpdateOperationsInput | number | null
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EventListRelationFilter = {
    every?: EventWhereInput
    some?: EventWhereInput
    none?: EventWhereInput
  }

  export type EventCollaboratorListRelationFilter = {
    every?: EventCollaboratorWhereInput
    some?: EventCollaboratorWhereInput
    none?: EventCollaboratorWhereInput
  }

  export type EventEditHistoryListRelationFilter = {
    every?: EventEditHistoryWhereInput
    some?: EventEditHistoryWhereInput
    none?: EventEditHistoryWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type EventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventCollaboratorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventEditHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    createdAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    createdAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    createdAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DonorTagListRelationFilter = {
    every?: DonorTagWhereInput
    some?: DonorTagWhereInput
    none?: DonorTagWhereInput
  }

  export type DonorTagOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TagOrderByRelevanceInput = {
    fields: TagOrderByRelevanceFieldEnum | TagOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TagCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    color?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TagMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    color?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TagMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    color?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumCityFilter<$PrismaModel = never> = {
    equals?: $Enums.City | EnumCityFieldRefInput<$PrismaModel>
    in?: $Enums.City[]
    notIn?: $Enums.City[]
    not?: NestedEnumCityFilter<$PrismaModel> | $Enums.City
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type EnumContactPhoneTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ContactPhoneType | EnumContactPhoneTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ContactPhoneType[] | null
    notIn?: $Enums.ContactPhoneType[] | null
    not?: NestedEnumContactPhoneTypeNullableFilter<$PrismaModel> | $Enums.ContactPhoneType | null
  }

  export type EnumSubscriptionPreferenceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionPreference | EnumSubscriptionPreferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.SubscriptionPreference[] | null
    notIn?: $Enums.SubscriptionPreference[] | null
    not?: NestedEnumSubscriptionPreferenceNullableFilter<$PrismaModel> | $Enums.SubscriptionPreference | null
  }

  export type EnumCommunicationPreferenceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CommunicationPreference | EnumCommunicationPreferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.CommunicationPreference[] | null
    notIn?: $Enums.CommunicationPreference[] | null
    not?: NestedEnumCommunicationPreferenceNullableFilter<$PrismaModel> | $Enums.CommunicationPreference | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type DonorEventListRelationFilter = {
    every?: DonorEventWhereInput
    some?: DonorEventWhereInput
    none?: DonorEventWhereInput
  }

  export type DonorEventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DonorOrderByRelevanceInput = {
    fields: DonorOrderByRelevanceFieldEnum | DonorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DonorCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    nick_name?: SortOrder
    last_name?: SortOrder
    organization_name?: SortOrder
    unit_number?: SortOrder
    street_address?: SortOrder
    city?: SortOrder
    total_donation_amount?: SortOrder
    total_pledge?: SortOrder
    largest_gift_amount?: SortOrder
    largest_gift_appeal?: SortOrder
    last_gift_amount?: SortOrder
    last_gift_request?: SortOrder
    last_gift_appeal?: SortOrder
    first_gift_date?: SortOrder
    last_gift_date?: SortOrder
    pmm?: SortOrder
    exclude?: SortOrder
    deceased?: SortOrder
    contact_phone_type?: SortOrder
    phone_restrictions?: SortOrder
    email_restrictions?: SortOrder
    communication_restrictions?: SortOrder
    subscription_events_in_person?: SortOrder
    subscription_events_magazine?: SortOrder
    communication_preference?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    attendance_lable?: SortOrder
    donation_lable?: SortOrder
    total_invitations?: SortOrder
    total_attendance?: SortOrder
    last_invitation_attendance?: SortOrder
    invitation_acceptance_rate?: SortOrder
    ml_score?: SortOrder
  }

  export type DonorAvgOrderByAggregateInput = {
    total_donation_amount?: SortOrder
    total_pledge?: SortOrder
    largest_gift_amount?: SortOrder
    last_gift_amount?: SortOrder
    total_invitations?: SortOrder
    total_attendance?: SortOrder
    invitation_acceptance_rate?: SortOrder
    ml_score?: SortOrder
  }

  export type DonorMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    nick_name?: SortOrder
    last_name?: SortOrder
    organization_name?: SortOrder
    unit_number?: SortOrder
    street_address?: SortOrder
    city?: SortOrder
    total_donation_amount?: SortOrder
    total_pledge?: SortOrder
    largest_gift_amount?: SortOrder
    largest_gift_appeal?: SortOrder
    last_gift_amount?: SortOrder
    last_gift_request?: SortOrder
    last_gift_appeal?: SortOrder
    first_gift_date?: SortOrder
    last_gift_date?: SortOrder
    pmm?: SortOrder
    exclude?: SortOrder
    deceased?: SortOrder
    contact_phone_type?: SortOrder
    phone_restrictions?: SortOrder
    email_restrictions?: SortOrder
    communication_restrictions?: SortOrder
    subscription_events_in_person?: SortOrder
    subscription_events_magazine?: SortOrder
    communication_preference?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    attendance_lable?: SortOrder
    donation_lable?: SortOrder
    total_invitations?: SortOrder
    total_attendance?: SortOrder
    last_invitation_attendance?: SortOrder
    invitation_acceptance_rate?: SortOrder
    ml_score?: SortOrder
  }

  export type DonorMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    nick_name?: SortOrder
    last_name?: SortOrder
    organization_name?: SortOrder
    unit_number?: SortOrder
    street_address?: SortOrder
    city?: SortOrder
    total_donation_amount?: SortOrder
    total_pledge?: SortOrder
    largest_gift_amount?: SortOrder
    largest_gift_appeal?: SortOrder
    last_gift_amount?: SortOrder
    last_gift_request?: SortOrder
    last_gift_appeal?: SortOrder
    first_gift_date?: SortOrder
    last_gift_date?: SortOrder
    pmm?: SortOrder
    exclude?: SortOrder
    deceased?: SortOrder
    contact_phone_type?: SortOrder
    phone_restrictions?: SortOrder
    email_restrictions?: SortOrder
    communication_restrictions?: SortOrder
    subscription_events_in_person?: SortOrder
    subscription_events_magazine?: SortOrder
    communication_preference?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    attendance_lable?: SortOrder
    donation_lable?: SortOrder
    total_invitations?: SortOrder
    total_attendance?: SortOrder
    last_invitation_attendance?: SortOrder
    invitation_acceptance_rate?: SortOrder
    ml_score?: SortOrder
  }

  export type DonorSumOrderByAggregateInput = {
    total_donation_amount?: SortOrder
    total_pledge?: SortOrder
    largest_gift_amount?: SortOrder
    last_gift_amount?: SortOrder
    total_invitations?: SortOrder
    total_attendance?: SortOrder
    invitation_acceptance_rate?: SortOrder
    ml_score?: SortOrder
  }

  export type EnumCityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.City | EnumCityFieldRefInput<$PrismaModel>
    in?: $Enums.City[]
    notIn?: $Enums.City[]
    not?: NestedEnumCityWithAggregatesFilter<$PrismaModel> | $Enums.City
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCityFilter<$PrismaModel>
    _max?: NestedEnumCityFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type EnumContactPhoneTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContactPhoneType | EnumContactPhoneTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ContactPhoneType[] | null
    notIn?: $Enums.ContactPhoneType[] | null
    not?: NestedEnumContactPhoneTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ContactPhoneType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumContactPhoneTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumContactPhoneTypeNullableFilter<$PrismaModel>
  }

  export type EnumSubscriptionPreferenceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionPreference | EnumSubscriptionPreferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.SubscriptionPreference[] | null
    notIn?: $Enums.SubscriptionPreference[] | null
    not?: NestedEnumSubscriptionPreferenceNullableWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionPreference | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionPreferenceNullableFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionPreferenceNullableFilter<$PrismaModel>
  }

  export type EnumCommunicationPreferenceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CommunicationPreference | EnumCommunicationPreferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.CommunicationPreference[] | null
    notIn?: $Enums.CommunicationPreference[] | null
    not?: NestedEnumCommunicationPreferenceNullableWithAggregatesFilter<$PrismaModel> | $Enums.CommunicationPreference | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCommunicationPreferenceNullableFilter<$PrismaModel>
    _max?: NestedEnumCommunicationPreferenceNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DonorScalarRelationFilter = {
    is?: DonorWhereInput
    isNot?: DonorWhereInput
  }

  export type TagScalarRelationFilter = {
    is?: TagWhereInput
    isNot?: TagWhereInput
  }

  export type DonorTagOrderByRelevanceInput = {
    fields: DonorTagOrderByRelevanceFieldEnum | DonorTagOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DonorTagDonor_idTag_idCompoundUniqueInput = {
    donor_id: string
    tag_id: string
  }

  export type DonorTagCountOrderByAggregateInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
  }

  export type DonorTagMaxOrderByAggregateInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
  }

  export type DonorTagMinOrderByAggregateInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
  }

  export type EnumEventStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EventStatus | EnumEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EventStatus[]
    notIn?: $Enums.EventStatus[]
    not?: NestedEnumEventStatusFilter<$PrismaModel> | $Enums.EventStatus
  }

  export type TagListRelationFilter = {
    every?: TagWhereInput
    some?: TagWhereInput
    none?: TagWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type TagOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventOrderByRelevanceInput = {
    fields: EventOrderByRelevanceFieldEnum | EventOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EventCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    date?: SortOrder
    location?: SortOrder
    status?: SortOrder
    capacity?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_by?: SortOrder
  }

  export type EventAvgOrderByAggregateInput = {
    capacity?: SortOrder
    created_by?: SortOrder
  }

  export type EventMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    date?: SortOrder
    location?: SortOrder
    status?: SortOrder
    capacity?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_by?: SortOrder
  }

  export type EventMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    date?: SortOrder
    location?: SortOrder
    status?: SortOrder
    capacity?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_by?: SortOrder
  }

  export type EventSumOrderByAggregateInput = {
    capacity?: SortOrder
    created_by?: SortOrder
  }

  export type EnumEventStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventStatus | EnumEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EventStatus[]
    notIn?: $Enums.EventStatus[]
    not?: NestedEnumEventStatusWithAggregatesFilter<$PrismaModel> | $Enums.EventStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventStatusFilter<$PrismaModel>
    _max?: NestedEnumEventStatusFilter<$PrismaModel>
  }

  export type EventScalarRelationFilter = {
    is?: EventWhereInput
    isNot?: EventWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type EventCollaboratorOrderByRelevanceInput = {
    fields: EventCollaboratorOrderByRelevanceFieldEnum | EventCollaboratorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EventCollaboratorEventIdUserIdCompoundUniqueInput = {
    eventId: string
    userId: number
  }

  export type EventCollaboratorCountOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
  }

  export type EventCollaboratorAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type EventCollaboratorMaxOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
  }

  export type EventCollaboratorMinOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
  }

  export type EventCollaboratorSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type EnumParticipationStatusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ParticipationStatus | EnumParticipationStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.ParticipationStatus[] | null
    notIn?: $Enums.ParticipationStatus[] | null
    not?: NestedEnumParticipationStatusNullableFilter<$PrismaModel> | $Enums.ParticipationStatus | null
  }

  export type DonorEventOrderByRelevanceInput = {
    fields: DonorEventOrderByRelevanceFieldEnum | DonorEventOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DonorEventDonor_idEvent_idCompoundUniqueInput = {
    donor_id: string
    event_id: string
  }

  export type DonorEventCountOrderByAggregateInput = {
    donor_id?: SortOrder
    event_id?: SortOrder
    status?: SortOrder
    counted_invitation?: SortOrder
    counted_attendance?: SortOrder
    decline_reason?: SortOrder
    created_at?: SortOrder
  }

  export type DonorEventMaxOrderByAggregateInput = {
    donor_id?: SortOrder
    event_id?: SortOrder
    status?: SortOrder
    counted_invitation?: SortOrder
    counted_attendance?: SortOrder
    decline_reason?: SortOrder
    created_at?: SortOrder
  }

  export type DonorEventMinOrderByAggregateInput = {
    donor_id?: SortOrder
    event_id?: SortOrder
    status?: SortOrder
    counted_invitation?: SortOrder
    counted_attendance?: SortOrder
    decline_reason?: SortOrder
    created_at?: SortOrder
  }

  export type EnumParticipationStatusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ParticipationStatus | EnumParticipationStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.ParticipationStatus[] | null
    notIn?: $Enums.ParticipationStatus[] | null
    not?: NestedEnumParticipationStatusNullableWithAggregatesFilter<$PrismaModel> | $Enums.ParticipationStatus | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumParticipationStatusNullableFilter<$PrismaModel>
    _max?: NestedEnumParticipationStatusNullableFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EventEditHistoryOrderByRelevanceInput = {
    fields: EventEditHistoryOrderByRelevanceFieldEnum | EventEditHistoryOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EventEditHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    editor_id?: SortOrder
    edit_type?: SortOrder
    old_value?: SortOrder
    new_value?: SortOrder
    meta?: SortOrder
    created_at?: SortOrder
  }

  export type EventEditHistoryAvgOrderByAggregateInput = {
    editor_id?: SortOrder
  }

  export type EventEditHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    editor_id?: SortOrder
    edit_type?: SortOrder
    old_value?: SortOrder
    new_value?: SortOrder
    created_at?: SortOrder
  }

  export type EventEditHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    event_id?: SortOrder
    editor_id?: SortOrder
    edit_type?: SortOrder
    old_value?: SortOrder
    new_value?: SortOrder
    created_at?: SortOrder
  }

  export type EventEditHistorySumOrderByAggregateInput = {
    editor_id?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EventCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput> | EventCreateWithoutCreatedByInput[] | EventUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCreatedByInput | EventCreateOrConnectWithoutCreatedByInput[]
    createMany?: EventCreateManyCreatedByInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type EventCollaboratorCreateNestedManyWithoutUserInput = {
    create?: XOR<EventCollaboratorCreateWithoutUserInput, EventCollaboratorUncheckedCreateWithoutUserInput> | EventCollaboratorCreateWithoutUserInput[] | EventCollaboratorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EventCollaboratorCreateOrConnectWithoutUserInput | EventCollaboratorCreateOrConnectWithoutUserInput[]
    createMany?: EventCollaboratorCreateManyUserInputEnvelope
    connect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
  }

  export type EventEditHistoryCreateNestedManyWithoutEditorInput = {
    create?: XOR<EventEditHistoryCreateWithoutEditorInput, EventEditHistoryUncheckedCreateWithoutEditorInput> | EventEditHistoryCreateWithoutEditorInput[] | EventEditHistoryUncheckedCreateWithoutEditorInput[]
    connectOrCreate?: EventEditHistoryCreateOrConnectWithoutEditorInput | EventEditHistoryCreateOrConnectWithoutEditorInput[]
    createMany?: EventEditHistoryCreateManyEditorInputEnvelope
    connect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput> | EventCreateWithoutCreatedByInput[] | EventUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCreatedByInput | EventCreateOrConnectWithoutCreatedByInput[]
    createMany?: EventCreateManyCreatedByInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type EventCollaboratorUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<EventCollaboratorCreateWithoutUserInput, EventCollaboratorUncheckedCreateWithoutUserInput> | EventCollaboratorCreateWithoutUserInput[] | EventCollaboratorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EventCollaboratorCreateOrConnectWithoutUserInput | EventCollaboratorCreateOrConnectWithoutUserInput[]
    createMany?: EventCollaboratorCreateManyUserInputEnvelope
    connect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
  }

  export type EventEditHistoryUncheckedCreateNestedManyWithoutEditorInput = {
    create?: XOR<EventEditHistoryCreateWithoutEditorInput, EventEditHistoryUncheckedCreateWithoutEditorInput> | EventEditHistoryCreateWithoutEditorInput[] | EventEditHistoryUncheckedCreateWithoutEditorInput[]
    connectOrCreate?: EventEditHistoryCreateOrConnectWithoutEditorInput | EventEditHistoryCreateOrConnectWithoutEditorInput[]
    createMany?: EventEditHistoryCreateManyEditorInputEnvelope
    connect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EventUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput> | EventCreateWithoutCreatedByInput[] | EventUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCreatedByInput | EventCreateOrConnectWithoutCreatedByInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutCreatedByInput | EventUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: EventCreateManyCreatedByInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutCreatedByInput | EventUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: EventUpdateManyWithWhereWithoutCreatedByInput | EventUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type EventCollaboratorUpdateManyWithoutUserNestedInput = {
    create?: XOR<EventCollaboratorCreateWithoutUserInput, EventCollaboratorUncheckedCreateWithoutUserInput> | EventCollaboratorCreateWithoutUserInput[] | EventCollaboratorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EventCollaboratorCreateOrConnectWithoutUserInput | EventCollaboratorCreateOrConnectWithoutUserInput[]
    upsert?: EventCollaboratorUpsertWithWhereUniqueWithoutUserInput | EventCollaboratorUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EventCollaboratorCreateManyUserInputEnvelope
    set?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    disconnect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    delete?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    connect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    update?: EventCollaboratorUpdateWithWhereUniqueWithoutUserInput | EventCollaboratorUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EventCollaboratorUpdateManyWithWhereWithoutUserInput | EventCollaboratorUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EventCollaboratorScalarWhereInput | EventCollaboratorScalarWhereInput[]
  }

  export type EventEditHistoryUpdateManyWithoutEditorNestedInput = {
    create?: XOR<EventEditHistoryCreateWithoutEditorInput, EventEditHistoryUncheckedCreateWithoutEditorInput> | EventEditHistoryCreateWithoutEditorInput[] | EventEditHistoryUncheckedCreateWithoutEditorInput[]
    connectOrCreate?: EventEditHistoryCreateOrConnectWithoutEditorInput | EventEditHistoryCreateOrConnectWithoutEditorInput[]
    upsert?: EventEditHistoryUpsertWithWhereUniqueWithoutEditorInput | EventEditHistoryUpsertWithWhereUniqueWithoutEditorInput[]
    createMany?: EventEditHistoryCreateManyEditorInputEnvelope
    set?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    disconnect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    delete?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    connect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    update?: EventEditHistoryUpdateWithWhereUniqueWithoutEditorInput | EventEditHistoryUpdateWithWhereUniqueWithoutEditorInput[]
    updateMany?: EventEditHistoryUpdateManyWithWhereWithoutEditorInput | EventEditHistoryUpdateManyWithWhereWithoutEditorInput[]
    deleteMany?: EventEditHistoryScalarWhereInput | EventEditHistoryScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EventUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput> | EventCreateWithoutCreatedByInput[] | EventUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCreatedByInput | EventCreateOrConnectWithoutCreatedByInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutCreatedByInput | EventUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: EventCreateManyCreatedByInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutCreatedByInput | EventUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: EventUpdateManyWithWhereWithoutCreatedByInput | EventUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type EventCollaboratorUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<EventCollaboratorCreateWithoutUserInput, EventCollaboratorUncheckedCreateWithoutUserInput> | EventCollaboratorCreateWithoutUserInput[] | EventCollaboratorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EventCollaboratorCreateOrConnectWithoutUserInput | EventCollaboratorCreateOrConnectWithoutUserInput[]
    upsert?: EventCollaboratorUpsertWithWhereUniqueWithoutUserInput | EventCollaboratorUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EventCollaboratorCreateManyUserInputEnvelope
    set?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    disconnect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    delete?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    connect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    update?: EventCollaboratorUpdateWithWhereUniqueWithoutUserInput | EventCollaboratorUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EventCollaboratorUpdateManyWithWhereWithoutUserInput | EventCollaboratorUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EventCollaboratorScalarWhereInput | EventCollaboratorScalarWhereInput[]
  }

  export type EventEditHistoryUncheckedUpdateManyWithoutEditorNestedInput = {
    create?: XOR<EventEditHistoryCreateWithoutEditorInput, EventEditHistoryUncheckedCreateWithoutEditorInput> | EventEditHistoryCreateWithoutEditorInput[] | EventEditHistoryUncheckedCreateWithoutEditorInput[]
    connectOrCreate?: EventEditHistoryCreateOrConnectWithoutEditorInput | EventEditHistoryCreateOrConnectWithoutEditorInput[]
    upsert?: EventEditHistoryUpsertWithWhereUniqueWithoutEditorInput | EventEditHistoryUpsertWithWhereUniqueWithoutEditorInput[]
    createMany?: EventEditHistoryCreateManyEditorInputEnvelope
    set?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    disconnect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    delete?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    connect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    update?: EventEditHistoryUpdateWithWhereUniqueWithoutEditorInput | EventEditHistoryUpdateWithWhereUniqueWithoutEditorInput[]
    updateMany?: EventEditHistoryUpdateManyWithWhereWithoutEditorInput | EventEditHistoryUpdateManyWithWhereWithoutEditorInput[]
    deleteMany?: EventEditHistoryScalarWhereInput | EventEditHistoryScalarWhereInput[]
  }

  export type DonorTagCreateNestedManyWithoutTagInput = {
    create?: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput> | DonorTagCreateWithoutTagInput[] | DonorTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutTagInput | DonorTagCreateOrConnectWithoutTagInput[]
    createMany?: DonorTagCreateManyTagInputEnvelope
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
  }

  export type EventCreateNestedManyWithoutTagsInput = {
    create?: XOR<EventCreateWithoutTagsInput, EventUncheckedCreateWithoutTagsInput> | EventCreateWithoutTagsInput[] | EventUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: EventCreateOrConnectWithoutTagsInput | EventCreateOrConnectWithoutTagsInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type DonorTagUncheckedCreateNestedManyWithoutTagInput = {
    create?: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput> | DonorTagCreateWithoutTagInput[] | DonorTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutTagInput | DonorTagCreateOrConnectWithoutTagInput[]
    createMany?: DonorTagCreateManyTagInputEnvelope
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutTagsInput = {
    create?: XOR<EventCreateWithoutTagsInput, EventUncheckedCreateWithoutTagsInput> | EventCreateWithoutTagsInput[] | EventUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: EventCreateOrConnectWithoutTagsInput | EventCreateOrConnectWithoutTagsInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DonorTagUpdateManyWithoutTagNestedInput = {
    create?: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput> | DonorTagCreateWithoutTagInput[] | DonorTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutTagInput | DonorTagCreateOrConnectWithoutTagInput[]
    upsert?: DonorTagUpsertWithWhereUniqueWithoutTagInput | DonorTagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: DonorTagCreateManyTagInputEnvelope
    set?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    disconnect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    delete?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    update?: DonorTagUpdateWithWhereUniqueWithoutTagInput | DonorTagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: DonorTagUpdateManyWithWhereWithoutTagInput | DonorTagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
  }

  export type EventUpdateManyWithoutTagsNestedInput = {
    create?: XOR<EventCreateWithoutTagsInput, EventUncheckedCreateWithoutTagsInput> | EventCreateWithoutTagsInput[] | EventUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: EventCreateOrConnectWithoutTagsInput | EventCreateOrConnectWithoutTagsInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutTagsInput | EventUpsertWithWhereUniqueWithoutTagsInput[]
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutTagsInput | EventUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: EventUpdateManyWithWhereWithoutTagsInput | EventUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type DonorTagUncheckedUpdateManyWithoutTagNestedInput = {
    create?: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput> | DonorTagCreateWithoutTagInput[] | DonorTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutTagInput | DonorTagCreateOrConnectWithoutTagInput[]
    upsert?: DonorTagUpsertWithWhereUniqueWithoutTagInput | DonorTagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: DonorTagCreateManyTagInputEnvelope
    set?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    disconnect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    delete?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    update?: DonorTagUpdateWithWhereUniqueWithoutTagInput | DonorTagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: DonorTagUpdateManyWithWhereWithoutTagInput | DonorTagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
  }

  export type EventUncheckedUpdateManyWithoutTagsNestedInput = {
    create?: XOR<EventCreateWithoutTagsInput, EventUncheckedCreateWithoutTagsInput> | EventCreateWithoutTagsInput[] | EventUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: EventCreateOrConnectWithoutTagsInput | EventCreateOrConnectWithoutTagsInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutTagsInput | EventUpsertWithWhereUniqueWithoutTagsInput[]
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutTagsInput | EventUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: EventUpdateManyWithWhereWithoutTagsInput | EventUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type DonorTagCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput> | DonorTagCreateWithoutDonorInput[] | DonorTagUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutDonorInput | DonorTagCreateOrConnectWithoutDonorInput[]
    createMany?: DonorTagCreateManyDonorInputEnvelope
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
  }

  export type DonorEventCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorEventCreateWithoutDonorInput, DonorEventUncheckedCreateWithoutDonorInput> | DonorEventCreateWithoutDonorInput[] | DonorEventUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorEventCreateOrConnectWithoutDonorInput | DonorEventCreateOrConnectWithoutDonorInput[]
    createMany?: DonorEventCreateManyDonorInputEnvelope
    connect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
  }

  export type DonorTagUncheckedCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput> | DonorTagCreateWithoutDonorInput[] | DonorTagUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutDonorInput | DonorTagCreateOrConnectWithoutDonorInput[]
    createMany?: DonorTagCreateManyDonorInputEnvelope
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
  }

  export type DonorEventUncheckedCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorEventCreateWithoutDonorInput, DonorEventUncheckedCreateWithoutDonorInput> | DonorEventCreateWithoutDonorInput[] | DonorEventUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorEventCreateOrConnectWithoutDonorInput | DonorEventCreateOrConnectWithoutDonorInput[]
    createMany?: DonorEventCreateManyDonorInputEnvelope
    connect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
  }

  export type EnumCityFieldUpdateOperationsInput = {
    set?: $Enums.City
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableEnumContactPhoneTypeFieldUpdateOperationsInput = {
    set?: $Enums.ContactPhoneType | null
  }

  export type NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput = {
    set?: $Enums.SubscriptionPreference | null
  }

  export type NullableEnumCommunicationPreferenceFieldUpdateOperationsInput = {
    set?: $Enums.CommunicationPreference | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DonorTagUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput> | DonorTagCreateWithoutDonorInput[] | DonorTagUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutDonorInput | DonorTagCreateOrConnectWithoutDonorInput[]
    upsert?: DonorTagUpsertWithWhereUniqueWithoutDonorInput | DonorTagUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorTagCreateManyDonorInputEnvelope
    set?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    disconnect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    delete?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    update?: DonorTagUpdateWithWhereUniqueWithoutDonorInput | DonorTagUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorTagUpdateManyWithWhereWithoutDonorInput | DonorTagUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
  }

  export type DonorEventUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorEventCreateWithoutDonorInput, DonorEventUncheckedCreateWithoutDonorInput> | DonorEventCreateWithoutDonorInput[] | DonorEventUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorEventCreateOrConnectWithoutDonorInput | DonorEventCreateOrConnectWithoutDonorInput[]
    upsert?: DonorEventUpsertWithWhereUniqueWithoutDonorInput | DonorEventUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorEventCreateManyDonorInputEnvelope
    set?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    disconnect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    delete?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    connect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    update?: DonorEventUpdateWithWhereUniqueWithoutDonorInput | DonorEventUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorEventUpdateManyWithWhereWithoutDonorInput | DonorEventUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorEventScalarWhereInput | DonorEventScalarWhereInput[]
  }

  export type DonorTagUncheckedUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput> | DonorTagCreateWithoutDonorInput[] | DonorTagUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutDonorInput | DonorTagCreateOrConnectWithoutDonorInput[]
    upsert?: DonorTagUpsertWithWhereUniqueWithoutDonorInput | DonorTagUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorTagCreateManyDonorInputEnvelope
    set?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    disconnect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    delete?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    update?: DonorTagUpdateWithWhereUniqueWithoutDonorInput | DonorTagUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorTagUpdateManyWithWhereWithoutDonorInput | DonorTagUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
  }

  export type DonorEventUncheckedUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorEventCreateWithoutDonorInput, DonorEventUncheckedCreateWithoutDonorInput> | DonorEventCreateWithoutDonorInput[] | DonorEventUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorEventCreateOrConnectWithoutDonorInput | DonorEventCreateOrConnectWithoutDonorInput[]
    upsert?: DonorEventUpsertWithWhereUniqueWithoutDonorInput | DonorEventUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorEventCreateManyDonorInputEnvelope
    set?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    disconnect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    delete?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    connect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    update?: DonorEventUpdateWithWhereUniqueWithoutDonorInput | DonorEventUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorEventUpdateManyWithWhereWithoutDonorInput | DonorEventUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorEventScalarWhereInput | DonorEventScalarWhereInput[]
  }

  export type DonorCreateNestedOneWithoutTagsInput = {
    create?: XOR<DonorCreateWithoutTagsInput, DonorUncheckedCreateWithoutTagsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutTagsInput
    connect?: DonorWhereUniqueInput
  }

  export type TagCreateNestedOneWithoutDonorsInput = {
    create?: XOR<TagCreateWithoutDonorsInput, TagUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: TagCreateOrConnectWithoutDonorsInput
    connect?: TagWhereUniqueInput
  }

  export type DonorUpdateOneRequiredWithoutTagsNestedInput = {
    create?: XOR<DonorCreateWithoutTagsInput, DonorUncheckedCreateWithoutTagsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutTagsInput
    upsert?: DonorUpsertWithoutTagsInput
    connect?: DonorWhereUniqueInput
    update?: XOR<XOR<DonorUpdateToOneWithWhereWithoutTagsInput, DonorUpdateWithoutTagsInput>, DonorUncheckedUpdateWithoutTagsInput>
  }

  export type TagUpdateOneRequiredWithoutDonorsNestedInput = {
    create?: XOR<TagCreateWithoutDonorsInput, TagUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: TagCreateOrConnectWithoutDonorsInput
    upsert?: TagUpsertWithoutDonorsInput
    connect?: TagWhereUniqueInput
    update?: XOR<XOR<TagUpdateToOneWithWhereWithoutDonorsInput, TagUpdateWithoutDonorsInput>, TagUncheckedUpdateWithoutDonorsInput>
  }

  export type DonorEventCreateNestedManyWithoutEventInput = {
    create?: XOR<DonorEventCreateWithoutEventInput, DonorEventUncheckedCreateWithoutEventInput> | DonorEventCreateWithoutEventInput[] | DonorEventUncheckedCreateWithoutEventInput[]
    connectOrCreate?: DonorEventCreateOrConnectWithoutEventInput | DonorEventCreateOrConnectWithoutEventInput[]
    createMany?: DonorEventCreateManyEventInputEnvelope
    connect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
  }

  export type TagCreateNestedManyWithoutEventsInput = {
    create?: XOR<TagCreateWithoutEventsInput, TagUncheckedCreateWithoutEventsInput> | TagCreateWithoutEventsInput[] | TagUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: TagCreateOrConnectWithoutEventsInput | TagCreateOrConnectWithoutEventsInput[]
    connect?: TagWhereUniqueInput | TagWhereUniqueInput[]
  }

  export type EventEditHistoryCreateNestedManyWithoutEventInput = {
    create?: XOR<EventEditHistoryCreateWithoutEventInput, EventEditHistoryUncheckedCreateWithoutEventInput> | EventEditHistoryCreateWithoutEventInput[] | EventEditHistoryUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventEditHistoryCreateOrConnectWithoutEventInput | EventEditHistoryCreateOrConnectWithoutEventInput[]
    createMany?: EventEditHistoryCreateManyEventInputEnvelope
    connect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutEventsInput = {
    create?: XOR<UserCreateWithoutEventsInput, UserUncheckedCreateWithoutEventsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEventsInput
    connect?: UserWhereUniqueInput
  }

  export type EventCollaboratorCreateNestedManyWithoutEventInput = {
    create?: XOR<EventCollaboratorCreateWithoutEventInput, EventCollaboratorUncheckedCreateWithoutEventInput> | EventCollaboratorCreateWithoutEventInput[] | EventCollaboratorUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventCollaboratorCreateOrConnectWithoutEventInput | EventCollaboratorCreateOrConnectWithoutEventInput[]
    createMany?: EventCollaboratorCreateManyEventInputEnvelope
    connect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
  }

  export type DonorEventUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<DonorEventCreateWithoutEventInput, DonorEventUncheckedCreateWithoutEventInput> | DonorEventCreateWithoutEventInput[] | DonorEventUncheckedCreateWithoutEventInput[]
    connectOrCreate?: DonorEventCreateOrConnectWithoutEventInput | DonorEventCreateOrConnectWithoutEventInput[]
    createMany?: DonorEventCreateManyEventInputEnvelope
    connect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
  }

  export type TagUncheckedCreateNestedManyWithoutEventsInput = {
    create?: XOR<TagCreateWithoutEventsInput, TagUncheckedCreateWithoutEventsInput> | TagCreateWithoutEventsInput[] | TagUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: TagCreateOrConnectWithoutEventsInput | TagCreateOrConnectWithoutEventsInput[]
    connect?: TagWhereUniqueInput | TagWhereUniqueInput[]
  }

  export type EventEditHistoryUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<EventEditHistoryCreateWithoutEventInput, EventEditHistoryUncheckedCreateWithoutEventInput> | EventEditHistoryCreateWithoutEventInput[] | EventEditHistoryUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventEditHistoryCreateOrConnectWithoutEventInput | EventEditHistoryCreateOrConnectWithoutEventInput[]
    createMany?: EventEditHistoryCreateManyEventInputEnvelope
    connect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
  }

  export type EventCollaboratorUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<EventCollaboratorCreateWithoutEventInput, EventCollaboratorUncheckedCreateWithoutEventInput> | EventCollaboratorCreateWithoutEventInput[] | EventCollaboratorUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventCollaboratorCreateOrConnectWithoutEventInput | EventCollaboratorCreateOrConnectWithoutEventInput[]
    createMany?: EventCollaboratorCreateManyEventInputEnvelope
    connect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
  }

  export type EnumEventStatusFieldUpdateOperationsInput = {
    set?: $Enums.EventStatus
  }

  export type DonorEventUpdateManyWithoutEventNestedInput = {
    create?: XOR<DonorEventCreateWithoutEventInput, DonorEventUncheckedCreateWithoutEventInput> | DonorEventCreateWithoutEventInput[] | DonorEventUncheckedCreateWithoutEventInput[]
    connectOrCreate?: DonorEventCreateOrConnectWithoutEventInput | DonorEventCreateOrConnectWithoutEventInput[]
    upsert?: DonorEventUpsertWithWhereUniqueWithoutEventInput | DonorEventUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: DonorEventCreateManyEventInputEnvelope
    set?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    disconnect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    delete?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    connect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    update?: DonorEventUpdateWithWhereUniqueWithoutEventInput | DonorEventUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: DonorEventUpdateManyWithWhereWithoutEventInput | DonorEventUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: DonorEventScalarWhereInput | DonorEventScalarWhereInput[]
  }

  export type TagUpdateManyWithoutEventsNestedInput = {
    create?: XOR<TagCreateWithoutEventsInput, TagUncheckedCreateWithoutEventsInput> | TagCreateWithoutEventsInput[] | TagUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: TagCreateOrConnectWithoutEventsInput | TagCreateOrConnectWithoutEventsInput[]
    upsert?: TagUpsertWithWhereUniqueWithoutEventsInput | TagUpsertWithWhereUniqueWithoutEventsInput[]
    set?: TagWhereUniqueInput | TagWhereUniqueInput[]
    disconnect?: TagWhereUniqueInput | TagWhereUniqueInput[]
    delete?: TagWhereUniqueInput | TagWhereUniqueInput[]
    connect?: TagWhereUniqueInput | TagWhereUniqueInput[]
    update?: TagUpdateWithWhereUniqueWithoutEventsInput | TagUpdateWithWhereUniqueWithoutEventsInput[]
    updateMany?: TagUpdateManyWithWhereWithoutEventsInput | TagUpdateManyWithWhereWithoutEventsInput[]
    deleteMany?: TagScalarWhereInput | TagScalarWhereInput[]
  }

  export type EventEditHistoryUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventEditHistoryCreateWithoutEventInput, EventEditHistoryUncheckedCreateWithoutEventInput> | EventEditHistoryCreateWithoutEventInput[] | EventEditHistoryUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventEditHistoryCreateOrConnectWithoutEventInput | EventEditHistoryCreateOrConnectWithoutEventInput[]
    upsert?: EventEditHistoryUpsertWithWhereUniqueWithoutEventInput | EventEditHistoryUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventEditHistoryCreateManyEventInputEnvelope
    set?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    disconnect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    delete?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    connect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    update?: EventEditHistoryUpdateWithWhereUniqueWithoutEventInput | EventEditHistoryUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventEditHistoryUpdateManyWithWhereWithoutEventInput | EventEditHistoryUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventEditHistoryScalarWhereInput | EventEditHistoryScalarWhereInput[]
  }

  export type UserUpdateOneWithoutEventsNestedInput = {
    create?: XOR<UserCreateWithoutEventsInput, UserUncheckedCreateWithoutEventsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEventsInput
    upsert?: UserUpsertWithoutEventsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEventsInput, UserUpdateWithoutEventsInput>, UserUncheckedUpdateWithoutEventsInput>
  }

  export type EventCollaboratorUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventCollaboratorCreateWithoutEventInput, EventCollaboratorUncheckedCreateWithoutEventInput> | EventCollaboratorCreateWithoutEventInput[] | EventCollaboratorUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventCollaboratorCreateOrConnectWithoutEventInput | EventCollaboratorCreateOrConnectWithoutEventInput[]
    upsert?: EventCollaboratorUpsertWithWhereUniqueWithoutEventInput | EventCollaboratorUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventCollaboratorCreateManyEventInputEnvelope
    set?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    disconnect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    delete?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    connect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    update?: EventCollaboratorUpdateWithWhereUniqueWithoutEventInput | EventCollaboratorUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventCollaboratorUpdateManyWithWhereWithoutEventInput | EventCollaboratorUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventCollaboratorScalarWhereInput | EventCollaboratorScalarWhereInput[]
  }

  export type DonorEventUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<DonorEventCreateWithoutEventInput, DonorEventUncheckedCreateWithoutEventInput> | DonorEventCreateWithoutEventInput[] | DonorEventUncheckedCreateWithoutEventInput[]
    connectOrCreate?: DonorEventCreateOrConnectWithoutEventInput | DonorEventCreateOrConnectWithoutEventInput[]
    upsert?: DonorEventUpsertWithWhereUniqueWithoutEventInput | DonorEventUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: DonorEventCreateManyEventInputEnvelope
    set?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    disconnect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    delete?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    connect?: DonorEventWhereUniqueInput | DonorEventWhereUniqueInput[]
    update?: DonorEventUpdateWithWhereUniqueWithoutEventInput | DonorEventUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: DonorEventUpdateManyWithWhereWithoutEventInput | DonorEventUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: DonorEventScalarWhereInput | DonorEventScalarWhereInput[]
  }

  export type TagUncheckedUpdateManyWithoutEventsNestedInput = {
    create?: XOR<TagCreateWithoutEventsInput, TagUncheckedCreateWithoutEventsInput> | TagCreateWithoutEventsInput[] | TagUncheckedCreateWithoutEventsInput[]
    connectOrCreate?: TagCreateOrConnectWithoutEventsInput | TagCreateOrConnectWithoutEventsInput[]
    upsert?: TagUpsertWithWhereUniqueWithoutEventsInput | TagUpsertWithWhereUniqueWithoutEventsInput[]
    set?: TagWhereUniqueInput | TagWhereUniqueInput[]
    disconnect?: TagWhereUniqueInput | TagWhereUniqueInput[]
    delete?: TagWhereUniqueInput | TagWhereUniqueInput[]
    connect?: TagWhereUniqueInput | TagWhereUniqueInput[]
    update?: TagUpdateWithWhereUniqueWithoutEventsInput | TagUpdateWithWhereUniqueWithoutEventsInput[]
    updateMany?: TagUpdateManyWithWhereWithoutEventsInput | TagUpdateManyWithWhereWithoutEventsInput[]
    deleteMany?: TagScalarWhereInput | TagScalarWhereInput[]
  }

  export type EventEditHistoryUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventEditHistoryCreateWithoutEventInput, EventEditHistoryUncheckedCreateWithoutEventInput> | EventEditHistoryCreateWithoutEventInput[] | EventEditHistoryUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventEditHistoryCreateOrConnectWithoutEventInput | EventEditHistoryCreateOrConnectWithoutEventInput[]
    upsert?: EventEditHistoryUpsertWithWhereUniqueWithoutEventInput | EventEditHistoryUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventEditHistoryCreateManyEventInputEnvelope
    set?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    disconnect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    delete?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    connect?: EventEditHistoryWhereUniqueInput | EventEditHistoryWhereUniqueInput[]
    update?: EventEditHistoryUpdateWithWhereUniqueWithoutEventInput | EventEditHistoryUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventEditHistoryUpdateManyWithWhereWithoutEventInput | EventEditHistoryUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventEditHistoryScalarWhereInput | EventEditHistoryScalarWhereInput[]
  }

  export type EventCollaboratorUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventCollaboratorCreateWithoutEventInput, EventCollaboratorUncheckedCreateWithoutEventInput> | EventCollaboratorCreateWithoutEventInput[] | EventCollaboratorUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventCollaboratorCreateOrConnectWithoutEventInput | EventCollaboratorCreateOrConnectWithoutEventInput[]
    upsert?: EventCollaboratorUpsertWithWhereUniqueWithoutEventInput | EventCollaboratorUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventCollaboratorCreateManyEventInputEnvelope
    set?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    disconnect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    delete?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    connect?: EventCollaboratorWhereUniqueInput | EventCollaboratorWhereUniqueInput[]
    update?: EventCollaboratorUpdateWithWhereUniqueWithoutEventInput | EventCollaboratorUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventCollaboratorUpdateManyWithWhereWithoutEventInput | EventCollaboratorUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventCollaboratorScalarWhereInput | EventCollaboratorScalarWhereInput[]
  }

  export type EventCreateNestedOneWithoutCollaboratorsInput = {
    create?: XOR<EventCreateWithoutCollaboratorsInput, EventUncheckedCreateWithoutCollaboratorsInput>
    connectOrCreate?: EventCreateOrConnectWithoutCollaboratorsInput
    connect?: EventWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCollaboratorsInput = {
    create?: XOR<UserCreateWithoutCollaboratorsInput, UserUncheckedCreateWithoutCollaboratorsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollaboratorsInput
    connect?: UserWhereUniqueInput
  }

  export type EventUpdateOneRequiredWithoutCollaboratorsNestedInput = {
    create?: XOR<EventCreateWithoutCollaboratorsInput, EventUncheckedCreateWithoutCollaboratorsInput>
    connectOrCreate?: EventCreateOrConnectWithoutCollaboratorsInput
    upsert?: EventUpsertWithoutCollaboratorsInput
    connect?: EventWhereUniqueInput
    update?: XOR<XOR<EventUpdateToOneWithWhereWithoutCollaboratorsInput, EventUpdateWithoutCollaboratorsInput>, EventUncheckedUpdateWithoutCollaboratorsInput>
  }

  export type UserUpdateOneRequiredWithoutCollaboratorsNestedInput = {
    create?: XOR<UserCreateWithoutCollaboratorsInput, UserUncheckedCreateWithoutCollaboratorsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCollaboratorsInput
    upsert?: UserUpsertWithoutCollaboratorsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCollaboratorsInput, UserUpdateWithoutCollaboratorsInput>, UserUncheckedUpdateWithoutCollaboratorsInput>
  }

  export type DonorCreateNestedOneWithoutEventsInput = {
    create?: XOR<DonorCreateWithoutEventsInput, DonorUncheckedCreateWithoutEventsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutEventsInput
    connect?: DonorWhereUniqueInput
  }

  export type EventCreateNestedOneWithoutDonorsInput = {
    create?: XOR<EventCreateWithoutDonorsInput, EventUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: EventCreateOrConnectWithoutDonorsInput
    connect?: EventWhereUniqueInput
  }

  export type NullableEnumParticipationStatusFieldUpdateOperationsInput = {
    set?: $Enums.ParticipationStatus | null
  }

  export type DonorUpdateOneRequiredWithoutEventsNestedInput = {
    create?: XOR<DonorCreateWithoutEventsInput, DonorUncheckedCreateWithoutEventsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutEventsInput
    upsert?: DonorUpsertWithoutEventsInput
    connect?: DonorWhereUniqueInput
    update?: XOR<XOR<DonorUpdateToOneWithWhereWithoutEventsInput, DonorUpdateWithoutEventsInput>, DonorUncheckedUpdateWithoutEventsInput>
  }

  export type EventUpdateOneRequiredWithoutDonorsNestedInput = {
    create?: XOR<EventCreateWithoutDonorsInput, EventUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: EventCreateOrConnectWithoutDonorsInput
    upsert?: EventUpsertWithoutDonorsInput
    connect?: EventWhereUniqueInput
    update?: XOR<XOR<EventUpdateToOneWithWhereWithoutDonorsInput, EventUpdateWithoutDonorsInput>, EventUncheckedUpdateWithoutDonorsInput>
  }

  export type EventCreateNestedOneWithoutEditHistoryInput = {
    create?: XOR<EventCreateWithoutEditHistoryInput, EventUncheckedCreateWithoutEditHistoryInput>
    connectOrCreate?: EventCreateOrConnectWithoutEditHistoryInput
    connect?: EventWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutEditHistoriesInput = {
    create?: XOR<UserCreateWithoutEditHistoriesInput, UserUncheckedCreateWithoutEditHistoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutEditHistoriesInput
    connect?: UserWhereUniqueInput
  }

  export type EventUpdateOneRequiredWithoutEditHistoryNestedInput = {
    create?: XOR<EventCreateWithoutEditHistoryInput, EventUncheckedCreateWithoutEditHistoryInput>
    connectOrCreate?: EventCreateOrConnectWithoutEditHistoryInput
    upsert?: EventUpsertWithoutEditHistoryInput
    connect?: EventWhereUniqueInput
    update?: XOR<XOR<EventUpdateToOneWithWhereWithoutEditHistoryInput, EventUpdateWithoutEditHistoryInput>, EventUncheckedUpdateWithoutEditHistoryInput>
  }

  export type UserUpdateOneWithoutEditHistoriesNestedInput = {
    create?: XOR<UserCreateWithoutEditHistoriesInput, UserUncheckedCreateWithoutEditHistoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutEditHistoriesInput
    upsert?: UserUpsertWithoutEditHistoriesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEditHistoriesInput, UserUpdateWithoutEditHistoriesInput>, UserUncheckedUpdateWithoutEditHistoriesInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumCityFilter<$PrismaModel = never> = {
    equals?: $Enums.City | EnumCityFieldRefInput<$PrismaModel>
    in?: $Enums.City[]
    notIn?: $Enums.City[]
    not?: NestedEnumCityFilter<$PrismaModel> | $Enums.City
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumContactPhoneTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ContactPhoneType | EnumContactPhoneTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ContactPhoneType[] | null
    notIn?: $Enums.ContactPhoneType[] | null
    not?: NestedEnumContactPhoneTypeNullableFilter<$PrismaModel> | $Enums.ContactPhoneType | null
  }

  export type NestedEnumSubscriptionPreferenceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionPreference | EnumSubscriptionPreferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.SubscriptionPreference[] | null
    notIn?: $Enums.SubscriptionPreference[] | null
    not?: NestedEnumSubscriptionPreferenceNullableFilter<$PrismaModel> | $Enums.SubscriptionPreference | null
  }

  export type NestedEnumCommunicationPreferenceNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.CommunicationPreference | EnumCommunicationPreferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.CommunicationPreference[] | null
    notIn?: $Enums.CommunicationPreference[] | null
    not?: NestedEnumCommunicationPreferenceNullableFilter<$PrismaModel> | $Enums.CommunicationPreference | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumCityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.City | EnumCityFieldRefInput<$PrismaModel>
    in?: $Enums.City[]
    notIn?: $Enums.City[]
    not?: NestedEnumCityWithAggregatesFilter<$PrismaModel> | $Enums.City
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCityFilter<$PrismaModel>
    _max?: NestedEnumCityFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumContactPhoneTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContactPhoneType | EnumContactPhoneTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ContactPhoneType[] | null
    notIn?: $Enums.ContactPhoneType[] | null
    not?: NestedEnumContactPhoneTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ContactPhoneType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumContactPhoneTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumContactPhoneTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumSubscriptionPreferenceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionPreference | EnumSubscriptionPreferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.SubscriptionPreference[] | null
    notIn?: $Enums.SubscriptionPreference[] | null
    not?: NestedEnumSubscriptionPreferenceNullableWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionPreference | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionPreferenceNullableFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionPreferenceNullableFilter<$PrismaModel>
  }

  export type NestedEnumCommunicationPreferenceNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CommunicationPreference | EnumCommunicationPreferenceFieldRefInput<$PrismaModel> | null
    in?: $Enums.CommunicationPreference[] | null
    notIn?: $Enums.CommunicationPreference[] | null
    not?: NestedEnumCommunicationPreferenceNullableWithAggregatesFilter<$PrismaModel> | $Enums.CommunicationPreference | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumCommunicationPreferenceNullableFilter<$PrismaModel>
    _max?: NestedEnumCommunicationPreferenceNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumEventStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EventStatus | EnumEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EventStatus[]
    notIn?: $Enums.EventStatus[]
    not?: NestedEnumEventStatusFilter<$PrismaModel> | $Enums.EventStatus
  }

  export type NestedEnumEventStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventStatus | EnumEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EventStatus[]
    notIn?: $Enums.EventStatus[]
    not?: NestedEnumEventStatusWithAggregatesFilter<$PrismaModel> | $Enums.EventStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventStatusFilter<$PrismaModel>
    _max?: NestedEnumEventStatusFilter<$PrismaModel>
  }

  export type NestedEnumParticipationStatusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ParticipationStatus | EnumParticipationStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.ParticipationStatus[] | null
    notIn?: $Enums.ParticipationStatus[] | null
    not?: NestedEnumParticipationStatusNullableFilter<$PrismaModel> | $Enums.ParticipationStatus | null
  }

  export type NestedEnumParticipationStatusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ParticipationStatus | EnumParticipationStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.ParticipationStatus[] | null
    notIn?: $Enums.ParticipationStatus[] | null
    not?: NestedEnumParticipationStatusNullableWithAggregatesFilter<$PrismaModel> | $Enums.ParticipationStatus | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumParticipationStatusNullableFilter<$PrismaModel>
    _max?: NestedEnumParticipationStatusNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EventCreateWithoutCreatedByInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorEventCreateNestedManyWithoutEventInput
    tags?: TagCreateNestedManyWithoutEventsInput
    editHistory?: EventEditHistoryCreateNestedManyWithoutEventInput
    collaborators?: EventCollaboratorCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutCreatedByInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorEventUncheckedCreateNestedManyWithoutEventInput
    tags?: TagUncheckedCreateNestedManyWithoutEventsInput
    editHistory?: EventEditHistoryUncheckedCreateNestedManyWithoutEventInput
    collaborators?: EventCollaboratorUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutCreatedByInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput>
  }

  export type EventCreateManyCreatedByInputEnvelope = {
    data: EventCreateManyCreatedByInput | EventCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type EventCollaboratorCreateWithoutUserInput = {
    event: EventCreateNestedOneWithoutCollaboratorsInput
  }

  export type EventCollaboratorUncheckedCreateWithoutUserInput = {
    id?: number
    eventId: string
  }

  export type EventCollaboratorCreateOrConnectWithoutUserInput = {
    where: EventCollaboratorWhereUniqueInput
    create: XOR<EventCollaboratorCreateWithoutUserInput, EventCollaboratorUncheckedCreateWithoutUserInput>
  }

  export type EventCollaboratorCreateManyUserInputEnvelope = {
    data: EventCollaboratorCreateManyUserInput | EventCollaboratorCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type EventEditHistoryCreateWithoutEditorInput = {
    id?: string
    edit_type: string
    old_value?: string | null
    new_value?: string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    event: EventCreateNestedOneWithoutEditHistoryInput
  }

  export type EventEditHistoryUncheckedCreateWithoutEditorInput = {
    id?: string
    event_id: string
    edit_type: string
    old_value?: string | null
    new_value?: string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type EventEditHistoryCreateOrConnectWithoutEditorInput = {
    where: EventEditHistoryWhereUniqueInput
    create: XOR<EventEditHistoryCreateWithoutEditorInput, EventEditHistoryUncheckedCreateWithoutEditorInput>
  }

  export type EventEditHistoryCreateManyEditorInputEnvelope = {
    data: EventEditHistoryCreateManyEditorInput | EventEditHistoryCreateManyEditorInput[]
    skipDuplicates?: boolean
  }

  export type EventUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutCreatedByInput, EventUncheckedUpdateWithoutCreatedByInput>
    create: XOR<EventCreateWithoutCreatedByInput, EventUncheckedCreateWithoutCreatedByInput>
  }

  export type EventUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutCreatedByInput, EventUncheckedUpdateWithoutCreatedByInput>
  }

  export type EventUpdateManyWithWhereWithoutCreatedByInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type EventScalarWhereInput = {
    AND?: EventScalarWhereInput | EventScalarWhereInput[]
    OR?: EventScalarWhereInput[]
    NOT?: EventScalarWhereInput | EventScalarWhereInput[]
    id?: StringFilter<"Event"> | string
    name?: StringFilter<"Event"> | string
    description?: StringNullableFilter<"Event"> | string | null
    date?: DateTimeNullableFilter<"Event"> | Date | string | null
    location?: StringNullableFilter<"Event"> | string | null
    status?: EnumEventStatusFilter<"Event"> | $Enums.EventStatus
    capacity?: IntNullableFilter<"Event"> | number | null
    is_deleted?: BoolFilter<"Event"> | boolean
    deleted_at?: DateTimeNullableFilter<"Event"> | Date | string | null
    created_at?: DateTimeFilter<"Event"> | Date | string
    updated_at?: DateTimeFilter<"Event"> | Date | string
    created_by?: IntNullableFilter<"Event"> | number | null
  }

  export type EventCollaboratorUpsertWithWhereUniqueWithoutUserInput = {
    where: EventCollaboratorWhereUniqueInput
    update: XOR<EventCollaboratorUpdateWithoutUserInput, EventCollaboratorUncheckedUpdateWithoutUserInput>
    create: XOR<EventCollaboratorCreateWithoutUserInput, EventCollaboratorUncheckedCreateWithoutUserInput>
  }

  export type EventCollaboratorUpdateWithWhereUniqueWithoutUserInput = {
    where: EventCollaboratorWhereUniqueInput
    data: XOR<EventCollaboratorUpdateWithoutUserInput, EventCollaboratorUncheckedUpdateWithoutUserInput>
  }

  export type EventCollaboratorUpdateManyWithWhereWithoutUserInput = {
    where: EventCollaboratorScalarWhereInput
    data: XOR<EventCollaboratorUpdateManyMutationInput, EventCollaboratorUncheckedUpdateManyWithoutUserInput>
  }

  export type EventCollaboratorScalarWhereInput = {
    AND?: EventCollaboratorScalarWhereInput | EventCollaboratorScalarWhereInput[]
    OR?: EventCollaboratorScalarWhereInput[]
    NOT?: EventCollaboratorScalarWhereInput | EventCollaboratorScalarWhereInput[]
    id?: IntFilter<"EventCollaborator"> | number
    eventId?: StringFilter<"EventCollaborator"> | string
    userId?: IntFilter<"EventCollaborator"> | number
  }

  export type EventEditHistoryUpsertWithWhereUniqueWithoutEditorInput = {
    where: EventEditHistoryWhereUniqueInput
    update: XOR<EventEditHistoryUpdateWithoutEditorInput, EventEditHistoryUncheckedUpdateWithoutEditorInput>
    create: XOR<EventEditHistoryCreateWithoutEditorInput, EventEditHistoryUncheckedCreateWithoutEditorInput>
  }

  export type EventEditHistoryUpdateWithWhereUniqueWithoutEditorInput = {
    where: EventEditHistoryWhereUniqueInput
    data: XOR<EventEditHistoryUpdateWithoutEditorInput, EventEditHistoryUncheckedUpdateWithoutEditorInput>
  }

  export type EventEditHistoryUpdateManyWithWhereWithoutEditorInput = {
    where: EventEditHistoryScalarWhereInput
    data: XOR<EventEditHistoryUpdateManyMutationInput, EventEditHistoryUncheckedUpdateManyWithoutEditorInput>
  }

  export type EventEditHistoryScalarWhereInput = {
    AND?: EventEditHistoryScalarWhereInput | EventEditHistoryScalarWhereInput[]
    OR?: EventEditHistoryScalarWhereInput[]
    NOT?: EventEditHistoryScalarWhereInput | EventEditHistoryScalarWhereInput[]
    id?: StringFilter<"EventEditHistory"> | string
    event_id?: StringFilter<"EventEditHistory"> | string
    editor_id?: IntNullableFilter<"EventEditHistory"> | number | null
    edit_type?: StringFilter<"EventEditHistory"> | string
    old_value?: StringNullableFilter<"EventEditHistory"> | string | null
    new_value?: StringNullableFilter<"EventEditHistory"> | string | null
    meta?: JsonNullableFilter<"EventEditHistory">
    created_at?: DateTimeFilter<"EventEditHistory"> | Date | string
  }

  export type DonorTagCreateWithoutTagInput = {
    created_at?: Date | string
    donor: DonorCreateNestedOneWithoutTagsInput
  }

  export type DonorTagUncheckedCreateWithoutTagInput = {
    donor_id: string
    created_at?: Date | string
  }

  export type DonorTagCreateOrConnectWithoutTagInput = {
    where: DonorTagWhereUniqueInput
    create: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput>
  }

  export type DonorTagCreateManyTagInputEnvelope = {
    data: DonorTagCreateManyTagInput | DonorTagCreateManyTagInput[]
    skipDuplicates?: boolean
  }

  export type EventCreateWithoutTagsInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorEventCreateNestedManyWithoutEventInput
    editHistory?: EventEditHistoryCreateNestedManyWithoutEventInput
    createdBy?: UserCreateNestedOneWithoutEventsInput
    collaborators?: EventCollaboratorCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutTagsInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    created_by?: number | null
    donors?: DonorEventUncheckedCreateNestedManyWithoutEventInput
    editHistory?: EventEditHistoryUncheckedCreateNestedManyWithoutEventInput
    collaborators?: EventCollaboratorUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutTagsInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutTagsInput, EventUncheckedCreateWithoutTagsInput>
  }

  export type DonorTagUpsertWithWhereUniqueWithoutTagInput = {
    where: DonorTagWhereUniqueInput
    update: XOR<DonorTagUpdateWithoutTagInput, DonorTagUncheckedUpdateWithoutTagInput>
    create: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput>
  }

  export type DonorTagUpdateWithWhereUniqueWithoutTagInput = {
    where: DonorTagWhereUniqueInput
    data: XOR<DonorTagUpdateWithoutTagInput, DonorTagUncheckedUpdateWithoutTagInput>
  }

  export type DonorTagUpdateManyWithWhereWithoutTagInput = {
    where: DonorTagScalarWhereInput
    data: XOR<DonorTagUpdateManyMutationInput, DonorTagUncheckedUpdateManyWithoutTagInput>
  }

  export type DonorTagScalarWhereInput = {
    AND?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
    OR?: DonorTagScalarWhereInput[]
    NOT?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
    donor_id?: StringFilter<"DonorTag"> | string
    tag_id?: StringFilter<"DonorTag"> | string
    created_at?: DateTimeFilter<"DonorTag"> | Date | string
  }

  export type EventUpsertWithWhereUniqueWithoutTagsInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutTagsInput, EventUncheckedUpdateWithoutTagsInput>
    create: XOR<EventCreateWithoutTagsInput, EventUncheckedCreateWithoutTagsInput>
  }

  export type EventUpdateWithWhereUniqueWithoutTagsInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutTagsInput, EventUncheckedUpdateWithoutTagsInput>
  }

  export type EventUpdateManyWithWhereWithoutTagsInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutTagsInput>
  }

  export type DonorTagCreateWithoutDonorInput = {
    created_at?: Date | string
    tag: TagCreateNestedOneWithoutDonorsInput
  }

  export type DonorTagUncheckedCreateWithoutDonorInput = {
    tag_id: string
    created_at?: Date | string
  }

  export type DonorTagCreateOrConnectWithoutDonorInput = {
    where: DonorTagWhereUniqueInput
    create: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput>
  }

  export type DonorTagCreateManyDonorInputEnvelope = {
    data: DonorTagCreateManyDonorInput | DonorTagCreateManyDonorInput[]
    skipDuplicates?: boolean
  }

  export type DonorEventCreateWithoutDonorInput = {
    status?: $Enums.ParticipationStatus | null
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: string | null
    created_at?: Date | string
    event: EventCreateNestedOneWithoutDonorsInput
  }

  export type DonorEventUncheckedCreateWithoutDonorInput = {
    event_id: string
    status?: $Enums.ParticipationStatus | null
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: string | null
    created_at?: Date | string
  }

  export type DonorEventCreateOrConnectWithoutDonorInput = {
    where: DonorEventWhereUniqueInput
    create: XOR<DonorEventCreateWithoutDonorInput, DonorEventUncheckedCreateWithoutDonorInput>
  }

  export type DonorEventCreateManyDonorInputEnvelope = {
    data: DonorEventCreateManyDonorInput | DonorEventCreateManyDonorInput[]
    skipDuplicates?: boolean
  }

  export type DonorTagUpsertWithWhereUniqueWithoutDonorInput = {
    where: DonorTagWhereUniqueInput
    update: XOR<DonorTagUpdateWithoutDonorInput, DonorTagUncheckedUpdateWithoutDonorInput>
    create: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput>
  }

  export type DonorTagUpdateWithWhereUniqueWithoutDonorInput = {
    where: DonorTagWhereUniqueInput
    data: XOR<DonorTagUpdateWithoutDonorInput, DonorTagUncheckedUpdateWithoutDonorInput>
  }

  export type DonorTagUpdateManyWithWhereWithoutDonorInput = {
    where: DonorTagScalarWhereInput
    data: XOR<DonorTagUpdateManyMutationInput, DonorTagUncheckedUpdateManyWithoutDonorInput>
  }

  export type DonorEventUpsertWithWhereUniqueWithoutDonorInput = {
    where: DonorEventWhereUniqueInput
    update: XOR<DonorEventUpdateWithoutDonorInput, DonorEventUncheckedUpdateWithoutDonorInput>
    create: XOR<DonorEventCreateWithoutDonorInput, DonorEventUncheckedCreateWithoutDonorInput>
  }

  export type DonorEventUpdateWithWhereUniqueWithoutDonorInput = {
    where: DonorEventWhereUniqueInput
    data: XOR<DonorEventUpdateWithoutDonorInput, DonorEventUncheckedUpdateWithoutDonorInput>
  }

  export type DonorEventUpdateManyWithWhereWithoutDonorInput = {
    where: DonorEventScalarWhereInput
    data: XOR<DonorEventUpdateManyMutationInput, DonorEventUncheckedUpdateManyWithoutDonorInput>
  }

  export type DonorEventScalarWhereInput = {
    AND?: DonorEventScalarWhereInput | DonorEventScalarWhereInput[]
    OR?: DonorEventScalarWhereInput[]
    NOT?: DonorEventScalarWhereInput | DonorEventScalarWhereInput[]
    donor_id?: StringFilter<"DonorEvent"> | string
    event_id?: StringFilter<"DonorEvent"> | string
    status?: EnumParticipationStatusNullableFilter<"DonorEvent"> | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFilter<"DonorEvent"> | boolean
    counted_attendance?: BoolFilter<"DonorEvent"> | boolean
    decline_reason?: StringNullableFilter<"DonorEvent"> | string | null
    created_at?: DateTimeFilter<"DonorEvent"> | Date | string
  }

  export type DonorCreateWithoutTagsInput = {
    id?: string
    first_name: string
    nick_name?: string | null
    last_name: string
    organization_name?: string | null
    unit_number?: string | null
    street_address: string
    city: $Enums.City
    total_donation_amount?: Decimal | DecimalJsLike | number | string | null
    total_pledge?: Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: string | null
    last_gift_amount?: Decimal | DecimalJsLike | number | string | null
    last_gift_request?: string | null
    last_gift_appeal?: string | null
    first_gift_date?: Date | string | null
    last_gift_date?: Date | string | null
    pmm: string
    exclude?: boolean | null
    deceased?: boolean | null
    contact_phone_type?: $Enums.ContactPhoneType | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: $Enums.SubscriptionPreference | null
    subscription_events_magazine?: $Enums.SubscriptionPreference | null
    communication_preference?: $Enums.CommunicationPreference | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    attendance_lable?: boolean | null
    donation_lable?: boolean | null
    total_invitations?: number | null
    total_attendance?: number | null
    last_invitation_attendance?: boolean | null
    invitation_acceptance_rate?: number | null
    ml_score?: number | null
    events?: DonorEventCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateWithoutTagsInput = {
    id?: string
    first_name: string
    nick_name?: string | null
    last_name: string
    organization_name?: string | null
    unit_number?: string | null
    street_address: string
    city: $Enums.City
    total_donation_amount?: Decimal | DecimalJsLike | number | string | null
    total_pledge?: Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: string | null
    last_gift_amount?: Decimal | DecimalJsLike | number | string | null
    last_gift_request?: string | null
    last_gift_appeal?: string | null
    first_gift_date?: Date | string | null
    last_gift_date?: Date | string | null
    pmm: string
    exclude?: boolean | null
    deceased?: boolean | null
    contact_phone_type?: $Enums.ContactPhoneType | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: $Enums.SubscriptionPreference | null
    subscription_events_magazine?: $Enums.SubscriptionPreference | null
    communication_preference?: $Enums.CommunicationPreference | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    attendance_lable?: boolean | null
    donation_lable?: boolean | null
    total_invitations?: number | null
    total_attendance?: number | null
    last_invitation_attendance?: boolean | null
    invitation_acceptance_rate?: number | null
    ml_score?: number | null
    events?: DonorEventUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorCreateOrConnectWithoutTagsInput = {
    where: DonorWhereUniqueInput
    create: XOR<DonorCreateWithoutTagsInput, DonorUncheckedCreateWithoutTagsInput>
  }

  export type TagCreateWithoutDonorsInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    events?: EventCreateNestedManyWithoutTagsInput
  }

  export type TagUncheckedCreateWithoutDonorsInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    events?: EventUncheckedCreateNestedManyWithoutTagsInput
  }

  export type TagCreateOrConnectWithoutDonorsInput = {
    where: TagWhereUniqueInput
    create: XOR<TagCreateWithoutDonorsInput, TagUncheckedCreateWithoutDonorsInput>
  }

  export type DonorUpsertWithoutTagsInput = {
    update: XOR<DonorUpdateWithoutTagsInput, DonorUncheckedUpdateWithoutTagsInput>
    create: XOR<DonorCreateWithoutTagsInput, DonorUncheckedCreateWithoutTagsInput>
    where?: DonorWhereInput
  }

  export type DonorUpdateToOneWithWhereWithoutTagsInput = {
    where?: DonorWhereInput
    data: XOR<DonorUpdateWithoutTagsInput, DonorUncheckedUpdateWithoutTagsInput>
  }

  export type DonorUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_address?: StringFieldUpdateOperationsInput | string
    city?: EnumCityFieldUpdateOperationsInput | $Enums.City
    total_donation_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_pledge?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    first_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pmm?: StringFieldUpdateOperationsInput | string
    exclude?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deceased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    contact_phone_type?: NullableEnumContactPhoneTypeFieldUpdateOperationsInput | $Enums.ContactPhoneType | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    communication_preference?: NullableEnumCommunicationPreferenceFieldUpdateOperationsInput | $Enums.CommunicationPreference | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attendance_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    donation_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    total_invitations?: NullableIntFieldUpdateOperationsInput | number | null
    total_attendance?: NullableIntFieldUpdateOperationsInput | number | null
    last_invitation_attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invitation_acceptance_rate?: NullableFloatFieldUpdateOperationsInput | number | null
    ml_score?: NullableFloatFieldUpdateOperationsInput | number | null
    events?: DonorEventUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_address?: StringFieldUpdateOperationsInput | string
    city?: EnumCityFieldUpdateOperationsInput | $Enums.City
    total_donation_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_pledge?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    first_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pmm?: StringFieldUpdateOperationsInput | string
    exclude?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deceased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    contact_phone_type?: NullableEnumContactPhoneTypeFieldUpdateOperationsInput | $Enums.ContactPhoneType | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    communication_preference?: NullableEnumCommunicationPreferenceFieldUpdateOperationsInput | $Enums.CommunicationPreference | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attendance_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    donation_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    total_invitations?: NullableIntFieldUpdateOperationsInput | number | null
    total_attendance?: NullableIntFieldUpdateOperationsInput | number | null
    last_invitation_attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invitation_acceptance_rate?: NullableFloatFieldUpdateOperationsInput | number | null
    ml_score?: NullableFloatFieldUpdateOperationsInput | number | null
    events?: DonorEventUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type TagUpsertWithoutDonorsInput = {
    update: XOR<TagUpdateWithoutDonorsInput, TagUncheckedUpdateWithoutDonorsInput>
    create: XOR<TagCreateWithoutDonorsInput, TagUncheckedCreateWithoutDonorsInput>
    where?: TagWhereInput
  }

  export type TagUpdateToOneWithWhereWithoutDonorsInput = {
    where?: TagWhereInput
    data: XOR<TagUpdateWithoutDonorsInput, TagUncheckedUpdateWithoutDonorsInput>
  }

  export type TagUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    events?: EventUpdateManyWithoutTagsNestedInput
  }

  export type TagUncheckedUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    events?: EventUncheckedUpdateManyWithoutTagsNestedInput
  }

  export type DonorEventCreateWithoutEventInput = {
    status?: $Enums.ParticipationStatus | null
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: string | null
    created_at?: Date | string
    donor: DonorCreateNestedOneWithoutEventsInput
  }

  export type DonorEventUncheckedCreateWithoutEventInput = {
    donor_id: string
    status?: $Enums.ParticipationStatus | null
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: string | null
    created_at?: Date | string
  }

  export type DonorEventCreateOrConnectWithoutEventInput = {
    where: DonorEventWhereUniqueInput
    create: XOR<DonorEventCreateWithoutEventInput, DonorEventUncheckedCreateWithoutEventInput>
  }

  export type DonorEventCreateManyEventInputEnvelope = {
    data: DonorEventCreateManyEventInput | DonorEventCreateManyEventInput[]
    skipDuplicates?: boolean
  }

  export type TagCreateWithoutEventsInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorTagCreateNestedManyWithoutTagInput
  }

  export type TagUncheckedCreateWithoutEventsInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorTagUncheckedCreateNestedManyWithoutTagInput
  }

  export type TagCreateOrConnectWithoutEventsInput = {
    where: TagWhereUniqueInput
    create: XOR<TagCreateWithoutEventsInput, TagUncheckedCreateWithoutEventsInput>
  }

  export type EventEditHistoryCreateWithoutEventInput = {
    id?: string
    edit_type: string
    old_value?: string | null
    new_value?: string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    editor?: UserCreateNestedOneWithoutEditHistoriesInput
  }

  export type EventEditHistoryUncheckedCreateWithoutEventInput = {
    id?: string
    editor_id?: number | null
    edit_type: string
    old_value?: string | null
    new_value?: string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type EventEditHistoryCreateOrConnectWithoutEventInput = {
    where: EventEditHistoryWhereUniqueInput
    create: XOR<EventEditHistoryCreateWithoutEventInput, EventEditHistoryUncheckedCreateWithoutEventInput>
  }

  export type EventEditHistoryCreateManyEventInputEnvelope = {
    data: EventEditHistoryCreateManyEventInput | EventEditHistoryCreateManyEventInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutEventsInput = {
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
    collaborators?: EventCollaboratorCreateNestedManyWithoutUserInput
    editHistories?: EventEditHistoryCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutEventsInput = {
    id?: number
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
    collaborators?: EventCollaboratorUncheckedCreateNestedManyWithoutUserInput
    editHistories?: EventEditHistoryUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutEventsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEventsInput, UserUncheckedCreateWithoutEventsInput>
  }

  export type EventCollaboratorCreateWithoutEventInput = {
    user: UserCreateNestedOneWithoutCollaboratorsInput
  }

  export type EventCollaboratorUncheckedCreateWithoutEventInput = {
    id?: number
    userId: number
  }

  export type EventCollaboratorCreateOrConnectWithoutEventInput = {
    where: EventCollaboratorWhereUniqueInput
    create: XOR<EventCollaboratorCreateWithoutEventInput, EventCollaboratorUncheckedCreateWithoutEventInput>
  }

  export type EventCollaboratorCreateManyEventInputEnvelope = {
    data: EventCollaboratorCreateManyEventInput | EventCollaboratorCreateManyEventInput[]
    skipDuplicates?: boolean
  }

  export type DonorEventUpsertWithWhereUniqueWithoutEventInput = {
    where: DonorEventWhereUniqueInput
    update: XOR<DonorEventUpdateWithoutEventInput, DonorEventUncheckedUpdateWithoutEventInput>
    create: XOR<DonorEventCreateWithoutEventInput, DonorEventUncheckedCreateWithoutEventInput>
  }

  export type DonorEventUpdateWithWhereUniqueWithoutEventInput = {
    where: DonorEventWhereUniqueInput
    data: XOR<DonorEventUpdateWithoutEventInput, DonorEventUncheckedUpdateWithoutEventInput>
  }

  export type DonorEventUpdateManyWithWhereWithoutEventInput = {
    where: DonorEventScalarWhereInput
    data: XOR<DonorEventUpdateManyMutationInput, DonorEventUncheckedUpdateManyWithoutEventInput>
  }

  export type TagUpsertWithWhereUniqueWithoutEventsInput = {
    where: TagWhereUniqueInput
    update: XOR<TagUpdateWithoutEventsInput, TagUncheckedUpdateWithoutEventsInput>
    create: XOR<TagCreateWithoutEventsInput, TagUncheckedCreateWithoutEventsInput>
  }

  export type TagUpdateWithWhereUniqueWithoutEventsInput = {
    where: TagWhereUniqueInput
    data: XOR<TagUpdateWithoutEventsInput, TagUncheckedUpdateWithoutEventsInput>
  }

  export type TagUpdateManyWithWhereWithoutEventsInput = {
    where: TagScalarWhereInput
    data: XOR<TagUpdateManyMutationInput, TagUncheckedUpdateManyWithoutEventsInput>
  }

  export type TagScalarWhereInput = {
    AND?: TagScalarWhereInput | TagScalarWhereInput[]
    OR?: TagScalarWhereInput[]
    NOT?: TagScalarWhereInput | TagScalarWhereInput[]
    id?: StringFilter<"Tag"> | string
    name?: StringFilter<"Tag"> | string
    description?: StringNullableFilter<"Tag"> | string | null
    color?: StringNullableFilter<"Tag"> | string | null
    is_deleted?: BoolFilter<"Tag"> | boolean
    deleted_at?: DateTimeNullableFilter<"Tag"> | Date | string | null
    created_at?: DateTimeFilter<"Tag"> | Date | string
    updated_at?: DateTimeFilter<"Tag"> | Date | string
  }

  export type EventEditHistoryUpsertWithWhereUniqueWithoutEventInput = {
    where: EventEditHistoryWhereUniqueInput
    update: XOR<EventEditHistoryUpdateWithoutEventInput, EventEditHistoryUncheckedUpdateWithoutEventInput>
    create: XOR<EventEditHistoryCreateWithoutEventInput, EventEditHistoryUncheckedCreateWithoutEventInput>
  }

  export type EventEditHistoryUpdateWithWhereUniqueWithoutEventInput = {
    where: EventEditHistoryWhereUniqueInput
    data: XOR<EventEditHistoryUpdateWithoutEventInput, EventEditHistoryUncheckedUpdateWithoutEventInput>
  }

  export type EventEditHistoryUpdateManyWithWhereWithoutEventInput = {
    where: EventEditHistoryScalarWhereInput
    data: XOR<EventEditHistoryUpdateManyMutationInput, EventEditHistoryUncheckedUpdateManyWithoutEventInput>
  }

  export type UserUpsertWithoutEventsInput = {
    update: XOR<UserUpdateWithoutEventsInput, UserUncheckedUpdateWithoutEventsInput>
    create: XOR<UserCreateWithoutEventsInput, UserUncheckedCreateWithoutEventsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEventsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEventsInput, UserUncheckedUpdateWithoutEventsInput>
  }

  export type UserUpdateWithoutEventsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    collaborators?: EventCollaboratorUpdateManyWithoutUserNestedInput
    editHistories?: EventEditHistoryUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutEventsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    collaborators?: EventCollaboratorUncheckedUpdateManyWithoutUserNestedInput
    editHistories?: EventEditHistoryUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type EventCollaboratorUpsertWithWhereUniqueWithoutEventInput = {
    where: EventCollaboratorWhereUniqueInput
    update: XOR<EventCollaboratorUpdateWithoutEventInput, EventCollaboratorUncheckedUpdateWithoutEventInput>
    create: XOR<EventCollaboratorCreateWithoutEventInput, EventCollaboratorUncheckedCreateWithoutEventInput>
  }

  export type EventCollaboratorUpdateWithWhereUniqueWithoutEventInput = {
    where: EventCollaboratorWhereUniqueInput
    data: XOR<EventCollaboratorUpdateWithoutEventInput, EventCollaboratorUncheckedUpdateWithoutEventInput>
  }

  export type EventCollaboratorUpdateManyWithWhereWithoutEventInput = {
    where: EventCollaboratorScalarWhereInput
    data: XOR<EventCollaboratorUpdateManyMutationInput, EventCollaboratorUncheckedUpdateManyWithoutEventInput>
  }

  export type EventCreateWithoutCollaboratorsInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorEventCreateNestedManyWithoutEventInput
    tags?: TagCreateNestedManyWithoutEventsInput
    editHistory?: EventEditHistoryCreateNestedManyWithoutEventInput
    createdBy?: UserCreateNestedOneWithoutEventsInput
  }

  export type EventUncheckedCreateWithoutCollaboratorsInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    created_by?: number | null
    donors?: DonorEventUncheckedCreateNestedManyWithoutEventInput
    tags?: TagUncheckedCreateNestedManyWithoutEventsInput
    editHistory?: EventEditHistoryUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutCollaboratorsInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutCollaboratorsInput, EventUncheckedCreateWithoutCollaboratorsInput>
  }

  export type UserCreateWithoutCollaboratorsInput = {
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
    events?: EventCreateNestedManyWithoutCreatedByInput
    editHistories?: EventEditHistoryCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutCollaboratorsInput = {
    id?: number
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
    events?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    editHistories?: EventEditHistoryUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutCollaboratorsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCollaboratorsInput, UserUncheckedCreateWithoutCollaboratorsInput>
  }

  export type EventUpsertWithoutCollaboratorsInput = {
    update: XOR<EventUpdateWithoutCollaboratorsInput, EventUncheckedUpdateWithoutCollaboratorsInput>
    create: XOR<EventCreateWithoutCollaboratorsInput, EventUncheckedCreateWithoutCollaboratorsInput>
    where?: EventWhereInput
  }

  export type EventUpdateToOneWithWhereWithoutCollaboratorsInput = {
    where?: EventWhereInput
    data: XOR<EventUpdateWithoutCollaboratorsInput, EventUncheckedUpdateWithoutCollaboratorsInput>
  }

  export type EventUpdateWithoutCollaboratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorEventUpdateManyWithoutEventNestedInput
    tags?: TagUpdateManyWithoutEventsNestedInput
    editHistory?: EventEditHistoryUpdateManyWithoutEventNestedInput
    createdBy?: UserUpdateOneWithoutEventsNestedInput
  }

  export type EventUncheckedUpdateWithoutCollaboratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    donors?: DonorEventUncheckedUpdateManyWithoutEventNestedInput
    tags?: TagUncheckedUpdateManyWithoutEventsNestedInput
    editHistory?: EventEditHistoryUncheckedUpdateManyWithoutEventNestedInput
  }

  export type UserUpsertWithoutCollaboratorsInput = {
    update: XOR<UserUpdateWithoutCollaboratorsInput, UserUncheckedUpdateWithoutCollaboratorsInput>
    create: XOR<UserCreateWithoutCollaboratorsInput, UserUncheckedCreateWithoutCollaboratorsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCollaboratorsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCollaboratorsInput, UserUncheckedUpdateWithoutCollaboratorsInput>
  }

  export type UserUpdateWithoutCollaboratorsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    events?: EventUpdateManyWithoutCreatedByNestedInput
    editHistories?: EventEditHistoryUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutCollaboratorsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    events?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    editHistories?: EventEditHistoryUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type DonorCreateWithoutEventsInput = {
    id?: string
    first_name: string
    nick_name?: string | null
    last_name: string
    organization_name?: string | null
    unit_number?: string | null
    street_address: string
    city: $Enums.City
    total_donation_amount?: Decimal | DecimalJsLike | number | string | null
    total_pledge?: Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: string | null
    last_gift_amount?: Decimal | DecimalJsLike | number | string | null
    last_gift_request?: string | null
    last_gift_appeal?: string | null
    first_gift_date?: Date | string | null
    last_gift_date?: Date | string | null
    pmm: string
    exclude?: boolean | null
    deceased?: boolean | null
    contact_phone_type?: $Enums.ContactPhoneType | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: $Enums.SubscriptionPreference | null
    subscription_events_magazine?: $Enums.SubscriptionPreference | null
    communication_preference?: $Enums.CommunicationPreference | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    attendance_lable?: boolean | null
    donation_lable?: boolean | null
    total_invitations?: number | null
    total_attendance?: number | null
    last_invitation_attendance?: boolean | null
    invitation_acceptance_rate?: number | null
    ml_score?: number | null
    tags?: DonorTagCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateWithoutEventsInput = {
    id?: string
    first_name: string
    nick_name?: string | null
    last_name: string
    organization_name?: string | null
    unit_number?: string | null
    street_address: string
    city: $Enums.City
    total_donation_amount?: Decimal | DecimalJsLike | number | string | null
    total_pledge?: Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: string | null
    last_gift_amount?: Decimal | DecimalJsLike | number | string | null
    last_gift_request?: string | null
    last_gift_appeal?: string | null
    first_gift_date?: Date | string | null
    last_gift_date?: Date | string | null
    pmm: string
    exclude?: boolean | null
    deceased?: boolean | null
    contact_phone_type?: $Enums.ContactPhoneType | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: $Enums.SubscriptionPreference | null
    subscription_events_magazine?: $Enums.SubscriptionPreference | null
    communication_preference?: $Enums.CommunicationPreference | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    attendance_lable?: boolean | null
    donation_lable?: boolean | null
    total_invitations?: number | null
    total_attendance?: number | null
    last_invitation_attendance?: boolean | null
    invitation_acceptance_rate?: number | null
    ml_score?: number | null
    tags?: DonorTagUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorCreateOrConnectWithoutEventsInput = {
    where: DonorWhereUniqueInput
    create: XOR<DonorCreateWithoutEventsInput, DonorUncheckedCreateWithoutEventsInput>
  }

  export type EventCreateWithoutDonorsInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    tags?: TagCreateNestedManyWithoutEventsInput
    editHistory?: EventEditHistoryCreateNestedManyWithoutEventInput
    createdBy?: UserCreateNestedOneWithoutEventsInput
    collaborators?: EventCollaboratorCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutDonorsInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    created_by?: number | null
    tags?: TagUncheckedCreateNestedManyWithoutEventsInput
    editHistory?: EventEditHistoryUncheckedCreateNestedManyWithoutEventInput
    collaborators?: EventCollaboratorUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutDonorsInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutDonorsInput, EventUncheckedCreateWithoutDonorsInput>
  }

  export type DonorUpsertWithoutEventsInput = {
    update: XOR<DonorUpdateWithoutEventsInput, DonorUncheckedUpdateWithoutEventsInput>
    create: XOR<DonorCreateWithoutEventsInput, DonorUncheckedCreateWithoutEventsInput>
    where?: DonorWhereInput
  }

  export type DonorUpdateToOneWithWhereWithoutEventsInput = {
    where?: DonorWhereInput
    data: XOR<DonorUpdateWithoutEventsInput, DonorUncheckedUpdateWithoutEventsInput>
  }

  export type DonorUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_address?: StringFieldUpdateOperationsInput | string
    city?: EnumCityFieldUpdateOperationsInput | $Enums.City
    total_donation_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_pledge?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    first_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pmm?: StringFieldUpdateOperationsInput | string
    exclude?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deceased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    contact_phone_type?: NullableEnumContactPhoneTypeFieldUpdateOperationsInput | $Enums.ContactPhoneType | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    communication_preference?: NullableEnumCommunicationPreferenceFieldUpdateOperationsInput | $Enums.CommunicationPreference | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attendance_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    donation_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    total_invitations?: NullableIntFieldUpdateOperationsInput | number | null
    total_attendance?: NullableIntFieldUpdateOperationsInput | number | null
    last_invitation_attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invitation_acceptance_rate?: NullableFloatFieldUpdateOperationsInput | number | null
    ml_score?: NullableFloatFieldUpdateOperationsInput | number | null
    tags?: DonorTagUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    unit_number?: NullableStringFieldUpdateOperationsInput | string | null
    street_address?: StringFieldUpdateOperationsInput | string
    city?: EnumCityFieldUpdateOperationsInput | $Enums.City
    total_donation_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    total_pledge?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    largest_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    last_gift_request?: NullableStringFieldUpdateOperationsInput | string | null
    last_gift_appeal?: NullableStringFieldUpdateOperationsInput | string | null
    first_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_gift_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pmm?: StringFieldUpdateOperationsInput | string
    exclude?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deceased?: NullableBoolFieldUpdateOperationsInput | boolean | null
    contact_phone_type?: NullableEnumContactPhoneTypeFieldUpdateOperationsInput | $Enums.ContactPhoneType | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    subscription_events_magazine?: NullableEnumSubscriptionPreferenceFieldUpdateOperationsInput | $Enums.SubscriptionPreference | null
    communication_preference?: NullableEnumCommunicationPreferenceFieldUpdateOperationsInput | $Enums.CommunicationPreference | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attendance_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    donation_lable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    total_invitations?: NullableIntFieldUpdateOperationsInput | number | null
    total_attendance?: NullableIntFieldUpdateOperationsInput | number | null
    last_invitation_attendance?: NullableBoolFieldUpdateOperationsInput | boolean | null
    invitation_acceptance_rate?: NullableFloatFieldUpdateOperationsInput | number | null
    ml_score?: NullableFloatFieldUpdateOperationsInput | number | null
    tags?: DonorTagUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type EventUpsertWithoutDonorsInput = {
    update: XOR<EventUpdateWithoutDonorsInput, EventUncheckedUpdateWithoutDonorsInput>
    create: XOR<EventCreateWithoutDonorsInput, EventUncheckedCreateWithoutDonorsInput>
    where?: EventWhereInput
  }

  export type EventUpdateToOneWithWhereWithoutDonorsInput = {
    where?: EventWhereInput
    data: XOR<EventUpdateWithoutDonorsInput, EventUncheckedUpdateWithoutDonorsInput>
  }

  export type EventUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: TagUpdateManyWithoutEventsNestedInput
    editHistory?: EventEditHistoryUpdateManyWithoutEventNestedInput
    createdBy?: UserUpdateOneWithoutEventsNestedInput
    collaborators?: EventCollaboratorUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    tags?: TagUncheckedUpdateManyWithoutEventsNestedInput
    editHistory?: EventEditHistoryUncheckedUpdateManyWithoutEventNestedInput
    collaborators?: EventCollaboratorUncheckedUpdateManyWithoutEventNestedInput
  }

  export type EventCreateWithoutEditHistoryInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorEventCreateNestedManyWithoutEventInput
    tags?: TagCreateNestedManyWithoutEventsInput
    createdBy?: UserCreateNestedOneWithoutEventsInput
    collaborators?: EventCollaboratorCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutEditHistoryInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    created_by?: number | null
    donors?: DonorEventUncheckedCreateNestedManyWithoutEventInput
    tags?: TagUncheckedCreateNestedManyWithoutEventsInput
    collaborators?: EventCollaboratorUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutEditHistoryInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutEditHistoryInput, EventUncheckedCreateWithoutEditHistoryInput>
  }

  export type UserCreateWithoutEditHistoriesInput = {
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
    events?: EventCreateNestedManyWithoutCreatedByInput
    collaborators?: EventCollaboratorCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEditHistoriesInput = {
    id?: number
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
    events?: EventUncheckedCreateNestedManyWithoutCreatedByInput
    collaborators?: EventCollaboratorUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEditHistoriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEditHistoriesInput, UserUncheckedCreateWithoutEditHistoriesInput>
  }

  export type EventUpsertWithoutEditHistoryInput = {
    update: XOR<EventUpdateWithoutEditHistoryInput, EventUncheckedUpdateWithoutEditHistoryInput>
    create: XOR<EventCreateWithoutEditHistoryInput, EventUncheckedCreateWithoutEditHistoryInput>
    where?: EventWhereInput
  }

  export type EventUpdateToOneWithWhereWithoutEditHistoryInput = {
    where?: EventWhereInput
    data: XOR<EventUpdateWithoutEditHistoryInput, EventUncheckedUpdateWithoutEditHistoryInput>
  }

  export type EventUpdateWithoutEditHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorEventUpdateManyWithoutEventNestedInput
    tags?: TagUpdateManyWithoutEventsNestedInput
    createdBy?: UserUpdateOneWithoutEventsNestedInput
    collaborators?: EventCollaboratorUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutEditHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    donors?: DonorEventUncheckedUpdateManyWithoutEventNestedInput
    tags?: TagUncheckedUpdateManyWithoutEventsNestedInput
    collaborators?: EventCollaboratorUncheckedUpdateManyWithoutEventNestedInput
  }

  export type UserUpsertWithoutEditHistoriesInput = {
    update: XOR<UserUpdateWithoutEditHistoriesInput, UserUncheckedUpdateWithoutEditHistoriesInput>
    create: XOR<UserCreateWithoutEditHistoriesInput, UserUncheckedCreateWithoutEditHistoriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEditHistoriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEditHistoriesInput, UserUncheckedUpdateWithoutEditHistoriesInput>
  }

  export type UserUpdateWithoutEditHistoriesInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    events?: EventUpdateManyWithoutCreatedByNestedInput
    collaborators?: EventCollaboratorUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEditHistoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    events?: EventUncheckedUpdateManyWithoutCreatedByNestedInput
    collaborators?: EventCollaboratorUncheckedUpdateManyWithoutUserNestedInput
  }

  export type EventCreateManyCreatedByInput = {
    id?: string
    name: string
    description?: string | null
    date?: Date | string | null
    location?: string | null
    status?: $Enums.EventStatus
    capacity?: number | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type EventCollaboratorCreateManyUserInput = {
    id?: number
    eventId: string
  }

  export type EventEditHistoryCreateManyEditorInput = {
    id?: string
    event_id: string
    edit_type: string
    old_value?: string | null
    new_value?: string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type EventUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorEventUpdateManyWithoutEventNestedInput
    tags?: TagUpdateManyWithoutEventsNestedInput
    editHistory?: EventEditHistoryUpdateManyWithoutEventNestedInput
    collaborators?: EventCollaboratorUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorEventUncheckedUpdateManyWithoutEventNestedInput
    tags?: TagUncheckedUpdateManyWithoutEventsNestedInput
    editHistory?: EventEditHistoryUncheckedUpdateManyWithoutEventNestedInput
    collaborators?: EventCollaboratorUncheckedUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventCollaboratorUpdateWithoutUserInput = {
    event?: EventUpdateOneRequiredWithoutCollaboratorsNestedInput
  }

  export type EventCollaboratorUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    eventId?: StringFieldUpdateOperationsInput | string
  }

  export type EventCollaboratorUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    eventId?: StringFieldUpdateOperationsInput | string
  }

  export type EventEditHistoryUpdateWithoutEditorInput = {
    id?: StringFieldUpdateOperationsInput | string
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    event?: EventUpdateOneRequiredWithoutEditHistoryNestedInput
  }

  export type EventEditHistoryUncheckedUpdateWithoutEditorInput = {
    id?: StringFieldUpdateOperationsInput | string
    event_id?: StringFieldUpdateOperationsInput | string
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventEditHistoryUncheckedUpdateManyWithoutEditorInput = {
    id?: StringFieldUpdateOperationsInput | string
    event_id?: StringFieldUpdateOperationsInput | string
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagCreateManyTagInput = {
    donor_id: string
    created_at?: Date | string
  }

  export type DonorTagUpdateWithoutTagInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutTagsNestedInput
  }

  export type DonorTagUncheckedUpdateWithoutTagInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagUncheckedUpdateManyWithoutTagInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorEventUpdateManyWithoutEventNestedInput
    editHistory?: EventEditHistoryUpdateManyWithoutEventNestedInput
    createdBy?: UserUpdateOneWithoutEventsNestedInput
    collaborators?: EventCollaboratorUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    donors?: DonorEventUncheckedUpdateManyWithoutEventNestedInput
    editHistory?: EventEditHistoryUncheckedUpdateManyWithoutEventNestedInput
    collaborators?: EventCollaboratorUncheckedUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateManyWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DonorTagCreateManyDonorInput = {
    tag_id: string
    created_at?: Date | string
  }

  export type DonorEventCreateManyDonorInput = {
    event_id: string
    status?: $Enums.ParticipationStatus | null
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: string | null
    created_at?: Date | string
  }

  export type DonorTagUpdateWithoutDonorInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: TagUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorTagUncheckedUpdateWithoutDonorInput = {
    tag_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagUncheckedUpdateManyWithoutDonorInput = {
    tag_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorEventUpdateWithoutDonorInput = {
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    event?: EventUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorEventUncheckedUpdateWithoutDonorInput = {
    event_id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorEventUncheckedUpdateManyWithoutDonorInput = {
    event_id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorEventCreateManyEventInput = {
    donor_id: string
    status?: $Enums.ParticipationStatus | null
    counted_invitation?: boolean
    counted_attendance?: boolean
    decline_reason?: string | null
    created_at?: Date | string
  }

  export type EventEditHistoryCreateManyEventInput = {
    id?: string
    editor_id?: number | null
    edit_type: string
    old_value?: string | null
    new_value?: string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type EventCollaboratorCreateManyEventInput = {
    id?: number
    userId: number
  }

  export type DonorEventUpdateWithoutEventInput = {
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutEventsNestedInput
  }

  export type DonorEventUncheckedUpdateWithoutEventInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorEventUncheckedUpdateManyWithoutEventInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    status?: NullableEnumParticipationStatusFieldUpdateOperationsInput | $Enums.ParticipationStatus | null
    counted_invitation?: BoolFieldUpdateOperationsInput | boolean
    counted_attendance?: BoolFieldUpdateOperationsInput | boolean
    decline_reason?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TagUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorTagUpdateManyWithoutTagNestedInput
  }

  export type TagUncheckedUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorTagUncheckedUpdateManyWithoutTagNestedInput
  }

  export type TagUncheckedUpdateManyWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventEditHistoryUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    editor?: UserUpdateOneWithoutEditHistoriesNestedInput
  }

  export type EventEditHistoryUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    editor_id?: NullableIntFieldUpdateOperationsInput | number | null
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventEditHistoryUncheckedUpdateManyWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    editor_id?: NullableIntFieldUpdateOperationsInput | number | null
    edit_type?: StringFieldUpdateOperationsInput | string
    old_value?: NullableStringFieldUpdateOperationsInput | string | null
    new_value?: NullableStringFieldUpdateOperationsInput | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventCollaboratorUpdateWithoutEventInput = {
    user?: UserUpdateOneRequiredWithoutCollaboratorsNestedInput
  }

  export type EventCollaboratorUncheckedUpdateWithoutEventInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
  }

  export type EventCollaboratorUncheckedUpdateManyWithoutEventInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}