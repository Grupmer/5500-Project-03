
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Donation
 * 
 */
export type Donation = $Result.DefaultSelection<Prisma.$DonationPayload>
/**
 * Model Tag
 * 
 */
export type Tag = $Result.DefaultSelection<Prisma.$TagPayload>
/**
 * Model Donor
 * 
 */
export type Donor = $Result.DefaultSelection<Prisma.$DonorPayload>
/**
 * Model DonorDonation
 * 
 */
export type DonorDonation = $Result.DefaultSelection<Prisma.$DonorDonationPayload>
/**
 * Model DonorTag
 * 
 */
export type DonorTag = $Result.DefaultSelection<Prisma.$DonorTagPayload>
/**
 * Model InterestDomain
 * 
 */
export type InterestDomain = $Result.DefaultSelection<Prisma.$InterestDomainPayload>
/**
 * Model DonorInterestDomain
 * 
 */
export type DonorInterestDomain = $Result.DefaultSelection<Prisma.$DonorInterestDomainPayload>
/**
 * Model Communication
 * 
 */
export type Communication = $Result.DefaultSelection<Prisma.$CommunicationPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs, $Utils.Call<Prisma.TypeMapCb, {
    extArgs: ExtArgs
  }>, ClientOptions>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donation`: Exposes CRUD operations for the **Donation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Donations
    * const donations = await prisma.donation.findMany()
    * ```
    */
  get donation(): Prisma.DonationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tag`: Exposes CRUD operations for the **Tag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tag.findMany()
    * ```
    */
  get tag(): Prisma.TagDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donor`: Exposes CRUD operations for the **Donor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Donors
    * const donors = await prisma.donor.findMany()
    * ```
    */
  get donor(): Prisma.DonorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donorDonation`: Exposes CRUD operations for the **DonorDonation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DonorDonations
    * const donorDonations = await prisma.donorDonation.findMany()
    * ```
    */
  get donorDonation(): Prisma.DonorDonationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donorTag`: Exposes CRUD operations for the **DonorTag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DonorTags
    * const donorTags = await prisma.donorTag.findMany()
    * ```
    */
  get donorTag(): Prisma.DonorTagDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.interestDomain`: Exposes CRUD operations for the **InterestDomain** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InterestDomains
    * const interestDomains = await prisma.interestDomain.findMany()
    * ```
    */
  get interestDomain(): Prisma.InterestDomainDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.donorInterestDomain`: Exposes CRUD operations for the **DonorInterestDomain** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DonorInterestDomains
    * const donorInterestDomains = await prisma.donorInterestDomain.findMany()
    * ```
    */
  get donorInterestDomain(): Prisma.DonorInterestDomainDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.communication`: Exposes CRUD operations for the **Communication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communications
    * const communications = await prisma.communication.findMany()
    * ```
    */
  get communication(): Prisma.CommunicationDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.4.1
   * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Donation: 'Donation',
    Tag: 'Tag',
    Donor: 'Donor',
    DonorDonation: 'DonorDonation',
    DonorTag: 'DonorTag',
    InterestDomain: 'InterestDomain',
    DonorInterestDomain: 'DonorInterestDomain',
    Communication: 'Communication'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "donation" | "tag" | "donor" | "donorDonation" | "donorTag" | "interestDomain" | "donorInterestDomain" | "communication"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Donation: {
        payload: Prisma.$DonationPayload<ExtArgs>
        fields: Prisma.DonationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DonationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DonationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonationPayload>
          }
          findFirst: {
            args: Prisma.DonationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DonationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonationPayload>
          }
          findMany: {
            args: Prisma.DonationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonationPayload>[]
          }
          create: {
            args: Prisma.DonationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonationPayload>
          }
          createMany: {
            args: Prisma.DonationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DonationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonationPayload>
          }
          update: {
            args: Prisma.DonationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonationPayload>
          }
          deleteMany: {
            args: Prisma.DonationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DonationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DonationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonationPayload>
          }
          aggregate: {
            args: Prisma.DonationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonation>
          }
          groupBy: {
            args: Prisma.DonationGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonationGroupByOutputType>[]
          }
          count: {
            args: Prisma.DonationCountArgs<ExtArgs>
            result: $Utils.Optional<DonationCountAggregateOutputType> | number
          }
        }
      }
      Tag: {
        payload: Prisma.$TagPayload<ExtArgs>
        fields: Prisma.TagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          findFirst: {
            args: Prisma.TagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          findMany: {
            args: Prisma.TagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>[]
          }
          create: {
            args: Prisma.TagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          createMany: {
            args: Prisma.TagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          update: {
            args: Prisma.TagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          deleteMany: {
            args: Prisma.TagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          aggregate: {
            args: Prisma.TagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTag>
          }
          groupBy: {
            args: Prisma.TagGroupByArgs<ExtArgs>
            result: $Utils.Optional<TagGroupByOutputType>[]
          }
          count: {
            args: Prisma.TagCountArgs<ExtArgs>
            result: $Utils.Optional<TagCountAggregateOutputType> | number
          }
        }
      }
      Donor: {
        payload: Prisma.$DonorPayload<ExtArgs>
        fields: Prisma.DonorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DonorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DonorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          findFirst: {
            args: Prisma.DonorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DonorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          findMany: {
            args: Prisma.DonorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>[]
          }
          create: {
            args: Prisma.DonorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          createMany: {
            args: Prisma.DonorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DonorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          update: {
            args: Prisma.DonorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          deleteMany: {
            args: Prisma.DonorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DonorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DonorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorPayload>
          }
          aggregate: {
            args: Prisma.DonorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonor>
          }
          groupBy: {
            args: Prisma.DonorGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonorGroupByOutputType>[]
          }
          count: {
            args: Prisma.DonorCountArgs<ExtArgs>
            result: $Utils.Optional<DonorCountAggregateOutputType> | number
          }
        }
      }
      DonorDonation: {
        payload: Prisma.$DonorDonationPayload<ExtArgs>
        fields: Prisma.DonorDonationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DonorDonationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorDonationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DonorDonationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorDonationPayload>
          }
          findFirst: {
            args: Prisma.DonorDonationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorDonationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DonorDonationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorDonationPayload>
          }
          findMany: {
            args: Prisma.DonorDonationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorDonationPayload>[]
          }
          create: {
            args: Prisma.DonorDonationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorDonationPayload>
          }
          createMany: {
            args: Prisma.DonorDonationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DonorDonationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorDonationPayload>
          }
          update: {
            args: Prisma.DonorDonationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorDonationPayload>
          }
          deleteMany: {
            args: Prisma.DonorDonationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DonorDonationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DonorDonationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorDonationPayload>
          }
          aggregate: {
            args: Prisma.DonorDonationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonorDonation>
          }
          groupBy: {
            args: Prisma.DonorDonationGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonorDonationGroupByOutputType>[]
          }
          count: {
            args: Prisma.DonorDonationCountArgs<ExtArgs>
            result: $Utils.Optional<DonorDonationCountAggregateOutputType> | number
          }
        }
      }
      DonorTag: {
        payload: Prisma.$DonorTagPayload<ExtArgs>
        fields: Prisma.DonorTagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DonorTagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DonorTagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          findFirst: {
            args: Prisma.DonorTagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DonorTagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          findMany: {
            args: Prisma.DonorTagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>[]
          }
          create: {
            args: Prisma.DonorTagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          createMany: {
            args: Prisma.DonorTagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DonorTagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          update: {
            args: Prisma.DonorTagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          deleteMany: {
            args: Prisma.DonorTagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DonorTagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DonorTagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorTagPayload>
          }
          aggregate: {
            args: Prisma.DonorTagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonorTag>
          }
          groupBy: {
            args: Prisma.DonorTagGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonorTagGroupByOutputType>[]
          }
          count: {
            args: Prisma.DonorTagCountArgs<ExtArgs>
            result: $Utils.Optional<DonorTagCountAggregateOutputType> | number
          }
        }
      }
      InterestDomain: {
        payload: Prisma.$InterestDomainPayload<ExtArgs>
        fields: Prisma.InterestDomainFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InterestDomainFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterestDomainPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InterestDomainFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterestDomainPayload>
          }
          findFirst: {
            args: Prisma.InterestDomainFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterestDomainPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InterestDomainFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterestDomainPayload>
          }
          findMany: {
            args: Prisma.InterestDomainFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterestDomainPayload>[]
          }
          create: {
            args: Prisma.InterestDomainCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterestDomainPayload>
          }
          createMany: {
            args: Prisma.InterestDomainCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.InterestDomainDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterestDomainPayload>
          }
          update: {
            args: Prisma.InterestDomainUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterestDomainPayload>
          }
          deleteMany: {
            args: Prisma.InterestDomainDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InterestDomainUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InterestDomainUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterestDomainPayload>
          }
          aggregate: {
            args: Prisma.InterestDomainAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInterestDomain>
          }
          groupBy: {
            args: Prisma.InterestDomainGroupByArgs<ExtArgs>
            result: $Utils.Optional<InterestDomainGroupByOutputType>[]
          }
          count: {
            args: Prisma.InterestDomainCountArgs<ExtArgs>
            result: $Utils.Optional<InterestDomainCountAggregateOutputType> | number
          }
        }
      }
      DonorInterestDomain: {
        payload: Prisma.$DonorInterestDomainPayload<ExtArgs>
        fields: Prisma.DonorInterestDomainFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DonorInterestDomainFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorInterestDomainPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DonorInterestDomainFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorInterestDomainPayload>
          }
          findFirst: {
            args: Prisma.DonorInterestDomainFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorInterestDomainPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DonorInterestDomainFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorInterestDomainPayload>
          }
          findMany: {
            args: Prisma.DonorInterestDomainFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorInterestDomainPayload>[]
          }
          create: {
            args: Prisma.DonorInterestDomainCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorInterestDomainPayload>
          }
          createMany: {
            args: Prisma.DonorInterestDomainCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DonorInterestDomainDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorInterestDomainPayload>
          }
          update: {
            args: Prisma.DonorInterestDomainUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorInterestDomainPayload>
          }
          deleteMany: {
            args: Prisma.DonorInterestDomainDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DonorInterestDomainUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DonorInterestDomainUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DonorInterestDomainPayload>
          }
          aggregate: {
            args: Prisma.DonorInterestDomainAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDonorInterestDomain>
          }
          groupBy: {
            args: Prisma.DonorInterestDomainGroupByArgs<ExtArgs>
            result: $Utils.Optional<DonorInterestDomainGroupByOutputType>[]
          }
          count: {
            args: Prisma.DonorInterestDomainCountArgs<ExtArgs>
            result: $Utils.Optional<DonorInterestDomainCountAggregateOutputType> | number
          }
        }
      }
      Communication: {
        payload: Prisma.$CommunicationPayload<ExtArgs>
        fields: Prisma.CommunicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommunicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommunicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPayload>
          }
          findFirst: {
            args: Prisma.CommunicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommunicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPayload>
          }
          findMany: {
            args: Prisma.CommunicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPayload>[]
          }
          create: {
            args: Prisma.CommunicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPayload>
          }
          createMany: {
            args: Prisma.CommunicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CommunicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPayload>
          }
          update: {
            args: Prisma.CommunicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPayload>
          }
          deleteMany: {
            args: Prisma.CommunicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommunicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CommunicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPayload>
          }
          aggregate: {
            args: Prisma.CommunicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunication>
          }
          groupBy: {
            args: Prisma.CommunicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommunicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommunicationCountArgs<ExtArgs>
            result: $Utils.Optional<CommunicationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    donation?: DonationOmit
    tag?: TagOmit
    donor?: DonorOmit
    donorDonation?: DonorDonationOmit
    donorTag?: DonorTagOmit
    interestDomain?: InterestDomainOmit
    donorInterestDomain?: DonorInterestDomainOmit
    communication?: CommunicationOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type DonationCountOutputType
   */

  export type DonationCountOutputType = {
    donorsLastDonation: number
    donors: number
  }

  export type DonationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donorsLastDonation?: boolean | DonationCountOutputTypeCountDonorsLastDonationArgs
    donors?: boolean | DonationCountOutputTypeCountDonorsArgs
  }

  // Custom InputTypes
  /**
   * DonationCountOutputType without action
   */
  export type DonationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonationCountOutputType
     */
    select?: DonationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DonationCountOutputType without action
   */
  export type DonationCountOutputTypeCountDonorsLastDonationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorWhereInput
  }

  /**
   * DonationCountOutputType without action
   */
  export type DonationCountOutputTypeCountDonorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorDonationWhereInput
  }


  /**
   * Count Type TagCountOutputType
   */

  export type TagCountOutputType = {
    donors: number
  }

  export type TagCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donors?: boolean | TagCountOutputTypeCountDonorsArgs
  }

  // Custom InputTypes
  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagCountOutputType
     */
    select?: TagCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeCountDonorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorTagWhereInput
  }


  /**
   * Count Type DonorCountOutputType
   */

  export type DonorCountOutputType = {
    donations: number
    interest_domains: number
    merged_donors: number
    tags: number
    communications: number
  }

  export type DonorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donations?: boolean | DonorCountOutputTypeCountDonationsArgs
    interest_domains?: boolean | DonorCountOutputTypeCountInterest_domainsArgs
    merged_donors?: boolean | DonorCountOutputTypeCountMerged_donorsArgs
    tags?: boolean | DonorCountOutputTypeCountTagsArgs
    communications?: boolean | DonorCountOutputTypeCountCommunicationsArgs
  }

  // Custom InputTypes
  /**
   * DonorCountOutputType without action
   */
  export type DonorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorCountOutputType
     */
    select?: DonorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DonorCountOutputType without action
   */
  export type DonorCountOutputTypeCountDonationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorDonationWhereInput
  }

  /**
   * DonorCountOutputType without action
   */
  export type DonorCountOutputTypeCountInterest_domainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorInterestDomainWhereInput
  }

  /**
   * DonorCountOutputType without action
   */
  export type DonorCountOutputTypeCountMerged_donorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorWhereInput
  }

  /**
   * DonorCountOutputType without action
   */
  export type DonorCountOutputTypeCountTagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorTagWhereInput
  }

  /**
   * DonorCountOutputType without action
   */
  export type DonorCountOutputTypeCountCommunicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunicationWhereInput
  }


  /**
   * Count Type InterestDomainCountOutputType
   */

  export type InterestDomainCountOutputType = {
    donors: number
  }

  export type InterestDomainCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donors?: boolean | InterestDomainCountOutputTypeCountDonorsArgs
  }

  // Custom InputTypes
  /**
   * InterestDomainCountOutputType without action
   */
  export type InterestDomainCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomainCountOutputType
     */
    select?: InterestDomainCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InterestDomainCountOutputType without action
   */
  export type InterestDomainCountOutputTypeCountDonorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorInterestDomainWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    avatar: string | null
    createdAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    avatar: string | null
    createdAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    email: number
    password: number
    avatar: number
    createdAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    avatar?: true
    createdAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    avatar?: true
    createdAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    avatar?: true
    createdAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    username: string
    email: string
    password: string
    avatar: string | null
    createdAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    avatar?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    avatar?: boolean
    createdAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "password" | "avatar" | "createdAt", ExtArgs["result"]["user"]>

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      email: string
      password: string
      avatar: string | null
      createdAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly username: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
  }


  /**
   * Model Donation
   */

  export type AggregateDonation = {
    _count: DonationCountAggregateOutputType | null
    _avg: DonationAvgAggregateOutputType | null
    _sum: DonationSumAggregateOutputType | null
    _min: DonationMinAggregateOutputType | null
    _max: DonationMaxAggregateOutputType | null
  }

  export type DonationAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type DonationSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type DonationMinAggregateOutputType = {
    id: string | null
    amount: Decimal | null
    donation_date: Date | null
    donation_type: string | null
    payment_method: string | null
    status: string | null
    campaign_id: string | null
    event_id: string | null
    notes: string | null
    is_anonymous: boolean | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonationMaxAggregateOutputType = {
    id: string | null
    amount: Decimal | null
    donation_date: Date | null
    donation_type: string | null
    payment_method: string | null
    status: string | null
    campaign_id: string | null
    event_id: string | null
    notes: string | null
    is_anonymous: boolean | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonationCountAggregateOutputType = {
    id: number
    amount: number
    donation_date: number
    donation_type: number
    payment_method: number
    status: number
    campaign_id: number
    event_id: number
    notes: number
    is_anonymous: number
    is_deleted: number
    deleted_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type DonationAvgAggregateInputType = {
    amount?: true
  }

  export type DonationSumAggregateInputType = {
    amount?: true
  }

  export type DonationMinAggregateInputType = {
    id?: true
    amount?: true
    donation_date?: true
    donation_type?: true
    payment_method?: true
    status?: true
    campaign_id?: true
    event_id?: true
    notes?: true
    is_anonymous?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type DonationMaxAggregateInputType = {
    id?: true
    amount?: true
    donation_date?: true
    donation_type?: true
    payment_method?: true
    status?: true
    campaign_id?: true
    event_id?: true
    notes?: true
    is_anonymous?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type DonationCountAggregateInputType = {
    id?: true
    amount?: true
    donation_date?: true
    donation_type?: true
    payment_method?: true
    status?: true
    campaign_id?: true
    event_id?: true
    notes?: true
    is_anonymous?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type DonationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Donation to aggregate.
     */
    where?: DonationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donations to fetch.
     */
    orderBy?: DonationOrderByWithRelationInput | DonationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DonationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Donations
    **/
    _count?: true | DonationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DonationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DonationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonationMaxAggregateInputType
  }

  export type GetDonationAggregateType<T extends DonationAggregateArgs> = {
        [P in keyof T & keyof AggregateDonation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonation[P]>
      : GetScalarType<T[P], AggregateDonation[P]>
  }




  export type DonationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonationWhereInput
    orderBy?: DonationOrderByWithAggregationInput | DonationOrderByWithAggregationInput[]
    by: DonationScalarFieldEnum[] | DonationScalarFieldEnum
    having?: DonationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonationCountAggregateInputType | true
    _avg?: DonationAvgAggregateInputType
    _sum?: DonationSumAggregateInputType
    _min?: DonationMinAggregateInputType
    _max?: DonationMaxAggregateInputType
  }

  export type DonationGroupByOutputType = {
    id: string
    amount: Decimal
    donation_date: Date
    donation_type: string | null
    payment_method: string | null
    status: string
    campaign_id: string | null
    event_id: string | null
    notes: string | null
    is_anonymous: boolean
    is_deleted: boolean
    deleted_at: Date | null
    created_at: Date
    updated_at: Date
    _count: DonationCountAggregateOutputType | null
    _avg: DonationAvgAggregateOutputType | null
    _sum: DonationSumAggregateOutputType | null
    _min: DonationMinAggregateOutputType | null
    _max: DonationMaxAggregateOutputType | null
  }

  type GetDonationGroupByPayload<T extends DonationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonationGroupByOutputType[P]>
            : GetScalarType<T[P], DonationGroupByOutputType[P]>
        }
      >
    >


  export type DonationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    donation_date?: boolean
    donation_type?: boolean
    payment_method?: boolean
    status?: boolean
    campaign_id?: boolean
    event_id?: boolean
    notes?: boolean
    is_anonymous?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    donorsLastDonation?: boolean | Donation$donorsLastDonationArgs<ExtArgs>
    donors?: boolean | Donation$donorsArgs<ExtArgs>
    _count?: boolean | DonationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donation"]>



  export type DonationSelectScalar = {
    id?: boolean
    amount?: boolean
    donation_date?: boolean
    donation_type?: boolean
    payment_method?: boolean
    status?: boolean
    campaign_id?: boolean
    event_id?: boolean
    notes?: boolean
    is_anonymous?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type DonationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "amount" | "donation_date" | "donation_type" | "payment_method" | "status" | "campaign_id" | "event_id" | "notes" | "is_anonymous" | "is_deleted" | "deleted_at" | "created_at" | "updated_at", ExtArgs["result"]["donation"]>
  export type DonationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donorsLastDonation?: boolean | Donation$donorsLastDonationArgs<ExtArgs>
    donors?: boolean | Donation$donorsArgs<ExtArgs>
    _count?: boolean | DonationCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $DonationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Donation"
    objects: {
      donorsLastDonation: Prisma.$DonorPayload<ExtArgs>[]
      donors: Prisma.$DonorDonationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      amount: Prisma.Decimal
      donation_date: Date
      donation_type: string | null
      payment_method: string | null
      status: string
      campaign_id: string | null
      event_id: string | null
      notes: string | null
      is_anonymous: boolean
      is_deleted: boolean
      deleted_at: Date | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["donation"]>
    composites: {}
  }

  type DonationGetPayload<S extends boolean | null | undefined | DonationDefaultArgs> = $Result.GetResult<Prisma.$DonationPayload, S>

  type DonationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DonationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonationCountAggregateInputType | true
    }

  export interface DonationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Donation'], meta: { name: 'Donation' } }
    /**
     * Find zero or one Donation that matches the filter.
     * @param {DonationFindUniqueArgs} args - Arguments to find a Donation
     * @example
     * // Get one Donation
     * const donation = await prisma.donation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DonationFindUniqueArgs>(args: SelectSubset<T, DonationFindUniqueArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Donation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DonationFindUniqueOrThrowArgs} args - Arguments to find a Donation
     * @example
     * // Get one Donation
     * const donation = await prisma.donation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DonationFindUniqueOrThrowArgs>(args: SelectSubset<T, DonationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Donation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonationFindFirstArgs} args - Arguments to find a Donation
     * @example
     * // Get one Donation
     * const donation = await prisma.donation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DonationFindFirstArgs>(args?: SelectSubset<T, DonationFindFirstArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Donation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonationFindFirstOrThrowArgs} args - Arguments to find a Donation
     * @example
     * // Get one Donation
     * const donation = await prisma.donation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DonationFindFirstOrThrowArgs>(args?: SelectSubset<T, DonationFindFirstOrThrowArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Donations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Donations
     * const donations = await prisma.donation.findMany()
     * 
     * // Get first 10 Donations
     * const donations = await prisma.donation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const donationWithIdOnly = await prisma.donation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DonationFindManyArgs>(args?: SelectSubset<T, DonationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Donation.
     * @param {DonationCreateArgs} args - Arguments to create a Donation.
     * @example
     * // Create one Donation
     * const Donation = await prisma.donation.create({
     *   data: {
     *     // ... data to create a Donation
     *   }
     * })
     * 
     */
    create<T extends DonationCreateArgs>(args: SelectSubset<T, DonationCreateArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Donations.
     * @param {DonationCreateManyArgs} args - Arguments to create many Donations.
     * @example
     * // Create many Donations
     * const donation = await prisma.donation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DonationCreateManyArgs>(args?: SelectSubset<T, DonationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Donation.
     * @param {DonationDeleteArgs} args - Arguments to delete one Donation.
     * @example
     * // Delete one Donation
     * const Donation = await prisma.donation.delete({
     *   where: {
     *     // ... filter to delete one Donation
     *   }
     * })
     * 
     */
    delete<T extends DonationDeleteArgs>(args: SelectSubset<T, DonationDeleteArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Donation.
     * @param {DonationUpdateArgs} args - Arguments to update one Donation.
     * @example
     * // Update one Donation
     * const donation = await prisma.donation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DonationUpdateArgs>(args: SelectSubset<T, DonationUpdateArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Donations.
     * @param {DonationDeleteManyArgs} args - Arguments to filter Donations to delete.
     * @example
     * // Delete a few Donations
     * const { count } = await prisma.donation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DonationDeleteManyArgs>(args?: SelectSubset<T, DonationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Donations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Donations
     * const donation = await prisma.donation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DonationUpdateManyArgs>(args: SelectSubset<T, DonationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Donation.
     * @param {DonationUpsertArgs} args - Arguments to update or create a Donation.
     * @example
     * // Update or create a Donation
     * const donation = await prisma.donation.upsert({
     *   create: {
     *     // ... data to create a Donation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Donation we want to update
     *   }
     * })
     */
    upsert<T extends DonationUpsertArgs>(args: SelectSubset<T, DonationUpsertArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Donations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonationCountArgs} args - Arguments to filter Donations to count.
     * @example
     * // Count the number of Donations
     * const count = await prisma.donation.count({
     *   where: {
     *     // ... the filter for the Donations we want to count
     *   }
     * })
    **/
    count<T extends DonationCountArgs>(
      args?: Subset<T, DonationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Donation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonationAggregateArgs>(args: Subset<T, DonationAggregateArgs>): Prisma.PrismaPromise<GetDonationAggregateType<T>>

    /**
     * Group by Donation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DonationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DonationGroupByArgs['orderBy'] }
        : { orderBy?: DonationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DonationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Donation model
   */
  readonly fields: DonationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Donation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DonationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donorsLastDonation<T extends Donation$donorsLastDonationArgs<ExtArgs> = {}>(args?: Subset<T, Donation$donorsLastDonationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    donors<T extends Donation$donorsArgs<ExtArgs> = {}>(args?: Subset<T, Donation$donorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Donation model
   */ 
  interface DonationFieldRefs {
    readonly id: FieldRef<"Donation", 'String'>
    readonly amount: FieldRef<"Donation", 'Decimal'>
    readonly donation_date: FieldRef<"Donation", 'DateTime'>
    readonly donation_type: FieldRef<"Donation", 'String'>
    readonly payment_method: FieldRef<"Donation", 'String'>
    readonly status: FieldRef<"Donation", 'String'>
    readonly campaign_id: FieldRef<"Donation", 'String'>
    readonly event_id: FieldRef<"Donation", 'String'>
    readonly notes: FieldRef<"Donation", 'String'>
    readonly is_anonymous: FieldRef<"Donation", 'Boolean'>
    readonly is_deleted: FieldRef<"Donation", 'Boolean'>
    readonly deleted_at: FieldRef<"Donation", 'DateTime'>
    readonly created_at: FieldRef<"Donation", 'DateTime'>
    readonly updated_at: FieldRef<"Donation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Donation findUnique
   */
  export type DonationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    /**
     * Filter, which Donation to fetch.
     */
    where: DonationWhereUniqueInput
  }

  /**
   * Donation findUniqueOrThrow
   */
  export type DonationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    /**
     * Filter, which Donation to fetch.
     */
    where: DonationWhereUniqueInput
  }

  /**
   * Donation findFirst
   */
  export type DonationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    /**
     * Filter, which Donation to fetch.
     */
    where?: DonationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donations to fetch.
     */
    orderBy?: DonationOrderByWithRelationInput | DonationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Donations.
     */
    cursor?: DonationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Donations.
     */
    distinct?: DonationScalarFieldEnum | DonationScalarFieldEnum[]
  }

  /**
   * Donation findFirstOrThrow
   */
  export type DonationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    /**
     * Filter, which Donation to fetch.
     */
    where?: DonationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donations to fetch.
     */
    orderBy?: DonationOrderByWithRelationInput | DonationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Donations.
     */
    cursor?: DonationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Donations.
     */
    distinct?: DonationScalarFieldEnum | DonationScalarFieldEnum[]
  }

  /**
   * Donation findMany
   */
  export type DonationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    /**
     * Filter, which Donations to fetch.
     */
    where?: DonationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donations to fetch.
     */
    orderBy?: DonationOrderByWithRelationInput | DonationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Donations.
     */
    cursor?: DonationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donations.
     */
    skip?: number
    distinct?: DonationScalarFieldEnum | DonationScalarFieldEnum[]
  }

  /**
   * Donation create
   */
  export type DonationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    /**
     * The data needed to create a Donation.
     */
    data: XOR<DonationCreateInput, DonationUncheckedCreateInput>
  }

  /**
   * Donation createMany
   */
  export type DonationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Donations.
     */
    data: DonationCreateManyInput | DonationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Donation update
   */
  export type DonationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    /**
     * The data needed to update a Donation.
     */
    data: XOR<DonationUpdateInput, DonationUncheckedUpdateInput>
    /**
     * Choose, which Donation to update.
     */
    where: DonationWhereUniqueInput
  }

  /**
   * Donation updateMany
   */
  export type DonationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Donations.
     */
    data: XOR<DonationUpdateManyMutationInput, DonationUncheckedUpdateManyInput>
    /**
     * Filter which Donations to update
     */
    where?: DonationWhereInput
    /**
     * Limit how many Donations to update.
     */
    limit?: number
  }

  /**
   * Donation upsert
   */
  export type DonationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    /**
     * The filter to search for the Donation to update in case it exists.
     */
    where: DonationWhereUniqueInput
    /**
     * In case the Donation found by the `where` argument doesn't exist, create a new Donation with this data.
     */
    create: XOR<DonationCreateInput, DonationUncheckedCreateInput>
    /**
     * In case the Donation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DonationUpdateInput, DonationUncheckedUpdateInput>
  }

  /**
   * Donation delete
   */
  export type DonationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    /**
     * Filter which Donation to delete.
     */
    where: DonationWhereUniqueInput
  }

  /**
   * Donation deleteMany
   */
  export type DonationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Donations to delete
     */
    where?: DonationWhereInput
    /**
     * Limit how many Donations to delete.
     */
    limit?: number
  }

  /**
   * Donation.donorsLastDonation
   */
  export type Donation$donorsLastDonationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    where?: DonorWhereInput
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    cursor?: DonorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorScalarFieldEnum | DonorScalarFieldEnum[]
  }

  /**
   * Donation.donors
   */
  export type Donation$donorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    where?: DonorDonationWhereInput
    orderBy?: DonorDonationOrderByWithRelationInput | DonorDonationOrderByWithRelationInput[]
    cursor?: DonorDonationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorDonationScalarFieldEnum | DonorDonationScalarFieldEnum[]
  }

  /**
   * Donation without action
   */
  export type DonationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
  }


  /**
   * Model Tag
   */

  export type AggregateTag = {
    _count: TagCountAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  export type TagMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    color: string | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TagMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    color: string | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TagCountAggregateOutputType = {
    id: number
    name: number
    description: number
    color: number
    is_deleted: number
    deleted_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TagMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    color?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type TagMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    color?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type TagCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    color?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tag to aggregate.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tags
    **/
    _count?: true | TagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagMaxAggregateInputType
  }

  export type GetTagAggregateType<T extends TagAggregateArgs> = {
        [P in keyof T & keyof AggregateTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTag[P]>
      : GetScalarType<T[P], AggregateTag[P]>
  }




  export type TagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TagWhereInput
    orderBy?: TagOrderByWithAggregationInput | TagOrderByWithAggregationInput[]
    by: TagScalarFieldEnum[] | TagScalarFieldEnum
    having?: TagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagCountAggregateInputType | true
    _min?: TagMinAggregateInputType
    _max?: TagMaxAggregateInputType
  }

  export type TagGroupByOutputType = {
    id: string
    name: string
    description: string | null
    color: string | null
    is_deleted: boolean
    deleted_at: Date | null
    created_at: Date
    updated_at: Date
    _count: TagCountAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  type GetTagGroupByPayload<T extends TagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagGroupByOutputType[P]>
            : GetScalarType<T[P], TagGroupByOutputType[P]>
        }
      >
    >


  export type TagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    color?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    donors?: boolean | Tag$donorsArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tag"]>



  export type TagSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    color?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type TagOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "color" | "is_deleted" | "deleted_at" | "created_at" | "updated_at", ExtArgs["result"]["tag"]>
  export type TagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donors?: boolean | Tag$donorsArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tag"
    objects: {
      donors: Prisma.$DonorTagPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      color: string | null
      is_deleted: boolean
      deleted_at: Date | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["tag"]>
    composites: {}
  }

  type TagGetPayload<S extends boolean | null | undefined | TagDefaultArgs> = $Result.GetResult<Prisma.$TagPayload, S>

  type TagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TagCountAggregateInputType | true
    }

  export interface TagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tag'], meta: { name: 'Tag' } }
    /**
     * Find zero or one Tag that matches the filter.
     * @param {TagFindUniqueArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TagFindUniqueArgs>(args: SelectSubset<T, TagFindUniqueArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Tag that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TagFindUniqueOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TagFindUniqueOrThrowArgs>(args: SelectSubset<T, TagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Tag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindFirstArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TagFindFirstArgs>(args?: SelectSubset<T, TagFindFirstArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Tag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindFirstOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TagFindFirstOrThrowArgs>(args?: SelectSubset<T, TagFindFirstOrThrowArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tag.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tagWithIdOnly = await prisma.tag.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TagFindManyArgs>(args?: SelectSubset<T, TagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Tag.
     * @param {TagCreateArgs} args - Arguments to create a Tag.
     * @example
     * // Create one Tag
     * const Tag = await prisma.tag.create({
     *   data: {
     *     // ... data to create a Tag
     *   }
     * })
     * 
     */
    create<T extends TagCreateArgs>(args: SelectSubset<T, TagCreateArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Tags.
     * @param {TagCreateManyArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tag = await prisma.tag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TagCreateManyArgs>(args?: SelectSubset<T, TagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tag.
     * @param {TagDeleteArgs} args - Arguments to delete one Tag.
     * @example
     * // Delete one Tag
     * const Tag = await prisma.tag.delete({
     *   where: {
     *     // ... filter to delete one Tag
     *   }
     * })
     * 
     */
    delete<T extends TagDeleteArgs>(args: SelectSubset<T, TagDeleteArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Tag.
     * @param {TagUpdateArgs} args - Arguments to update one Tag.
     * @example
     * // Update one Tag
     * const tag = await prisma.tag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TagUpdateArgs>(args: SelectSubset<T, TagUpdateArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Tags.
     * @param {TagDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TagDeleteManyArgs>(args?: SelectSubset<T, TagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tag = await prisma.tag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TagUpdateManyArgs>(args: SelectSubset<T, TagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tag.
     * @param {TagUpsertArgs} args - Arguments to update or create a Tag.
     * @example
     * // Update or create a Tag
     * const tag = await prisma.tag.upsert({
     *   create: {
     *     // ... data to create a Tag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tag we want to update
     *   }
     * })
     */
    upsert<T extends TagUpsertArgs>(args: SelectSubset<T, TagUpsertArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tag.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends TagCountArgs>(
      args?: Subset<T, TagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagAggregateArgs>(args: Subset<T, TagAggregateArgs>): Prisma.PrismaPromise<GetTagAggregateType<T>>

    /**
     * Group by Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TagGroupByArgs['orderBy'] }
        : { orderBy?: TagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tag model
   */
  readonly fields: TagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donors<T extends Tag$donorsArgs<ExtArgs> = {}>(args?: Subset<T, Tag$donorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tag model
   */ 
  interface TagFieldRefs {
    readonly id: FieldRef<"Tag", 'String'>
    readonly name: FieldRef<"Tag", 'String'>
    readonly description: FieldRef<"Tag", 'String'>
    readonly color: FieldRef<"Tag", 'String'>
    readonly is_deleted: FieldRef<"Tag", 'Boolean'>
    readonly deleted_at: FieldRef<"Tag", 'DateTime'>
    readonly created_at: FieldRef<"Tag", 'DateTime'>
    readonly updated_at: FieldRef<"Tag", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Tag findUnique
   */
  export type TagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag findUniqueOrThrow
   */
  export type TagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag findFirst
   */
  export type TagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag findFirstOrThrow
   */
  export type TagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag findMany
   */
  export type TagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag create
   */
  export type TagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The data needed to create a Tag.
     */
    data: XOR<TagCreateInput, TagUncheckedCreateInput>
  }

  /**
   * Tag createMany
   */
  export type TagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tags.
     */
    data: TagCreateManyInput | TagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tag update
   */
  export type TagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The data needed to update a Tag.
     */
    data: XOR<TagUpdateInput, TagUncheckedUpdateInput>
    /**
     * Choose, which Tag to update.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag updateMany
   */
  export type TagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tags.
     */
    data: XOR<TagUpdateManyMutationInput, TagUncheckedUpdateManyInput>
    /**
     * Filter which Tags to update
     */
    where?: TagWhereInput
    /**
     * Limit how many Tags to update.
     */
    limit?: number
  }

  /**
   * Tag upsert
   */
  export type TagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The filter to search for the Tag to update in case it exists.
     */
    where: TagWhereUniqueInput
    /**
     * In case the Tag found by the `where` argument doesn't exist, create a new Tag with this data.
     */
    create: XOR<TagCreateInput, TagUncheckedCreateInput>
    /**
     * In case the Tag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TagUpdateInput, TagUncheckedUpdateInput>
  }

  /**
   * Tag delete
   */
  export type TagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter which Tag to delete.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag deleteMany
   */
  export type TagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tags to delete
     */
    where?: TagWhereInput
    /**
     * Limit how many Tags to delete.
     */
    limit?: number
  }

  /**
   * Tag.donors
   */
  export type Tag$donorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    where?: DonorTagWhereInput
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    cursor?: DonorTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * Tag without action
   */
  export type TagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tag
     */
    omit?: TagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
  }


  /**
   * Model Donor
   */

  export type AggregateDonor = {
    _count: DonorCountAggregateOutputType | null
    _avg: DonorAvgAggregateOutputType | null
    _sum: DonorSumAggregateOutputType | null
    _min: DonorMinAggregateOutputType | null
    _max: DonorMaxAggregateOutputType | null
  }

  export type DonorAvgAggregateOutputType = {
    age: number | null
    total_donation_amount: Decimal | null
    total_donations_count: number | null
  }

  export type DonorSumAggregateOutputType = {
    age: number | null
    total_donation_amount: Decimal | null
    total_donations_count: number | null
  }

  export type DonorMinAggregateOutputType = {
    id: string | null
    first_name: string | null
    nick_name: string | null
    middle_name: string | null
    last_name: string | null
    organization_name: string | null
    gender: string | null
    age: number | null
    email: string | null
    phone_number: string | null
    address: string | null
    city: string | null
    state: string | null
    postal_code: string | null
    country: string | null
    registration_date: Date | null
    last_donation_id: string | null
    last_donation_date: Date | null
    total_donation_amount: Decimal | null
    total_donations_count: number | null
    anonymous_donation_preference: boolean | null
    is_merged: boolean | null
    is_company: boolean | null
    merge_to_donor_id: string | null
    contact_phone_type: string | null
    phone_restrictions: string | null
    email_restrictions: string | null
    communication_restrictions: string | null
    subscription_events_in_person: string | null
    subscription_events_magazine: string | null
    communication_preference: string | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonorMaxAggregateOutputType = {
    id: string | null
    first_name: string | null
    nick_name: string | null
    middle_name: string | null
    last_name: string | null
    organization_name: string | null
    gender: string | null
    age: number | null
    email: string | null
    phone_number: string | null
    address: string | null
    city: string | null
    state: string | null
    postal_code: string | null
    country: string | null
    registration_date: Date | null
    last_donation_id: string | null
    last_donation_date: Date | null
    total_donation_amount: Decimal | null
    total_donations_count: number | null
    anonymous_donation_preference: boolean | null
    is_merged: boolean | null
    is_company: boolean | null
    merge_to_donor_id: string | null
    contact_phone_type: string | null
    phone_restrictions: string | null
    email_restrictions: string | null
    communication_restrictions: string | null
    subscription_events_in_person: string | null
    subscription_events_magazine: string | null
    communication_preference: string | null
    is_deleted: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonorCountAggregateOutputType = {
    id: number
    first_name: number
    nick_name: number
    middle_name: number
    last_name: number
    organization_name: number
    gender: number
    age: number
    email: number
    phone_number: number
    address: number
    city: number
    state: number
    postal_code: number
    country: number
    registration_date: number
    last_donation_id: number
    last_donation_date: number
    total_donation_amount: number
    total_donations_count: number
    anonymous_donation_preference: number
    is_merged: number
    is_company: number
    merge_to_donor_id: number
    contact_phone_type: number
    phone_restrictions: number
    email_restrictions: number
    communication_restrictions: number
    subscription_events_in_person: number
    subscription_events_magazine: number
    communication_preference: number
    is_deleted: number
    deleted_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type DonorAvgAggregateInputType = {
    age?: true
    total_donation_amount?: true
    total_donations_count?: true
  }

  export type DonorSumAggregateInputType = {
    age?: true
    total_donation_amount?: true
    total_donations_count?: true
  }

  export type DonorMinAggregateInputType = {
    id?: true
    first_name?: true
    nick_name?: true
    middle_name?: true
    last_name?: true
    organization_name?: true
    gender?: true
    age?: true
    email?: true
    phone_number?: true
    address?: true
    city?: true
    state?: true
    postal_code?: true
    country?: true
    registration_date?: true
    last_donation_id?: true
    last_donation_date?: true
    total_donation_amount?: true
    total_donations_count?: true
    anonymous_donation_preference?: true
    is_merged?: true
    is_company?: true
    merge_to_donor_id?: true
    contact_phone_type?: true
    phone_restrictions?: true
    email_restrictions?: true
    communication_restrictions?: true
    subscription_events_in_person?: true
    subscription_events_magazine?: true
    communication_preference?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type DonorMaxAggregateInputType = {
    id?: true
    first_name?: true
    nick_name?: true
    middle_name?: true
    last_name?: true
    organization_name?: true
    gender?: true
    age?: true
    email?: true
    phone_number?: true
    address?: true
    city?: true
    state?: true
    postal_code?: true
    country?: true
    registration_date?: true
    last_donation_id?: true
    last_donation_date?: true
    total_donation_amount?: true
    total_donations_count?: true
    anonymous_donation_preference?: true
    is_merged?: true
    is_company?: true
    merge_to_donor_id?: true
    contact_phone_type?: true
    phone_restrictions?: true
    email_restrictions?: true
    communication_restrictions?: true
    subscription_events_in_person?: true
    subscription_events_magazine?: true
    communication_preference?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type DonorCountAggregateInputType = {
    id?: true
    first_name?: true
    nick_name?: true
    middle_name?: true
    last_name?: true
    organization_name?: true
    gender?: true
    age?: true
    email?: true
    phone_number?: true
    address?: true
    city?: true
    state?: true
    postal_code?: true
    country?: true
    registration_date?: true
    last_donation_id?: true
    last_donation_date?: true
    total_donation_amount?: true
    total_donations_count?: true
    anonymous_donation_preference?: true
    is_merged?: true
    is_company?: true
    merge_to_donor_id?: true
    contact_phone_type?: true
    phone_restrictions?: true
    email_restrictions?: true
    communication_restrictions?: true
    subscription_events_in_person?: true
    subscription_events_magazine?: true
    communication_preference?: true
    is_deleted?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type DonorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Donor to aggregate.
     */
    where?: DonorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donors to fetch.
     */
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DonorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Donors
    **/
    _count?: true | DonorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DonorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DonorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonorMaxAggregateInputType
  }

  export type GetDonorAggregateType<T extends DonorAggregateArgs> = {
        [P in keyof T & keyof AggregateDonor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonor[P]>
      : GetScalarType<T[P], AggregateDonor[P]>
  }




  export type DonorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorWhereInput
    orderBy?: DonorOrderByWithAggregationInput | DonorOrderByWithAggregationInput[]
    by: DonorScalarFieldEnum[] | DonorScalarFieldEnum
    having?: DonorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonorCountAggregateInputType | true
    _avg?: DonorAvgAggregateInputType
    _sum?: DonorSumAggregateInputType
    _min?: DonorMinAggregateInputType
    _max?: DonorMaxAggregateInputType
  }

  export type DonorGroupByOutputType = {
    id: string
    first_name: string | null
    nick_name: string | null
    middle_name: string | null
    last_name: string | null
    organization_name: string | null
    gender: string | null
    age: number | null
    email: string | null
    phone_number: string | null
    address: string | null
    city: string | null
    state: string | null
    postal_code: string | null
    country: string | null
    registration_date: Date | null
    last_donation_id: string | null
    last_donation_date: Date | null
    total_donation_amount: Decimal
    total_donations_count: number
    anonymous_donation_preference: boolean
    is_merged: boolean
    is_company: boolean
    merge_to_donor_id: string | null
    contact_phone_type: string | null
    phone_restrictions: string | null
    email_restrictions: string | null
    communication_restrictions: string | null
    subscription_events_in_person: string | null
    subscription_events_magazine: string | null
    communication_preference: string | null
    is_deleted: boolean
    deleted_at: Date | null
    created_at: Date
    updated_at: Date
    _count: DonorCountAggregateOutputType | null
    _avg: DonorAvgAggregateOutputType | null
    _sum: DonorSumAggregateOutputType | null
    _min: DonorMinAggregateOutputType | null
    _max: DonorMaxAggregateOutputType | null
  }

  type GetDonorGroupByPayload<T extends DonorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonorGroupByOutputType[P]>
            : GetScalarType<T[P], DonorGroupByOutputType[P]>
        }
      >
    >


  export type DonorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    nick_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    organization_name?: boolean
    gender?: boolean
    age?: boolean
    email?: boolean
    phone_number?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postal_code?: boolean
    country?: boolean
    registration_date?: boolean
    last_donation_id?: boolean
    last_donation_date?: boolean
    total_donation_amount?: boolean
    total_donations_count?: boolean
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: boolean
    contact_phone_type?: boolean
    phone_restrictions?: boolean
    email_restrictions?: boolean
    communication_restrictions?: boolean
    subscription_events_in_person?: boolean
    subscription_events_magazine?: boolean
    communication_preference?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    last_donation?: boolean | Donor$last_donationArgs<ExtArgs>
    donations?: boolean | Donor$donationsArgs<ExtArgs>
    interest_domains?: boolean | Donor$interest_domainsArgs<ExtArgs>
    merge_to_donor?: boolean | Donor$merge_to_donorArgs<ExtArgs>
    merged_donors?: boolean | Donor$merged_donorsArgs<ExtArgs>
    tags?: boolean | Donor$tagsArgs<ExtArgs>
    communications?: boolean | Donor$communicationsArgs<ExtArgs>
    _count?: boolean | DonorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donor"]>



  export type DonorSelectScalar = {
    id?: boolean
    first_name?: boolean
    nick_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    organization_name?: boolean
    gender?: boolean
    age?: boolean
    email?: boolean
    phone_number?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    postal_code?: boolean
    country?: boolean
    registration_date?: boolean
    last_donation_id?: boolean
    last_donation_date?: boolean
    total_donation_amount?: boolean
    total_donations_count?: boolean
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: boolean
    contact_phone_type?: boolean
    phone_restrictions?: boolean
    email_restrictions?: boolean
    communication_restrictions?: boolean
    subscription_events_in_person?: boolean
    subscription_events_magazine?: boolean
    communication_preference?: boolean
    is_deleted?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type DonorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "first_name" | "nick_name" | "middle_name" | "last_name" | "organization_name" | "gender" | "age" | "email" | "phone_number" | "address" | "city" | "state" | "postal_code" | "country" | "registration_date" | "last_donation_id" | "last_donation_date" | "total_donation_amount" | "total_donations_count" | "anonymous_donation_preference" | "is_merged" | "is_company" | "merge_to_donor_id" | "contact_phone_type" | "phone_restrictions" | "email_restrictions" | "communication_restrictions" | "subscription_events_in_person" | "subscription_events_magazine" | "communication_preference" | "is_deleted" | "deleted_at" | "created_at" | "updated_at", ExtArgs["result"]["donor"]>
  export type DonorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    last_donation?: boolean | Donor$last_donationArgs<ExtArgs>
    donations?: boolean | Donor$donationsArgs<ExtArgs>
    interest_domains?: boolean | Donor$interest_domainsArgs<ExtArgs>
    merge_to_donor?: boolean | Donor$merge_to_donorArgs<ExtArgs>
    merged_donors?: boolean | Donor$merged_donorsArgs<ExtArgs>
    tags?: boolean | Donor$tagsArgs<ExtArgs>
    communications?: boolean | Donor$communicationsArgs<ExtArgs>
    _count?: boolean | DonorCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $DonorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Donor"
    objects: {
      last_donation: Prisma.$DonationPayload<ExtArgs> | null
      donations: Prisma.$DonorDonationPayload<ExtArgs>[]
      interest_domains: Prisma.$DonorInterestDomainPayload<ExtArgs>[]
      merge_to_donor: Prisma.$DonorPayload<ExtArgs> | null
      merged_donors: Prisma.$DonorPayload<ExtArgs>[]
      tags: Prisma.$DonorTagPayload<ExtArgs>[]
      communications: Prisma.$CommunicationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      first_name: string | null
      nick_name: string | null
      middle_name: string | null
      last_name: string | null
      organization_name: string | null
      gender: string | null
      age: number | null
      email: string | null
      phone_number: string | null
      address: string | null
      city: string | null
      state: string | null
      postal_code: string | null
      country: string | null
      registration_date: Date | null
      last_donation_id: string | null
      last_donation_date: Date | null
      total_donation_amount: Prisma.Decimal
      total_donations_count: number
      anonymous_donation_preference: boolean
      is_merged: boolean
      is_company: boolean
      merge_to_donor_id: string | null
      contact_phone_type: string | null
      phone_restrictions: string | null
      email_restrictions: string | null
      communication_restrictions: string | null
      subscription_events_in_person: string | null
      subscription_events_magazine: string | null
      communication_preference: string | null
      is_deleted: boolean
      deleted_at: Date | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["donor"]>
    composites: {}
  }

  type DonorGetPayload<S extends boolean | null | undefined | DonorDefaultArgs> = $Result.GetResult<Prisma.$DonorPayload, S>

  type DonorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DonorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonorCountAggregateInputType | true
    }

  export interface DonorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Donor'], meta: { name: 'Donor' } }
    /**
     * Find zero or one Donor that matches the filter.
     * @param {DonorFindUniqueArgs} args - Arguments to find a Donor
     * @example
     * // Get one Donor
     * const donor = await prisma.donor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DonorFindUniqueArgs>(args: SelectSubset<T, DonorFindUniqueArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Donor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DonorFindUniqueOrThrowArgs} args - Arguments to find a Donor
     * @example
     * // Get one Donor
     * const donor = await prisma.donor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DonorFindUniqueOrThrowArgs>(args: SelectSubset<T, DonorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Donor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorFindFirstArgs} args - Arguments to find a Donor
     * @example
     * // Get one Donor
     * const donor = await prisma.donor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DonorFindFirstArgs>(args?: SelectSubset<T, DonorFindFirstArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Donor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorFindFirstOrThrowArgs} args - Arguments to find a Donor
     * @example
     * // Get one Donor
     * const donor = await prisma.donor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DonorFindFirstOrThrowArgs>(args?: SelectSubset<T, DonorFindFirstOrThrowArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Donors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Donors
     * const donors = await prisma.donor.findMany()
     * 
     * // Get first 10 Donors
     * const donors = await prisma.donor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const donorWithIdOnly = await prisma.donor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DonorFindManyArgs>(args?: SelectSubset<T, DonorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Donor.
     * @param {DonorCreateArgs} args - Arguments to create a Donor.
     * @example
     * // Create one Donor
     * const Donor = await prisma.donor.create({
     *   data: {
     *     // ... data to create a Donor
     *   }
     * })
     * 
     */
    create<T extends DonorCreateArgs>(args: SelectSubset<T, DonorCreateArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Donors.
     * @param {DonorCreateManyArgs} args - Arguments to create many Donors.
     * @example
     * // Create many Donors
     * const donor = await prisma.donor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DonorCreateManyArgs>(args?: SelectSubset<T, DonorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Donor.
     * @param {DonorDeleteArgs} args - Arguments to delete one Donor.
     * @example
     * // Delete one Donor
     * const Donor = await prisma.donor.delete({
     *   where: {
     *     // ... filter to delete one Donor
     *   }
     * })
     * 
     */
    delete<T extends DonorDeleteArgs>(args: SelectSubset<T, DonorDeleteArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Donor.
     * @param {DonorUpdateArgs} args - Arguments to update one Donor.
     * @example
     * // Update one Donor
     * const donor = await prisma.donor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DonorUpdateArgs>(args: SelectSubset<T, DonorUpdateArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Donors.
     * @param {DonorDeleteManyArgs} args - Arguments to filter Donors to delete.
     * @example
     * // Delete a few Donors
     * const { count } = await prisma.donor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DonorDeleteManyArgs>(args?: SelectSubset<T, DonorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Donors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Donors
     * const donor = await prisma.donor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DonorUpdateManyArgs>(args: SelectSubset<T, DonorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Donor.
     * @param {DonorUpsertArgs} args - Arguments to update or create a Donor.
     * @example
     * // Update or create a Donor
     * const donor = await prisma.donor.upsert({
     *   create: {
     *     // ... data to create a Donor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Donor we want to update
     *   }
     * })
     */
    upsert<T extends DonorUpsertArgs>(args: SelectSubset<T, DonorUpsertArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Donors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorCountArgs} args - Arguments to filter Donors to count.
     * @example
     * // Count the number of Donors
     * const count = await prisma.donor.count({
     *   where: {
     *     // ... the filter for the Donors we want to count
     *   }
     * })
    **/
    count<T extends DonorCountArgs>(
      args?: Subset<T, DonorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Donor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonorAggregateArgs>(args: Subset<T, DonorAggregateArgs>): Prisma.PrismaPromise<GetDonorAggregateType<T>>

    /**
     * Group by Donor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DonorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DonorGroupByArgs['orderBy'] }
        : { orderBy?: DonorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DonorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Donor model
   */
  readonly fields: DonorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Donor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DonorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    last_donation<T extends Donor$last_donationArgs<ExtArgs> = {}>(args?: Subset<T, Donor$last_donationArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    donations<T extends Donor$donationsArgs<ExtArgs> = {}>(args?: Subset<T, Donor$donationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    interest_domains<T extends Donor$interest_domainsArgs<ExtArgs> = {}>(args?: Subset<T, Donor$interest_domainsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    merge_to_donor<T extends Donor$merge_to_donorArgs<ExtArgs> = {}>(args?: Subset<T, Donor$merge_to_donorArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    merged_donors<T extends Donor$merged_donorsArgs<ExtArgs> = {}>(args?: Subset<T, Donor$merged_donorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    tags<T extends Donor$tagsArgs<ExtArgs> = {}>(args?: Subset<T, Donor$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    communications<T extends Donor$communicationsArgs<ExtArgs> = {}>(args?: Subset<T, Donor$communicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Donor model
   */ 
  interface DonorFieldRefs {
    readonly id: FieldRef<"Donor", 'String'>
    readonly first_name: FieldRef<"Donor", 'String'>
    readonly nick_name: FieldRef<"Donor", 'String'>
    readonly middle_name: FieldRef<"Donor", 'String'>
    readonly last_name: FieldRef<"Donor", 'String'>
    readonly organization_name: FieldRef<"Donor", 'String'>
    readonly gender: FieldRef<"Donor", 'String'>
    readonly age: FieldRef<"Donor", 'Int'>
    readonly email: FieldRef<"Donor", 'String'>
    readonly phone_number: FieldRef<"Donor", 'String'>
    readonly address: FieldRef<"Donor", 'String'>
    readonly city: FieldRef<"Donor", 'String'>
    readonly state: FieldRef<"Donor", 'String'>
    readonly postal_code: FieldRef<"Donor", 'String'>
    readonly country: FieldRef<"Donor", 'String'>
    readonly registration_date: FieldRef<"Donor", 'DateTime'>
    readonly last_donation_id: FieldRef<"Donor", 'String'>
    readonly last_donation_date: FieldRef<"Donor", 'DateTime'>
    readonly total_donation_amount: FieldRef<"Donor", 'Decimal'>
    readonly total_donations_count: FieldRef<"Donor", 'Int'>
    readonly anonymous_donation_preference: FieldRef<"Donor", 'Boolean'>
    readonly is_merged: FieldRef<"Donor", 'Boolean'>
    readonly is_company: FieldRef<"Donor", 'Boolean'>
    readonly merge_to_donor_id: FieldRef<"Donor", 'String'>
    readonly contact_phone_type: FieldRef<"Donor", 'String'>
    readonly phone_restrictions: FieldRef<"Donor", 'String'>
    readonly email_restrictions: FieldRef<"Donor", 'String'>
    readonly communication_restrictions: FieldRef<"Donor", 'String'>
    readonly subscription_events_in_person: FieldRef<"Donor", 'String'>
    readonly subscription_events_magazine: FieldRef<"Donor", 'String'>
    readonly communication_preference: FieldRef<"Donor", 'String'>
    readonly is_deleted: FieldRef<"Donor", 'Boolean'>
    readonly deleted_at: FieldRef<"Donor", 'DateTime'>
    readonly created_at: FieldRef<"Donor", 'DateTime'>
    readonly updated_at: FieldRef<"Donor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Donor findUnique
   */
  export type DonorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donor to fetch.
     */
    where: DonorWhereUniqueInput
  }

  /**
   * Donor findUniqueOrThrow
   */
  export type DonorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donor to fetch.
     */
    where: DonorWhereUniqueInput
  }

  /**
   * Donor findFirst
   */
  export type DonorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donor to fetch.
     */
    where?: DonorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donors to fetch.
     */
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Donors.
     */
    cursor?: DonorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Donors.
     */
    distinct?: DonorScalarFieldEnum | DonorScalarFieldEnum[]
  }

  /**
   * Donor findFirstOrThrow
   */
  export type DonorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donor to fetch.
     */
    where?: DonorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donors to fetch.
     */
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Donors.
     */
    cursor?: DonorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Donors.
     */
    distinct?: DonorScalarFieldEnum | DonorScalarFieldEnum[]
  }

  /**
   * Donor findMany
   */
  export type DonorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter, which Donors to fetch.
     */
    where?: DonorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Donors to fetch.
     */
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Donors.
     */
    cursor?: DonorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Donors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Donors.
     */
    skip?: number
    distinct?: DonorScalarFieldEnum | DonorScalarFieldEnum[]
  }

  /**
   * Donor create
   */
  export type DonorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * The data needed to create a Donor.
     */
    data: XOR<DonorCreateInput, DonorUncheckedCreateInput>
  }

  /**
   * Donor createMany
   */
  export type DonorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Donors.
     */
    data: DonorCreateManyInput | DonorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Donor update
   */
  export type DonorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * The data needed to update a Donor.
     */
    data: XOR<DonorUpdateInput, DonorUncheckedUpdateInput>
    /**
     * Choose, which Donor to update.
     */
    where: DonorWhereUniqueInput
  }

  /**
   * Donor updateMany
   */
  export type DonorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Donors.
     */
    data: XOR<DonorUpdateManyMutationInput, DonorUncheckedUpdateManyInput>
    /**
     * Filter which Donors to update
     */
    where?: DonorWhereInput
    /**
     * Limit how many Donors to update.
     */
    limit?: number
  }

  /**
   * Donor upsert
   */
  export type DonorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * The filter to search for the Donor to update in case it exists.
     */
    where: DonorWhereUniqueInput
    /**
     * In case the Donor found by the `where` argument doesn't exist, create a new Donor with this data.
     */
    create: XOR<DonorCreateInput, DonorUncheckedCreateInput>
    /**
     * In case the Donor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DonorUpdateInput, DonorUncheckedUpdateInput>
  }

  /**
   * Donor delete
   */
  export type DonorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    /**
     * Filter which Donor to delete.
     */
    where: DonorWhereUniqueInput
  }

  /**
   * Donor deleteMany
   */
  export type DonorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Donors to delete
     */
    where?: DonorWhereInput
    /**
     * Limit how many Donors to delete.
     */
    limit?: number
  }

  /**
   * Donor.last_donation
   */
  export type Donor$last_donationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donation
     */
    select?: DonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donation
     */
    omit?: DonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonationInclude<ExtArgs> | null
    where?: DonationWhereInput
  }

  /**
   * Donor.donations
   */
  export type Donor$donationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    where?: DonorDonationWhereInput
    orderBy?: DonorDonationOrderByWithRelationInput | DonorDonationOrderByWithRelationInput[]
    cursor?: DonorDonationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorDonationScalarFieldEnum | DonorDonationScalarFieldEnum[]
  }

  /**
   * Donor.interest_domains
   */
  export type Donor$interest_domainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    where?: DonorInterestDomainWhereInput
    orderBy?: DonorInterestDomainOrderByWithRelationInput | DonorInterestDomainOrderByWithRelationInput[]
    cursor?: DonorInterestDomainWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorInterestDomainScalarFieldEnum | DonorInterestDomainScalarFieldEnum[]
  }

  /**
   * Donor.merge_to_donor
   */
  export type Donor$merge_to_donorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    where?: DonorWhereInput
  }

  /**
   * Donor.merged_donors
   */
  export type Donor$merged_donorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
    where?: DonorWhereInput
    orderBy?: DonorOrderByWithRelationInput | DonorOrderByWithRelationInput[]
    cursor?: DonorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorScalarFieldEnum | DonorScalarFieldEnum[]
  }

  /**
   * Donor.tags
   */
  export type Donor$tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    where?: DonorTagWhereInput
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    cursor?: DonorTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * Donor.communications
   */
  export type Donor$communicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    where?: CommunicationWhereInput
    orderBy?: CommunicationOrderByWithRelationInput | CommunicationOrderByWithRelationInput[]
    cursor?: CommunicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunicationScalarFieldEnum | CommunicationScalarFieldEnum[]
  }

  /**
   * Donor without action
   */
  export type DonorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Donor
     */
    select?: DonorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Donor
     */
    omit?: DonorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInclude<ExtArgs> | null
  }


  /**
   * Model DonorDonation
   */

  export type AggregateDonorDonation = {
    _count: DonorDonationCountAggregateOutputType | null
    _avg: DonorDonationAvgAggregateOutputType | null
    _sum: DonorDonationSumAggregateOutputType | null
    _min: DonorDonationMinAggregateOutputType | null
    _max: DonorDonationMaxAggregateOutputType | null
  }

  export type DonorDonationAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type DonorDonationSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type DonorDonationMinAggregateOutputType = {
    donor_id: string | null
    donation_id: string | null
    amount: Decimal | null
    is_primary: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonorDonationMaxAggregateOutputType = {
    donor_id: string | null
    donation_id: string | null
    amount: Decimal | null
    is_primary: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonorDonationCountAggregateOutputType = {
    donor_id: number
    donation_id: number
    amount: number
    is_primary: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type DonorDonationAvgAggregateInputType = {
    amount?: true
  }

  export type DonorDonationSumAggregateInputType = {
    amount?: true
  }

  export type DonorDonationMinAggregateInputType = {
    donor_id?: true
    donation_id?: true
    amount?: true
    is_primary?: true
    created_at?: true
    updated_at?: true
  }

  export type DonorDonationMaxAggregateInputType = {
    donor_id?: true
    donation_id?: true
    amount?: true
    is_primary?: true
    created_at?: true
    updated_at?: true
  }

  export type DonorDonationCountAggregateInputType = {
    donor_id?: true
    donation_id?: true
    amount?: true
    is_primary?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type DonorDonationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorDonation to aggregate.
     */
    where?: DonorDonationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorDonations to fetch.
     */
    orderBy?: DonorDonationOrderByWithRelationInput | DonorDonationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DonorDonationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorDonations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorDonations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DonorDonations
    **/
    _count?: true | DonorDonationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DonorDonationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DonorDonationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonorDonationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonorDonationMaxAggregateInputType
  }

  export type GetDonorDonationAggregateType<T extends DonorDonationAggregateArgs> = {
        [P in keyof T & keyof AggregateDonorDonation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonorDonation[P]>
      : GetScalarType<T[P], AggregateDonorDonation[P]>
  }




  export type DonorDonationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorDonationWhereInput
    orderBy?: DonorDonationOrderByWithAggregationInput | DonorDonationOrderByWithAggregationInput[]
    by: DonorDonationScalarFieldEnum[] | DonorDonationScalarFieldEnum
    having?: DonorDonationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonorDonationCountAggregateInputType | true
    _avg?: DonorDonationAvgAggregateInputType
    _sum?: DonorDonationSumAggregateInputType
    _min?: DonorDonationMinAggregateInputType
    _max?: DonorDonationMaxAggregateInputType
  }

  export type DonorDonationGroupByOutputType = {
    donor_id: string
    donation_id: string
    amount: Decimal
    is_primary: boolean
    created_at: Date
    updated_at: Date
    _count: DonorDonationCountAggregateOutputType | null
    _avg: DonorDonationAvgAggregateOutputType | null
    _sum: DonorDonationSumAggregateOutputType | null
    _min: DonorDonationMinAggregateOutputType | null
    _max: DonorDonationMaxAggregateOutputType | null
  }

  type GetDonorDonationGroupByPayload<T extends DonorDonationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonorDonationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonorDonationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonorDonationGroupByOutputType[P]>
            : GetScalarType<T[P], DonorDonationGroupByOutputType[P]>
        }
      >
    >


  export type DonorDonationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    donor_id?: boolean
    donation_id?: boolean
    amount?: boolean
    is_primary?: boolean
    created_at?: boolean
    updated_at?: boolean
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    donation?: boolean | DonationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donorDonation"]>



  export type DonorDonationSelectScalar = {
    donor_id?: boolean
    donation_id?: boolean
    amount?: boolean
    is_primary?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type DonorDonationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"donor_id" | "donation_id" | "amount" | "is_primary" | "created_at" | "updated_at", ExtArgs["result"]["donorDonation"]>
  export type DonorDonationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    donation?: boolean | DonationDefaultArgs<ExtArgs>
  }

  export type $DonorDonationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DonorDonation"
    objects: {
      donor: Prisma.$DonorPayload<ExtArgs>
      donation: Prisma.$DonationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      donor_id: string
      donation_id: string
      amount: Prisma.Decimal
      is_primary: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["donorDonation"]>
    composites: {}
  }

  type DonorDonationGetPayload<S extends boolean | null | undefined | DonorDonationDefaultArgs> = $Result.GetResult<Prisma.$DonorDonationPayload, S>

  type DonorDonationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DonorDonationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonorDonationCountAggregateInputType | true
    }

  export interface DonorDonationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DonorDonation'], meta: { name: 'DonorDonation' } }
    /**
     * Find zero or one DonorDonation that matches the filter.
     * @param {DonorDonationFindUniqueArgs} args - Arguments to find a DonorDonation
     * @example
     * // Get one DonorDonation
     * const donorDonation = await prisma.donorDonation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DonorDonationFindUniqueArgs>(args: SelectSubset<T, DonorDonationFindUniqueArgs<ExtArgs>>): Prisma__DonorDonationClient<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one DonorDonation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DonorDonationFindUniqueOrThrowArgs} args - Arguments to find a DonorDonation
     * @example
     * // Get one DonorDonation
     * const donorDonation = await prisma.donorDonation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DonorDonationFindUniqueOrThrowArgs>(args: SelectSubset<T, DonorDonationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DonorDonationClient<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first DonorDonation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorDonationFindFirstArgs} args - Arguments to find a DonorDonation
     * @example
     * // Get one DonorDonation
     * const donorDonation = await prisma.donorDonation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DonorDonationFindFirstArgs>(args?: SelectSubset<T, DonorDonationFindFirstArgs<ExtArgs>>): Prisma__DonorDonationClient<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first DonorDonation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorDonationFindFirstOrThrowArgs} args - Arguments to find a DonorDonation
     * @example
     * // Get one DonorDonation
     * const donorDonation = await prisma.donorDonation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DonorDonationFindFirstOrThrowArgs>(args?: SelectSubset<T, DonorDonationFindFirstOrThrowArgs<ExtArgs>>): Prisma__DonorDonationClient<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more DonorDonations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorDonationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DonorDonations
     * const donorDonations = await prisma.donorDonation.findMany()
     * 
     * // Get first 10 DonorDonations
     * const donorDonations = await prisma.donorDonation.findMany({ take: 10 })
     * 
     * // Only select the `donor_id`
     * const donorDonationWithDonor_idOnly = await prisma.donorDonation.findMany({ select: { donor_id: true } })
     * 
     */
    findMany<T extends DonorDonationFindManyArgs>(args?: SelectSubset<T, DonorDonationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a DonorDonation.
     * @param {DonorDonationCreateArgs} args - Arguments to create a DonorDonation.
     * @example
     * // Create one DonorDonation
     * const DonorDonation = await prisma.donorDonation.create({
     *   data: {
     *     // ... data to create a DonorDonation
     *   }
     * })
     * 
     */
    create<T extends DonorDonationCreateArgs>(args: SelectSubset<T, DonorDonationCreateArgs<ExtArgs>>): Prisma__DonorDonationClient<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many DonorDonations.
     * @param {DonorDonationCreateManyArgs} args - Arguments to create many DonorDonations.
     * @example
     * // Create many DonorDonations
     * const donorDonation = await prisma.donorDonation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DonorDonationCreateManyArgs>(args?: SelectSubset<T, DonorDonationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DonorDonation.
     * @param {DonorDonationDeleteArgs} args - Arguments to delete one DonorDonation.
     * @example
     * // Delete one DonorDonation
     * const DonorDonation = await prisma.donorDonation.delete({
     *   where: {
     *     // ... filter to delete one DonorDonation
     *   }
     * })
     * 
     */
    delete<T extends DonorDonationDeleteArgs>(args: SelectSubset<T, DonorDonationDeleteArgs<ExtArgs>>): Prisma__DonorDonationClient<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one DonorDonation.
     * @param {DonorDonationUpdateArgs} args - Arguments to update one DonorDonation.
     * @example
     * // Update one DonorDonation
     * const donorDonation = await prisma.donorDonation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DonorDonationUpdateArgs>(args: SelectSubset<T, DonorDonationUpdateArgs<ExtArgs>>): Prisma__DonorDonationClient<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more DonorDonations.
     * @param {DonorDonationDeleteManyArgs} args - Arguments to filter DonorDonations to delete.
     * @example
     * // Delete a few DonorDonations
     * const { count } = await prisma.donorDonation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DonorDonationDeleteManyArgs>(args?: SelectSubset<T, DonorDonationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DonorDonations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorDonationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DonorDonations
     * const donorDonation = await prisma.donorDonation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DonorDonationUpdateManyArgs>(args: SelectSubset<T, DonorDonationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DonorDonation.
     * @param {DonorDonationUpsertArgs} args - Arguments to update or create a DonorDonation.
     * @example
     * // Update or create a DonorDonation
     * const donorDonation = await prisma.donorDonation.upsert({
     *   create: {
     *     // ... data to create a DonorDonation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DonorDonation we want to update
     *   }
     * })
     */
    upsert<T extends DonorDonationUpsertArgs>(args: SelectSubset<T, DonorDonationUpsertArgs<ExtArgs>>): Prisma__DonorDonationClient<$Result.GetResult<Prisma.$DonorDonationPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of DonorDonations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorDonationCountArgs} args - Arguments to filter DonorDonations to count.
     * @example
     * // Count the number of DonorDonations
     * const count = await prisma.donorDonation.count({
     *   where: {
     *     // ... the filter for the DonorDonations we want to count
     *   }
     * })
    **/
    count<T extends DonorDonationCountArgs>(
      args?: Subset<T, DonorDonationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonorDonationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DonorDonation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorDonationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonorDonationAggregateArgs>(args: Subset<T, DonorDonationAggregateArgs>): Prisma.PrismaPromise<GetDonorDonationAggregateType<T>>

    /**
     * Group by DonorDonation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorDonationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DonorDonationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DonorDonationGroupByArgs['orderBy'] }
        : { orderBy?: DonorDonationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DonorDonationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonorDonationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DonorDonation model
   */
  readonly fields: DonorDonationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DonorDonation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DonorDonationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donor<T extends DonorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DonorDefaultArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    donation<T extends DonationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DonationDefaultArgs<ExtArgs>>): Prisma__DonationClient<$Result.GetResult<Prisma.$DonationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DonorDonation model
   */ 
  interface DonorDonationFieldRefs {
    readonly donor_id: FieldRef<"DonorDonation", 'String'>
    readonly donation_id: FieldRef<"DonorDonation", 'String'>
    readonly amount: FieldRef<"DonorDonation", 'Decimal'>
    readonly is_primary: FieldRef<"DonorDonation", 'Boolean'>
    readonly created_at: FieldRef<"DonorDonation", 'DateTime'>
    readonly updated_at: FieldRef<"DonorDonation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DonorDonation findUnique
   */
  export type DonorDonationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    /**
     * Filter, which DonorDonation to fetch.
     */
    where: DonorDonationWhereUniqueInput
  }

  /**
   * DonorDonation findUniqueOrThrow
   */
  export type DonorDonationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    /**
     * Filter, which DonorDonation to fetch.
     */
    where: DonorDonationWhereUniqueInput
  }

  /**
   * DonorDonation findFirst
   */
  export type DonorDonationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    /**
     * Filter, which DonorDonation to fetch.
     */
    where?: DonorDonationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorDonations to fetch.
     */
    orderBy?: DonorDonationOrderByWithRelationInput | DonorDonationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorDonations.
     */
    cursor?: DonorDonationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorDonations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorDonations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorDonations.
     */
    distinct?: DonorDonationScalarFieldEnum | DonorDonationScalarFieldEnum[]
  }

  /**
   * DonorDonation findFirstOrThrow
   */
  export type DonorDonationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    /**
     * Filter, which DonorDonation to fetch.
     */
    where?: DonorDonationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorDonations to fetch.
     */
    orderBy?: DonorDonationOrderByWithRelationInput | DonorDonationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorDonations.
     */
    cursor?: DonorDonationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorDonations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorDonations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorDonations.
     */
    distinct?: DonorDonationScalarFieldEnum | DonorDonationScalarFieldEnum[]
  }

  /**
   * DonorDonation findMany
   */
  export type DonorDonationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    /**
     * Filter, which DonorDonations to fetch.
     */
    where?: DonorDonationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorDonations to fetch.
     */
    orderBy?: DonorDonationOrderByWithRelationInput | DonorDonationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DonorDonations.
     */
    cursor?: DonorDonationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorDonations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorDonations.
     */
    skip?: number
    distinct?: DonorDonationScalarFieldEnum | DonorDonationScalarFieldEnum[]
  }

  /**
   * DonorDonation create
   */
  export type DonorDonationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    /**
     * The data needed to create a DonorDonation.
     */
    data: XOR<DonorDonationCreateInput, DonorDonationUncheckedCreateInput>
  }

  /**
   * DonorDonation createMany
   */
  export type DonorDonationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DonorDonations.
     */
    data: DonorDonationCreateManyInput | DonorDonationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DonorDonation update
   */
  export type DonorDonationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    /**
     * The data needed to update a DonorDonation.
     */
    data: XOR<DonorDonationUpdateInput, DonorDonationUncheckedUpdateInput>
    /**
     * Choose, which DonorDonation to update.
     */
    where: DonorDonationWhereUniqueInput
  }

  /**
   * DonorDonation updateMany
   */
  export type DonorDonationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DonorDonations.
     */
    data: XOR<DonorDonationUpdateManyMutationInput, DonorDonationUncheckedUpdateManyInput>
    /**
     * Filter which DonorDonations to update
     */
    where?: DonorDonationWhereInput
    /**
     * Limit how many DonorDonations to update.
     */
    limit?: number
  }

  /**
   * DonorDonation upsert
   */
  export type DonorDonationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    /**
     * The filter to search for the DonorDonation to update in case it exists.
     */
    where: DonorDonationWhereUniqueInput
    /**
     * In case the DonorDonation found by the `where` argument doesn't exist, create a new DonorDonation with this data.
     */
    create: XOR<DonorDonationCreateInput, DonorDonationUncheckedCreateInput>
    /**
     * In case the DonorDonation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DonorDonationUpdateInput, DonorDonationUncheckedUpdateInput>
  }

  /**
   * DonorDonation delete
   */
  export type DonorDonationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
    /**
     * Filter which DonorDonation to delete.
     */
    where: DonorDonationWhereUniqueInput
  }

  /**
   * DonorDonation deleteMany
   */
  export type DonorDonationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorDonations to delete
     */
    where?: DonorDonationWhereInput
    /**
     * Limit how many DonorDonations to delete.
     */
    limit?: number
  }

  /**
   * DonorDonation without action
   */
  export type DonorDonationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorDonation
     */
    select?: DonorDonationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorDonation
     */
    omit?: DonorDonationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorDonationInclude<ExtArgs> | null
  }


  /**
   * Model DonorTag
   */

  export type AggregateDonorTag = {
    _count: DonorTagCountAggregateOutputType | null
    _min: DonorTagMinAggregateOutputType | null
    _max: DonorTagMaxAggregateOutputType | null
  }

  export type DonorTagMinAggregateOutputType = {
    donor_id: string | null
    tag_id: string | null
    created_at: Date | null
  }

  export type DonorTagMaxAggregateOutputType = {
    donor_id: string | null
    tag_id: string | null
    created_at: Date | null
  }

  export type DonorTagCountAggregateOutputType = {
    donor_id: number
    tag_id: number
    created_at: number
    _all: number
  }


  export type DonorTagMinAggregateInputType = {
    donor_id?: true
    tag_id?: true
    created_at?: true
  }

  export type DonorTagMaxAggregateInputType = {
    donor_id?: true
    tag_id?: true
    created_at?: true
  }

  export type DonorTagCountAggregateInputType = {
    donor_id?: true
    tag_id?: true
    created_at?: true
    _all?: true
  }

  export type DonorTagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorTag to aggregate.
     */
    where?: DonorTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorTags to fetch.
     */
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DonorTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DonorTags
    **/
    _count?: true | DonorTagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonorTagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonorTagMaxAggregateInputType
  }

  export type GetDonorTagAggregateType<T extends DonorTagAggregateArgs> = {
        [P in keyof T & keyof AggregateDonorTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonorTag[P]>
      : GetScalarType<T[P], AggregateDonorTag[P]>
  }




  export type DonorTagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorTagWhereInput
    orderBy?: DonorTagOrderByWithAggregationInput | DonorTagOrderByWithAggregationInput[]
    by: DonorTagScalarFieldEnum[] | DonorTagScalarFieldEnum
    having?: DonorTagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonorTagCountAggregateInputType | true
    _min?: DonorTagMinAggregateInputType
    _max?: DonorTagMaxAggregateInputType
  }

  export type DonorTagGroupByOutputType = {
    donor_id: string
    tag_id: string
    created_at: Date
    _count: DonorTagCountAggregateOutputType | null
    _min: DonorTagMinAggregateOutputType | null
    _max: DonorTagMaxAggregateOutputType | null
  }

  type GetDonorTagGroupByPayload<T extends DonorTagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonorTagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonorTagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonorTagGroupByOutputType[P]>
            : GetScalarType<T[P], DonorTagGroupByOutputType[P]>
        }
      >
    >


  export type DonorTagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    donor_id?: boolean
    tag_id?: boolean
    created_at?: boolean
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donorTag"]>



  export type DonorTagSelectScalar = {
    donor_id?: boolean
    tag_id?: boolean
    created_at?: boolean
  }

  export type DonorTagOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"donor_id" | "tag_id" | "created_at", ExtArgs["result"]["donorTag"]>
  export type DonorTagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }

  export type $DonorTagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DonorTag"
    objects: {
      donor: Prisma.$DonorPayload<ExtArgs>
      tag: Prisma.$TagPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      donor_id: string
      tag_id: string
      created_at: Date
    }, ExtArgs["result"]["donorTag"]>
    composites: {}
  }

  type DonorTagGetPayload<S extends boolean | null | undefined | DonorTagDefaultArgs> = $Result.GetResult<Prisma.$DonorTagPayload, S>

  type DonorTagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DonorTagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonorTagCountAggregateInputType | true
    }

  export interface DonorTagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DonorTag'], meta: { name: 'DonorTag' } }
    /**
     * Find zero or one DonorTag that matches the filter.
     * @param {DonorTagFindUniqueArgs} args - Arguments to find a DonorTag
     * @example
     * // Get one DonorTag
     * const donorTag = await prisma.donorTag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DonorTagFindUniqueArgs>(args: SelectSubset<T, DonorTagFindUniqueArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one DonorTag that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DonorTagFindUniqueOrThrowArgs} args - Arguments to find a DonorTag
     * @example
     * // Get one DonorTag
     * const donorTag = await prisma.donorTag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DonorTagFindUniqueOrThrowArgs>(args: SelectSubset<T, DonorTagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first DonorTag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagFindFirstArgs} args - Arguments to find a DonorTag
     * @example
     * // Get one DonorTag
     * const donorTag = await prisma.donorTag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DonorTagFindFirstArgs>(args?: SelectSubset<T, DonorTagFindFirstArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first DonorTag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagFindFirstOrThrowArgs} args - Arguments to find a DonorTag
     * @example
     * // Get one DonorTag
     * const donorTag = await prisma.donorTag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DonorTagFindFirstOrThrowArgs>(args?: SelectSubset<T, DonorTagFindFirstOrThrowArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more DonorTags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DonorTags
     * const donorTags = await prisma.donorTag.findMany()
     * 
     * // Get first 10 DonorTags
     * const donorTags = await prisma.donorTag.findMany({ take: 10 })
     * 
     * // Only select the `donor_id`
     * const donorTagWithDonor_idOnly = await prisma.donorTag.findMany({ select: { donor_id: true } })
     * 
     */
    findMany<T extends DonorTagFindManyArgs>(args?: SelectSubset<T, DonorTagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a DonorTag.
     * @param {DonorTagCreateArgs} args - Arguments to create a DonorTag.
     * @example
     * // Create one DonorTag
     * const DonorTag = await prisma.donorTag.create({
     *   data: {
     *     // ... data to create a DonorTag
     *   }
     * })
     * 
     */
    create<T extends DonorTagCreateArgs>(args: SelectSubset<T, DonorTagCreateArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many DonorTags.
     * @param {DonorTagCreateManyArgs} args - Arguments to create many DonorTags.
     * @example
     * // Create many DonorTags
     * const donorTag = await prisma.donorTag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DonorTagCreateManyArgs>(args?: SelectSubset<T, DonorTagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DonorTag.
     * @param {DonorTagDeleteArgs} args - Arguments to delete one DonorTag.
     * @example
     * // Delete one DonorTag
     * const DonorTag = await prisma.donorTag.delete({
     *   where: {
     *     // ... filter to delete one DonorTag
     *   }
     * })
     * 
     */
    delete<T extends DonorTagDeleteArgs>(args: SelectSubset<T, DonorTagDeleteArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one DonorTag.
     * @param {DonorTagUpdateArgs} args - Arguments to update one DonorTag.
     * @example
     * // Update one DonorTag
     * const donorTag = await prisma.donorTag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DonorTagUpdateArgs>(args: SelectSubset<T, DonorTagUpdateArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more DonorTags.
     * @param {DonorTagDeleteManyArgs} args - Arguments to filter DonorTags to delete.
     * @example
     * // Delete a few DonorTags
     * const { count } = await prisma.donorTag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DonorTagDeleteManyArgs>(args?: SelectSubset<T, DonorTagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DonorTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DonorTags
     * const donorTag = await prisma.donorTag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DonorTagUpdateManyArgs>(args: SelectSubset<T, DonorTagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DonorTag.
     * @param {DonorTagUpsertArgs} args - Arguments to update or create a DonorTag.
     * @example
     * // Update or create a DonorTag
     * const donorTag = await prisma.donorTag.upsert({
     *   create: {
     *     // ... data to create a DonorTag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DonorTag we want to update
     *   }
     * })
     */
    upsert<T extends DonorTagUpsertArgs>(args: SelectSubset<T, DonorTagUpsertArgs<ExtArgs>>): Prisma__DonorTagClient<$Result.GetResult<Prisma.$DonorTagPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of DonorTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagCountArgs} args - Arguments to filter DonorTags to count.
     * @example
     * // Count the number of DonorTags
     * const count = await prisma.donorTag.count({
     *   where: {
     *     // ... the filter for the DonorTags we want to count
     *   }
     * })
    **/
    count<T extends DonorTagCountArgs>(
      args?: Subset<T, DonorTagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonorTagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DonorTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonorTagAggregateArgs>(args: Subset<T, DonorTagAggregateArgs>): Prisma.PrismaPromise<GetDonorTagAggregateType<T>>

    /**
     * Group by DonorTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorTagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DonorTagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DonorTagGroupByArgs['orderBy'] }
        : { orderBy?: DonorTagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DonorTagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonorTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DonorTag model
   */
  readonly fields: DonorTagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DonorTag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DonorTagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donor<T extends DonorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DonorDefaultArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    tag<T extends TagDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TagDefaultArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DonorTag model
   */ 
  interface DonorTagFieldRefs {
    readonly donor_id: FieldRef<"DonorTag", 'String'>
    readonly tag_id: FieldRef<"DonorTag", 'String'>
    readonly created_at: FieldRef<"DonorTag", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DonorTag findUnique
   */
  export type DonorTagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTag to fetch.
     */
    where: DonorTagWhereUniqueInput
  }

  /**
   * DonorTag findUniqueOrThrow
   */
  export type DonorTagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTag to fetch.
     */
    where: DonorTagWhereUniqueInput
  }

  /**
   * DonorTag findFirst
   */
  export type DonorTagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTag to fetch.
     */
    where?: DonorTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorTags to fetch.
     */
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorTags.
     */
    cursor?: DonorTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorTags.
     */
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * DonorTag findFirstOrThrow
   */
  export type DonorTagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTag to fetch.
     */
    where?: DonorTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorTags to fetch.
     */
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorTags.
     */
    cursor?: DonorTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorTags.
     */
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * DonorTag findMany
   */
  export type DonorTagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter, which DonorTags to fetch.
     */
    where?: DonorTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorTags to fetch.
     */
    orderBy?: DonorTagOrderByWithRelationInput | DonorTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DonorTags.
     */
    cursor?: DonorTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorTags.
     */
    skip?: number
    distinct?: DonorTagScalarFieldEnum | DonorTagScalarFieldEnum[]
  }

  /**
   * DonorTag create
   */
  export type DonorTagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * The data needed to create a DonorTag.
     */
    data: XOR<DonorTagCreateInput, DonorTagUncheckedCreateInput>
  }

  /**
   * DonorTag createMany
   */
  export type DonorTagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DonorTags.
     */
    data: DonorTagCreateManyInput | DonorTagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DonorTag update
   */
  export type DonorTagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * The data needed to update a DonorTag.
     */
    data: XOR<DonorTagUpdateInput, DonorTagUncheckedUpdateInput>
    /**
     * Choose, which DonorTag to update.
     */
    where: DonorTagWhereUniqueInput
  }

  /**
   * DonorTag updateMany
   */
  export type DonorTagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DonorTags.
     */
    data: XOR<DonorTagUpdateManyMutationInput, DonorTagUncheckedUpdateManyInput>
    /**
     * Filter which DonorTags to update
     */
    where?: DonorTagWhereInput
    /**
     * Limit how many DonorTags to update.
     */
    limit?: number
  }

  /**
   * DonorTag upsert
   */
  export type DonorTagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * The filter to search for the DonorTag to update in case it exists.
     */
    where: DonorTagWhereUniqueInput
    /**
     * In case the DonorTag found by the `where` argument doesn't exist, create a new DonorTag with this data.
     */
    create: XOR<DonorTagCreateInput, DonorTagUncheckedCreateInput>
    /**
     * In case the DonorTag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DonorTagUpdateInput, DonorTagUncheckedUpdateInput>
  }

  /**
   * DonorTag delete
   */
  export type DonorTagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
    /**
     * Filter which DonorTag to delete.
     */
    where: DonorTagWhereUniqueInput
  }

  /**
   * DonorTag deleteMany
   */
  export type DonorTagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorTags to delete
     */
    where?: DonorTagWhereInput
    /**
     * Limit how many DonorTags to delete.
     */
    limit?: number
  }

  /**
   * DonorTag without action
   */
  export type DonorTagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorTag
     */
    select?: DonorTagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorTag
     */
    omit?: DonorTagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorTagInclude<ExtArgs> | null
  }


  /**
   * Model InterestDomain
   */

  export type AggregateInterestDomain = {
    _count: InterestDomainCountAggregateOutputType | null
    _min: InterestDomainMinAggregateOutputType | null
    _max: InterestDomainMaxAggregateOutputType | null
  }

  export type InterestDomainMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type InterestDomainMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type InterestDomainCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type InterestDomainMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type InterestDomainMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type InterestDomainCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type InterestDomainAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InterestDomain to aggregate.
     */
    where?: InterestDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InterestDomains to fetch.
     */
    orderBy?: InterestDomainOrderByWithRelationInput | InterestDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InterestDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InterestDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InterestDomains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InterestDomains
    **/
    _count?: true | InterestDomainCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InterestDomainMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InterestDomainMaxAggregateInputType
  }

  export type GetInterestDomainAggregateType<T extends InterestDomainAggregateArgs> = {
        [P in keyof T & keyof AggregateInterestDomain]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInterestDomain[P]>
      : GetScalarType<T[P], AggregateInterestDomain[P]>
  }




  export type InterestDomainGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InterestDomainWhereInput
    orderBy?: InterestDomainOrderByWithAggregationInput | InterestDomainOrderByWithAggregationInput[]
    by: InterestDomainScalarFieldEnum[] | InterestDomainScalarFieldEnum
    having?: InterestDomainScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InterestDomainCountAggregateInputType | true
    _min?: InterestDomainMinAggregateInputType
    _max?: InterestDomainMaxAggregateInputType
  }

  export type InterestDomainGroupByOutputType = {
    id: string
    name: string
    description: string | null
    created_at: Date
    updated_at: Date
    _count: InterestDomainCountAggregateOutputType | null
    _min: InterestDomainMinAggregateOutputType | null
    _max: InterestDomainMaxAggregateOutputType | null
  }

  type GetInterestDomainGroupByPayload<T extends InterestDomainGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InterestDomainGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InterestDomainGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InterestDomainGroupByOutputType[P]>
            : GetScalarType<T[P], InterestDomainGroupByOutputType[P]>
        }
      >
    >


  export type InterestDomainSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    donors?: boolean | InterestDomain$donorsArgs<ExtArgs>
    _count?: boolean | InterestDomainCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["interestDomain"]>



  export type InterestDomainSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type InterestDomainOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "created_at" | "updated_at", ExtArgs["result"]["interestDomain"]>
  export type InterestDomainInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donors?: boolean | InterestDomain$donorsArgs<ExtArgs>
    _count?: boolean | InterestDomainCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $InterestDomainPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InterestDomain"
    objects: {
      donors: Prisma.$DonorInterestDomainPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["interestDomain"]>
    composites: {}
  }

  type InterestDomainGetPayload<S extends boolean | null | undefined | InterestDomainDefaultArgs> = $Result.GetResult<Prisma.$InterestDomainPayload, S>

  type InterestDomainCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InterestDomainFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InterestDomainCountAggregateInputType | true
    }

  export interface InterestDomainDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InterestDomain'], meta: { name: 'InterestDomain' } }
    /**
     * Find zero or one InterestDomain that matches the filter.
     * @param {InterestDomainFindUniqueArgs} args - Arguments to find a InterestDomain
     * @example
     * // Get one InterestDomain
     * const interestDomain = await prisma.interestDomain.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InterestDomainFindUniqueArgs>(args: SelectSubset<T, InterestDomainFindUniqueArgs<ExtArgs>>): Prisma__InterestDomainClient<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one InterestDomain that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InterestDomainFindUniqueOrThrowArgs} args - Arguments to find a InterestDomain
     * @example
     * // Get one InterestDomain
     * const interestDomain = await prisma.interestDomain.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InterestDomainFindUniqueOrThrowArgs>(args: SelectSubset<T, InterestDomainFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InterestDomainClient<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first InterestDomain that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterestDomainFindFirstArgs} args - Arguments to find a InterestDomain
     * @example
     * // Get one InterestDomain
     * const interestDomain = await prisma.interestDomain.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InterestDomainFindFirstArgs>(args?: SelectSubset<T, InterestDomainFindFirstArgs<ExtArgs>>): Prisma__InterestDomainClient<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first InterestDomain that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterestDomainFindFirstOrThrowArgs} args - Arguments to find a InterestDomain
     * @example
     * // Get one InterestDomain
     * const interestDomain = await prisma.interestDomain.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InterestDomainFindFirstOrThrowArgs>(args?: SelectSubset<T, InterestDomainFindFirstOrThrowArgs<ExtArgs>>): Prisma__InterestDomainClient<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more InterestDomains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterestDomainFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InterestDomains
     * const interestDomains = await prisma.interestDomain.findMany()
     * 
     * // Get first 10 InterestDomains
     * const interestDomains = await prisma.interestDomain.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const interestDomainWithIdOnly = await prisma.interestDomain.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InterestDomainFindManyArgs>(args?: SelectSubset<T, InterestDomainFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a InterestDomain.
     * @param {InterestDomainCreateArgs} args - Arguments to create a InterestDomain.
     * @example
     * // Create one InterestDomain
     * const InterestDomain = await prisma.interestDomain.create({
     *   data: {
     *     // ... data to create a InterestDomain
     *   }
     * })
     * 
     */
    create<T extends InterestDomainCreateArgs>(args: SelectSubset<T, InterestDomainCreateArgs<ExtArgs>>): Prisma__InterestDomainClient<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many InterestDomains.
     * @param {InterestDomainCreateManyArgs} args - Arguments to create many InterestDomains.
     * @example
     * // Create many InterestDomains
     * const interestDomain = await prisma.interestDomain.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InterestDomainCreateManyArgs>(args?: SelectSubset<T, InterestDomainCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a InterestDomain.
     * @param {InterestDomainDeleteArgs} args - Arguments to delete one InterestDomain.
     * @example
     * // Delete one InterestDomain
     * const InterestDomain = await prisma.interestDomain.delete({
     *   where: {
     *     // ... filter to delete one InterestDomain
     *   }
     * })
     * 
     */
    delete<T extends InterestDomainDeleteArgs>(args: SelectSubset<T, InterestDomainDeleteArgs<ExtArgs>>): Prisma__InterestDomainClient<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one InterestDomain.
     * @param {InterestDomainUpdateArgs} args - Arguments to update one InterestDomain.
     * @example
     * // Update one InterestDomain
     * const interestDomain = await prisma.interestDomain.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InterestDomainUpdateArgs>(args: SelectSubset<T, InterestDomainUpdateArgs<ExtArgs>>): Prisma__InterestDomainClient<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more InterestDomains.
     * @param {InterestDomainDeleteManyArgs} args - Arguments to filter InterestDomains to delete.
     * @example
     * // Delete a few InterestDomains
     * const { count } = await prisma.interestDomain.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InterestDomainDeleteManyArgs>(args?: SelectSubset<T, InterestDomainDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InterestDomains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterestDomainUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InterestDomains
     * const interestDomain = await prisma.interestDomain.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InterestDomainUpdateManyArgs>(args: SelectSubset<T, InterestDomainUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one InterestDomain.
     * @param {InterestDomainUpsertArgs} args - Arguments to update or create a InterestDomain.
     * @example
     * // Update or create a InterestDomain
     * const interestDomain = await prisma.interestDomain.upsert({
     *   create: {
     *     // ... data to create a InterestDomain
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InterestDomain we want to update
     *   }
     * })
     */
    upsert<T extends InterestDomainUpsertArgs>(args: SelectSubset<T, InterestDomainUpsertArgs<ExtArgs>>): Prisma__InterestDomainClient<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of InterestDomains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterestDomainCountArgs} args - Arguments to filter InterestDomains to count.
     * @example
     * // Count the number of InterestDomains
     * const count = await prisma.interestDomain.count({
     *   where: {
     *     // ... the filter for the InterestDomains we want to count
     *   }
     * })
    **/
    count<T extends InterestDomainCountArgs>(
      args?: Subset<T, InterestDomainCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InterestDomainCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InterestDomain.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterestDomainAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InterestDomainAggregateArgs>(args: Subset<T, InterestDomainAggregateArgs>): Prisma.PrismaPromise<GetInterestDomainAggregateType<T>>

    /**
     * Group by InterestDomain.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterestDomainGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InterestDomainGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InterestDomainGroupByArgs['orderBy'] }
        : { orderBy?: InterestDomainGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InterestDomainGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInterestDomainGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InterestDomain model
   */
  readonly fields: InterestDomainFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InterestDomain.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InterestDomainClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donors<T extends InterestDomain$donorsArgs<ExtArgs> = {}>(args?: Subset<T, InterestDomain$donorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InterestDomain model
   */ 
  interface InterestDomainFieldRefs {
    readonly id: FieldRef<"InterestDomain", 'String'>
    readonly name: FieldRef<"InterestDomain", 'String'>
    readonly description: FieldRef<"InterestDomain", 'String'>
    readonly created_at: FieldRef<"InterestDomain", 'DateTime'>
    readonly updated_at: FieldRef<"InterestDomain", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InterestDomain findUnique
   */
  export type InterestDomainFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which InterestDomain to fetch.
     */
    where: InterestDomainWhereUniqueInput
  }

  /**
   * InterestDomain findUniqueOrThrow
   */
  export type InterestDomainFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which InterestDomain to fetch.
     */
    where: InterestDomainWhereUniqueInput
  }

  /**
   * InterestDomain findFirst
   */
  export type InterestDomainFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which InterestDomain to fetch.
     */
    where?: InterestDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InterestDomains to fetch.
     */
    orderBy?: InterestDomainOrderByWithRelationInput | InterestDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InterestDomains.
     */
    cursor?: InterestDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InterestDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InterestDomains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InterestDomains.
     */
    distinct?: InterestDomainScalarFieldEnum | InterestDomainScalarFieldEnum[]
  }

  /**
   * InterestDomain findFirstOrThrow
   */
  export type InterestDomainFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which InterestDomain to fetch.
     */
    where?: InterestDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InterestDomains to fetch.
     */
    orderBy?: InterestDomainOrderByWithRelationInput | InterestDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InterestDomains.
     */
    cursor?: InterestDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InterestDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InterestDomains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InterestDomains.
     */
    distinct?: InterestDomainScalarFieldEnum | InterestDomainScalarFieldEnum[]
  }

  /**
   * InterestDomain findMany
   */
  export type InterestDomainFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which InterestDomains to fetch.
     */
    where?: InterestDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InterestDomains to fetch.
     */
    orderBy?: InterestDomainOrderByWithRelationInput | InterestDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InterestDomains.
     */
    cursor?: InterestDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InterestDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InterestDomains.
     */
    skip?: number
    distinct?: InterestDomainScalarFieldEnum | InterestDomainScalarFieldEnum[]
  }

  /**
   * InterestDomain create
   */
  export type InterestDomainCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
    /**
     * The data needed to create a InterestDomain.
     */
    data: XOR<InterestDomainCreateInput, InterestDomainUncheckedCreateInput>
  }

  /**
   * InterestDomain createMany
   */
  export type InterestDomainCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InterestDomains.
     */
    data: InterestDomainCreateManyInput | InterestDomainCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InterestDomain update
   */
  export type InterestDomainUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
    /**
     * The data needed to update a InterestDomain.
     */
    data: XOR<InterestDomainUpdateInput, InterestDomainUncheckedUpdateInput>
    /**
     * Choose, which InterestDomain to update.
     */
    where: InterestDomainWhereUniqueInput
  }

  /**
   * InterestDomain updateMany
   */
  export type InterestDomainUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InterestDomains.
     */
    data: XOR<InterestDomainUpdateManyMutationInput, InterestDomainUncheckedUpdateManyInput>
    /**
     * Filter which InterestDomains to update
     */
    where?: InterestDomainWhereInput
    /**
     * Limit how many InterestDomains to update.
     */
    limit?: number
  }

  /**
   * InterestDomain upsert
   */
  export type InterestDomainUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
    /**
     * The filter to search for the InterestDomain to update in case it exists.
     */
    where: InterestDomainWhereUniqueInput
    /**
     * In case the InterestDomain found by the `where` argument doesn't exist, create a new InterestDomain with this data.
     */
    create: XOR<InterestDomainCreateInput, InterestDomainUncheckedCreateInput>
    /**
     * In case the InterestDomain was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InterestDomainUpdateInput, InterestDomainUncheckedUpdateInput>
  }

  /**
   * InterestDomain delete
   */
  export type InterestDomainDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
    /**
     * Filter which InterestDomain to delete.
     */
    where: InterestDomainWhereUniqueInput
  }

  /**
   * InterestDomain deleteMany
   */
  export type InterestDomainDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InterestDomains to delete
     */
    where?: InterestDomainWhereInput
    /**
     * Limit how many InterestDomains to delete.
     */
    limit?: number
  }

  /**
   * InterestDomain.donors
   */
  export type InterestDomain$donorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    where?: DonorInterestDomainWhereInput
    orderBy?: DonorInterestDomainOrderByWithRelationInput | DonorInterestDomainOrderByWithRelationInput[]
    cursor?: DonorInterestDomainWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DonorInterestDomainScalarFieldEnum | DonorInterestDomainScalarFieldEnum[]
  }

  /**
   * InterestDomain without action
   */
  export type InterestDomainDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterestDomain
     */
    select?: InterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InterestDomain
     */
    omit?: InterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterestDomainInclude<ExtArgs> | null
  }


  /**
   * Model DonorInterestDomain
   */

  export type AggregateDonorInterestDomain = {
    _count: DonorInterestDomainCountAggregateOutputType | null
    _avg: DonorInterestDomainAvgAggregateOutputType | null
    _sum: DonorInterestDomainSumAggregateOutputType | null
    _min: DonorInterestDomainMinAggregateOutputType | null
    _max: DonorInterestDomainMaxAggregateOutputType | null
  }

  export type DonorInterestDomainAvgAggregateOutputType = {
    level: number | null
  }

  export type DonorInterestDomainSumAggregateOutputType = {
    level: number | null
  }

  export type DonorInterestDomainMinAggregateOutputType = {
    donor_id: string | null
    interest_domain_id: string | null
    level: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonorInterestDomainMaxAggregateOutputType = {
    donor_id: string | null
    interest_domain_id: string | null
    level: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DonorInterestDomainCountAggregateOutputType = {
    donor_id: number
    interest_domain_id: number
    level: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type DonorInterestDomainAvgAggregateInputType = {
    level?: true
  }

  export type DonorInterestDomainSumAggregateInputType = {
    level?: true
  }

  export type DonorInterestDomainMinAggregateInputType = {
    donor_id?: true
    interest_domain_id?: true
    level?: true
    created_at?: true
    updated_at?: true
  }

  export type DonorInterestDomainMaxAggregateInputType = {
    donor_id?: true
    interest_domain_id?: true
    level?: true
    created_at?: true
    updated_at?: true
  }

  export type DonorInterestDomainCountAggregateInputType = {
    donor_id?: true
    interest_domain_id?: true
    level?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type DonorInterestDomainAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorInterestDomain to aggregate.
     */
    where?: DonorInterestDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorInterestDomains to fetch.
     */
    orderBy?: DonorInterestDomainOrderByWithRelationInput | DonorInterestDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DonorInterestDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorInterestDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorInterestDomains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DonorInterestDomains
    **/
    _count?: true | DonorInterestDomainCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DonorInterestDomainAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DonorInterestDomainSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DonorInterestDomainMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DonorInterestDomainMaxAggregateInputType
  }

  export type GetDonorInterestDomainAggregateType<T extends DonorInterestDomainAggregateArgs> = {
        [P in keyof T & keyof AggregateDonorInterestDomain]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDonorInterestDomain[P]>
      : GetScalarType<T[P], AggregateDonorInterestDomain[P]>
  }




  export type DonorInterestDomainGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DonorInterestDomainWhereInput
    orderBy?: DonorInterestDomainOrderByWithAggregationInput | DonorInterestDomainOrderByWithAggregationInput[]
    by: DonorInterestDomainScalarFieldEnum[] | DonorInterestDomainScalarFieldEnum
    having?: DonorInterestDomainScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DonorInterestDomainCountAggregateInputType | true
    _avg?: DonorInterestDomainAvgAggregateInputType
    _sum?: DonorInterestDomainSumAggregateInputType
    _min?: DonorInterestDomainMinAggregateInputType
    _max?: DonorInterestDomainMaxAggregateInputType
  }

  export type DonorInterestDomainGroupByOutputType = {
    donor_id: string
    interest_domain_id: string
    level: number
    created_at: Date
    updated_at: Date
    _count: DonorInterestDomainCountAggregateOutputType | null
    _avg: DonorInterestDomainAvgAggregateOutputType | null
    _sum: DonorInterestDomainSumAggregateOutputType | null
    _min: DonorInterestDomainMinAggregateOutputType | null
    _max: DonorInterestDomainMaxAggregateOutputType | null
  }

  type GetDonorInterestDomainGroupByPayload<T extends DonorInterestDomainGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DonorInterestDomainGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DonorInterestDomainGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DonorInterestDomainGroupByOutputType[P]>
            : GetScalarType<T[P], DonorInterestDomainGroupByOutputType[P]>
        }
      >
    >


  export type DonorInterestDomainSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    donor_id?: boolean
    interest_domain_id?: boolean
    level?: boolean
    created_at?: boolean
    updated_at?: boolean
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    interest_domain?: boolean | InterestDomainDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["donorInterestDomain"]>



  export type DonorInterestDomainSelectScalar = {
    donor_id?: boolean
    interest_domain_id?: boolean
    level?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type DonorInterestDomainOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"donor_id" | "interest_domain_id" | "level" | "created_at" | "updated_at", ExtArgs["result"]["donorInterestDomain"]>
  export type DonorInterestDomainInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donor?: boolean | DonorDefaultArgs<ExtArgs>
    interest_domain?: boolean | InterestDomainDefaultArgs<ExtArgs>
  }

  export type $DonorInterestDomainPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DonorInterestDomain"
    objects: {
      donor: Prisma.$DonorPayload<ExtArgs>
      interest_domain: Prisma.$InterestDomainPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      donor_id: string
      interest_domain_id: string
      level: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["donorInterestDomain"]>
    composites: {}
  }

  type DonorInterestDomainGetPayload<S extends boolean | null | undefined | DonorInterestDomainDefaultArgs> = $Result.GetResult<Prisma.$DonorInterestDomainPayload, S>

  type DonorInterestDomainCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DonorInterestDomainFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DonorInterestDomainCountAggregateInputType | true
    }

  export interface DonorInterestDomainDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DonorInterestDomain'], meta: { name: 'DonorInterestDomain' } }
    /**
     * Find zero or one DonorInterestDomain that matches the filter.
     * @param {DonorInterestDomainFindUniqueArgs} args - Arguments to find a DonorInterestDomain
     * @example
     * // Get one DonorInterestDomain
     * const donorInterestDomain = await prisma.donorInterestDomain.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DonorInterestDomainFindUniqueArgs>(args: SelectSubset<T, DonorInterestDomainFindUniqueArgs<ExtArgs>>): Prisma__DonorInterestDomainClient<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one DonorInterestDomain that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DonorInterestDomainFindUniqueOrThrowArgs} args - Arguments to find a DonorInterestDomain
     * @example
     * // Get one DonorInterestDomain
     * const donorInterestDomain = await prisma.donorInterestDomain.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DonorInterestDomainFindUniqueOrThrowArgs>(args: SelectSubset<T, DonorInterestDomainFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DonorInterestDomainClient<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first DonorInterestDomain that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorInterestDomainFindFirstArgs} args - Arguments to find a DonorInterestDomain
     * @example
     * // Get one DonorInterestDomain
     * const donorInterestDomain = await prisma.donorInterestDomain.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DonorInterestDomainFindFirstArgs>(args?: SelectSubset<T, DonorInterestDomainFindFirstArgs<ExtArgs>>): Prisma__DonorInterestDomainClient<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first DonorInterestDomain that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorInterestDomainFindFirstOrThrowArgs} args - Arguments to find a DonorInterestDomain
     * @example
     * // Get one DonorInterestDomain
     * const donorInterestDomain = await prisma.donorInterestDomain.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DonorInterestDomainFindFirstOrThrowArgs>(args?: SelectSubset<T, DonorInterestDomainFindFirstOrThrowArgs<ExtArgs>>): Prisma__DonorInterestDomainClient<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more DonorInterestDomains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorInterestDomainFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DonorInterestDomains
     * const donorInterestDomains = await prisma.donorInterestDomain.findMany()
     * 
     * // Get first 10 DonorInterestDomains
     * const donorInterestDomains = await prisma.donorInterestDomain.findMany({ take: 10 })
     * 
     * // Only select the `donor_id`
     * const donorInterestDomainWithDonor_idOnly = await prisma.donorInterestDomain.findMany({ select: { donor_id: true } })
     * 
     */
    findMany<T extends DonorInterestDomainFindManyArgs>(args?: SelectSubset<T, DonorInterestDomainFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a DonorInterestDomain.
     * @param {DonorInterestDomainCreateArgs} args - Arguments to create a DonorInterestDomain.
     * @example
     * // Create one DonorInterestDomain
     * const DonorInterestDomain = await prisma.donorInterestDomain.create({
     *   data: {
     *     // ... data to create a DonorInterestDomain
     *   }
     * })
     * 
     */
    create<T extends DonorInterestDomainCreateArgs>(args: SelectSubset<T, DonorInterestDomainCreateArgs<ExtArgs>>): Prisma__DonorInterestDomainClient<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many DonorInterestDomains.
     * @param {DonorInterestDomainCreateManyArgs} args - Arguments to create many DonorInterestDomains.
     * @example
     * // Create many DonorInterestDomains
     * const donorInterestDomain = await prisma.donorInterestDomain.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DonorInterestDomainCreateManyArgs>(args?: SelectSubset<T, DonorInterestDomainCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DonorInterestDomain.
     * @param {DonorInterestDomainDeleteArgs} args - Arguments to delete one DonorInterestDomain.
     * @example
     * // Delete one DonorInterestDomain
     * const DonorInterestDomain = await prisma.donorInterestDomain.delete({
     *   where: {
     *     // ... filter to delete one DonorInterestDomain
     *   }
     * })
     * 
     */
    delete<T extends DonorInterestDomainDeleteArgs>(args: SelectSubset<T, DonorInterestDomainDeleteArgs<ExtArgs>>): Prisma__DonorInterestDomainClient<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one DonorInterestDomain.
     * @param {DonorInterestDomainUpdateArgs} args - Arguments to update one DonorInterestDomain.
     * @example
     * // Update one DonorInterestDomain
     * const donorInterestDomain = await prisma.donorInterestDomain.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DonorInterestDomainUpdateArgs>(args: SelectSubset<T, DonorInterestDomainUpdateArgs<ExtArgs>>): Prisma__DonorInterestDomainClient<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more DonorInterestDomains.
     * @param {DonorInterestDomainDeleteManyArgs} args - Arguments to filter DonorInterestDomains to delete.
     * @example
     * // Delete a few DonorInterestDomains
     * const { count } = await prisma.donorInterestDomain.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DonorInterestDomainDeleteManyArgs>(args?: SelectSubset<T, DonorInterestDomainDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DonorInterestDomains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorInterestDomainUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DonorInterestDomains
     * const donorInterestDomain = await prisma.donorInterestDomain.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DonorInterestDomainUpdateManyArgs>(args: SelectSubset<T, DonorInterestDomainUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DonorInterestDomain.
     * @param {DonorInterestDomainUpsertArgs} args - Arguments to update or create a DonorInterestDomain.
     * @example
     * // Update or create a DonorInterestDomain
     * const donorInterestDomain = await prisma.donorInterestDomain.upsert({
     *   create: {
     *     // ... data to create a DonorInterestDomain
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DonorInterestDomain we want to update
     *   }
     * })
     */
    upsert<T extends DonorInterestDomainUpsertArgs>(args: SelectSubset<T, DonorInterestDomainUpsertArgs<ExtArgs>>): Prisma__DonorInterestDomainClient<$Result.GetResult<Prisma.$DonorInterestDomainPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of DonorInterestDomains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorInterestDomainCountArgs} args - Arguments to filter DonorInterestDomains to count.
     * @example
     * // Count the number of DonorInterestDomains
     * const count = await prisma.donorInterestDomain.count({
     *   where: {
     *     // ... the filter for the DonorInterestDomains we want to count
     *   }
     * })
    **/
    count<T extends DonorInterestDomainCountArgs>(
      args?: Subset<T, DonorInterestDomainCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DonorInterestDomainCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DonorInterestDomain.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorInterestDomainAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DonorInterestDomainAggregateArgs>(args: Subset<T, DonorInterestDomainAggregateArgs>): Prisma.PrismaPromise<GetDonorInterestDomainAggregateType<T>>

    /**
     * Group by DonorInterestDomain.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DonorInterestDomainGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DonorInterestDomainGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DonorInterestDomainGroupByArgs['orderBy'] }
        : { orderBy?: DonorInterestDomainGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DonorInterestDomainGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDonorInterestDomainGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DonorInterestDomain model
   */
  readonly fields: DonorInterestDomainFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DonorInterestDomain.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DonorInterestDomainClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donor<T extends DonorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DonorDefaultArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    interest_domain<T extends InterestDomainDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InterestDomainDefaultArgs<ExtArgs>>): Prisma__InterestDomainClient<$Result.GetResult<Prisma.$InterestDomainPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DonorInterestDomain model
   */ 
  interface DonorInterestDomainFieldRefs {
    readonly donor_id: FieldRef<"DonorInterestDomain", 'String'>
    readonly interest_domain_id: FieldRef<"DonorInterestDomain", 'String'>
    readonly level: FieldRef<"DonorInterestDomain", 'Int'>
    readonly created_at: FieldRef<"DonorInterestDomain", 'DateTime'>
    readonly updated_at: FieldRef<"DonorInterestDomain", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DonorInterestDomain findUnique
   */
  export type DonorInterestDomainFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which DonorInterestDomain to fetch.
     */
    where: DonorInterestDomainWhereUniqueInput
  }

  /**
   * DonorInterestDomain findUniqueOrThrow
   */
  export type DonorInterestDomainFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which DonorInterestDomain to fetch.
     */
    where: DonorInterestDomainWhereUniqueInput
  }

  /**
   * DonorInterestDomain findFirst
   */
  export type DonorInterestDomainFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which DonorInterestDomain to fetch.
     */
    where?: DonorInterestDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorInterestDomains to fetch.
     */
    orderBy?: DonorInterestDomainOrderByWithRelationInput | DonorInterestDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorInterestDomains.
     */
    cursor?: DonorInterestDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorInterestDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorInterestDomains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorInterestDomains.
     */
    distinct?: DonorInterestDomainScalarFieldEnum | DonorInterestDomainScalarFieldEnum[]
  }

  /**
   * DonorInterestDomain findFirstOrThrow
   */
  export type DonorInterestDomainFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which DonorInterestDomain to fetch.
     */
    where?: DonorInterestDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorInterestDomains to fetch.
     */
    orderBy?: DonorInterestDomainOrderByWithRelationInput | DonorInterestDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DonorInterestDomains.
     */
    cursor?: DonorInterestDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorInterestDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorInterestDomains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DonorInterestDomains.
     */
    distinct?: DonorInterestDomainScalarFieldEnum | DonorInterestDomainScalarFieldEnum[]
  }

  /**
   * DonorInterestDomain findMany
   */
  export type DonorInterestDomainFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    /**
     * Filter, which DonorInterestDomains to fetch.
     */
    where?: DonorInterestDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DonorInterestDomains to fetch.
     */
    orderBy?: DonorInterestDomainOrderByWithRelationInput | DonorInterestDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DonorInterestDomains.
     */
    cursor?: DonorInterestDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DonorInterestDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DonorInterestDomains.
     */
    skip?: number
    distinct?: DonorInterestDomainScalarFieldEnum | DonorInterestDomainScalarFieldEnum[]
  }

  /**
   * DonorInterestDomain create
   */
  export type DonorInterestDomainCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    /**
     * The data needed to create a DonorInterestDomain.
     */
    data: XOR<DonorInterestDomainCreateInput, DonorInterestDomainUncheckedCreateInput>
  }

  /**
   * DonorInterestDomain createMany
   */
  export type DonorInterestDomainCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DonorInterestDomains.
     */
    data: DonorInterestDomainCreateManyInput | DonorInterestDomainCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DonorInterestDomain update
   */
  export type DonorInterestDomainUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    /**
     * The data needed to update a DonorInterestDomain.
     */
    data: XOR<DonorInterestDomainUpdateInput, DonorInterestDomainUncheckedUpdateInput>
    /**
     * Choose, which DonorInterestDomain to update.
     */
    where: DonorInterestDomainWhereUniqueInput
  }

  /**
   * DonorInterestDomain updateMany
   */
  export type DonorInterestDomainUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DonorInterestDomains.
     */
    data: XOR<DonorInterestDomainUpdateManyMutationInput, DonorInterestDomainUncheckedUpdateManyInput>
    /**
     * Filter which DonorInterestDomains to update
     */
    where?: DonorInterestDomainWhereInput
    /**
     * Limit how many DonorInterestDomains to update.
     */
    limit?: number
  }

  /**
   * DonorInterestDomain upsert
   */
  export type DonorInterestDomainUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    /**
     * The filter to search for the DonorInterestDomain to update in case it exists.
     */
    where: DonorInterestDomainWhereUniqueInput
    /**
     * In case the DonorInterestDomain found by the `where` argument doesn't exist, create a new DonorInterestDomain with this data.
     */
    create: XOR<DonorInterestDomainCreateInput, DonorInterestDomainUncheckedCreateInput>
    /**
     * In case the DonorInterestDomain was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DonorInterestDomainUpdateInput, DonorInterestDomainUncheckedUpdateInput>
  }

  /**
   * DonorInterestDomain delete
   */
  export type DonorInterestDomainDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
    /**
     * Filter which DonorInterestDomain to delete.
     */
    where: DonorInterestDomainWhereUniqueInput
  }

  /**
   * DonorInterestDomain deleteMany
   */
  export type DonorInterestDomainDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DonorInterestDomains to delete
     */
    where?: DonorInterestDomainWhereInput
    /**
     * Limit how many DonorInterestDomains to delete.
     */
    limit?: number
  }

  /**
   * DonorInterestDomain without action
   */
  export type DonorInterestDomainDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DonorInterestDomain
     */
    select?: DonorInterestDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DonorInterestDomain
     */
    omit?: DonorInterestDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DonorInterestDomainInclude<ExtArgs> | null
  }


  /**
   * Model Communication
   */

  export type AggregateCommunication = {
    _count: CommunicationCountAggregateOutputType | null
    _min: CommunicationMinAggregateOutputType | null
    _max: CommunicationMaxAggregateOutputType | null
  }

  export type CommunicationMinAggregateOutputType = {
    id: string | null
    donor_id: string | null
    type: string | null
    direction: string | null
    subject: string | null
    content: string | null
    status: string | null
    communication_date: Date | null
    response_required: boolean | null
    response_received: boolean | null
    response_date: Date | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CommunicationMaxAggregateOutputType = {
    id: string | null
    donor_id: string | null
    type: string | null
    direction: string | null
    subject: string | null
    content: string | null
    status: string | null
    communication_date: Date | null
    response_required: boolean | null
    response_received: boolean | null
    response_date: Date | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CommunicationCountAggregateOutputType = {
    id: number
    donor_id: number
    type: number
    direction: number
    subject: number
    content: number
    status: number
    communication_date: number
    response_required: number
    response_received: number
    response_date: number
    notes: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CommunicationMinAggregateInputType = {
    id?: true
    donor_id?: true
    type?: true
    direction?: true
    subject?: true
    content?: true
    status?: true
    communication_date?: true
    response_required?: true
    response_received?: true
    response_date?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type CommunicationMaxAggregateInputType = {
    id?: true
    donor_id?: true
    type?: true
    direction?: true
    subject?: true
    content?: true
    status?: true
    communication_date?: true
    response_required?: true
    response_received?: true
    response_date?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type CommunicationCountAggregateInputType = {
    id?: true
    donor_id?: true
    type?: true
    direction?: true
    subject?: true
    content?: true
    status?: true
    communication_date?: true
    response_required?: true
    response_received?: true
    response_date?: true
    notes?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CommunicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Communication to aggregate.
     */
    where?: CommunicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Communications to fetch.
     */
    orderBy?: CommunicationOrderByWithRelationInput | CommunicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommunicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Communications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Communications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Communications
    **/
    _count?: true | CommunicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunicationMaxAggregateInputType
  }

  export type GetCommunicationAggregateType<T extends CommunicationAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunication[P]>
      : GetScalarType<T[P], AggregateCommunication[P]>
  }




  export type CommunicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunicationWhereInput
    orderBy?: CommunicationOrderByWithAggregationInput | CommunicationOrderByWithAggregationInput[]
    by: CommunicationScalarFieldEnum[] | CommunicationScalarFieldEnum
    having?: CommunicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunicationCountAggregateInputType | true
    _min?: CommunicationMinAggregateInputType
    _max?: CommunicationMaxAggregateInputType
  }

  export type CommunicationGroupByOutputType = {
    id: string
    donor_id: string
    type: string
    direction: string
    subject: string | null
    content: string | null
    status: string
    communication_date: Date
    response_required: boolean
    response_received: boolean
    response_date: Date | null
    notes: string | null
    created_at: Date
    updated_at: Date
    _count: CommunicationCountAggregateOutputType | null
    _min: CommunicationMinAggregateOutputType | null
    _max: CommunicationMaxAggregateOutputType | null
  }

  type GetCommunicationGroupByPayload<T extends CommunicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunicationGroupByOutputType[P]>
            : GetScalarType<T[P], CommunicationGroupByOutputType[P]>
        }
      >
    >


  export type CommunicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    donor_id?: boolean
    type?: boolean
    direction?: boolean
    subject?: boolean
    content?: boolean
    status?: boolean
    communication_date?: boolean
    response_required?: boolean
    response_received?: boolean
    response_date?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    donor?: boolean | DonorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communication"]>



  export type CommunicationSelectScalar = {
    id?: boolean
    donor_id?: boolean
    type?: boolean
    direction?: boolean
    subject?: boolean
    content?: boolean
    status?: boolean
    communication_date?: boolean
    response_required?: boolean
    response_received?: boolean
    response_date?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type CommunicationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "donor_id" | "type" | "direction" | "subject" | "content" | "status" | "communication_date" | "response_required" | "response_received" | "response_date" | "notes" | "created_at" | "updated_at", ExtArgs["result"]["communication"]>
  export type CommunicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    donor?: boolean | DonorDefaultArgs<ExtArgs>
  }

  export type $CommunicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Communication"
    objects: {
      donor: Prisma.$DonorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      donor_id: string
      type: string
      direction: string
      subject: string | null
      content: string | null
      status: string
      communication_date: Date
      response_required: boolean
      response_received: boolean
      response_date: Date | null
      notes: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["communication"]>
    composites: {}
  }

  type CommunicationGetPayload<S extends boolean | null | undefined | CommunicationDefaultArgs> = $Result.GetResult<Prisma.$CommunicationPayload, S>

  type CommunicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommunicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommunicationCountAggregateInputType | true
    }

  export interface CommunicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Communication'], meta: { name: 'Communication' } }
    /**
     * Find zero or one Communication that matches the filter.
     * @param {CommunicationFindUniqueArgs} args - Arguments to find a Communication
     * @example
     * // Get one Communication
     * const communication = await prisma.communication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommunicationFindUniqueArgs>(args: SelectSubset<T, CommunicationFindUniqueArgs<ExtArgs>>): Prisma__CommunicationClient<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Communication that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommunicationFindUniqueOrThrowArgs} args - Arguments to find a Communication
     * @example
     * // Get one Communication
     * const communication = await prisma.communication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommunicationFindUniqueOrThrowArgs>(args: SelectSubset<T, CommunicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommunicationClient<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Communication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationFindFirstArgs} args - Arguments to find a Communication
     * @example
     * // Get one Communication
     * const communication = await prisma.communication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommunicationFindFirstArgs>(args?: SelectSubset<T, CommunicationFindFirstArgs<ExtArgs>>): Prisma__CommunicationClient<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Communication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationFindFirstOrThrowArgs} args - Arguments to find a Communication
     * @example
     * // Get one Communication
     * const communication = await prisma.communication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommunicationFindFirstOrThrowArgs>(args?: SelectSubset<T, CommunicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommunicationClient<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Communications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communications
     * const communications = await prisma.communication.findMany()
     * 
     * // Get first 10 Communications
     * const communications = await prisma.communication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const communicationWithIdOnly = await prisma.communication.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommunicationFindManyArgs>(args?: SelectSubset<T, CommunicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Communication.
     * @param {CommunicationCreateArgs} args - Arguments to create a Communication.
     * @example
     * // Create one Communication
     * const Communication = await prisma.communication.create({
     *   data: {
     *     // ... data to create a Communication
     *   }
     * })
     * 
     */
    create<T extends CommunicationCreateArgs>(args: SelectSubset<T, CommunicationCreateArgs<ExtArgs>>): Prisma__CommunicationClient<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Communications.
     * @param {CommunicationCreateManyArgs} args - Arguments to create many Communications.
     * @example
     * // Create many Communications
     * const communication = await prisma.communication.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommunicationCreateManyArgs>(args?: SelectSubset<T, CommunicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Communication.
     * @param {CommunicationDeleteArgs} args - Arguments to delete one Communication.
     * @example
     * // Delete one Communication
     * const Communication = await prisma.communication.delete({
     *   where: {
     *     // ... filter to delete one Communication
     *   }
     * })
     * 
     */
    delete<T extends CommunicationDeleteArgs>(args: SelectSubset<T, CommunicationDeleteArgs<ExtArgs>>): Prisma__CommunicationClient<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Communication.
     * @param {CommunicationUpdateArgs} args - Arguments to update one Communication.
     * @example
     * // Update one Communication
     * const communication = await prisma.communication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommunicationUpdateArgs>(args: SelectSubset<T, CommunicationUpdateArgs<ExtArgs>>): Prisma__CommunicationClient<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Communications.
     * @param {CommunicationDeleteManyArgs} args - Arguments to filter Communications to delete.
     * @example
     * // Delete a few Communications
     * const { count } = await prisma.communication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommunicationDeleteManyArgs>(args?: SelectSubset<T, CommunicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communications
     * const communication = await prisma.communication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommunicationUpdateManyArgs>(args: SelectSubset<T, CommunicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Communication.
     * @param {CommunicationUpsertArgs} args - Arguments to update or create a Communication.
     * @example
     * // Update or create a Communication
     * const communication = await prisma.communication.upsert({
     *   create: {
     *     // ... data to create a Communication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Communication we want to update
     *   }
     * })
     */
    upsert<T extends CommunicationUpsertArgs>(args: SelectSubset<T, CommunicationUpsertArgs<ExtArgs>>): Prisma__CommunicationClient<$Result.GetResult<Prisma.$CommunicationPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Communications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationCountArgs} args - Arguments to filter Communications to count.
     * @example
     * // Count the number of Communications
     * const count = await prisma.communication.count({
     *   where: {
     *     // ... the filter for the Communications we want to count
     *   }
     * })
    **/
    count<T extends CommunicationCountArgs>(
      args?: Subset<T, CommunicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Communication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunicationAggregateArgs>(args: Subset<T, CommunicationAggregateArgs>): Prisma.PrismaPromise<GetCommunicationAggregateType<T>>

    /**
     * Group by Communication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommunicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommunicationGroupByArgs['orderBy'] }
        : { orderBy?: CommunicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommunicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Communication model
   */
  readonly fields: CommunicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Communication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommunicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    donor<T extends DonorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DonorDefaultArgs<ExtArgs>>): Prisma__DonorClient<$Result.GetResult<Prisma.$DonorPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Communication model
   */ 
  interface CommunicationFieldRefs {
    readonly id: FieldRef<"Communication", 'String'>
    readonly donor_id: FieldRef<"Communication", 'String'>
    readonly type: FieldRef<"Communication", 'String'>
    readonly direction: FieldRef<"Communication", 'String'>
    readonly subject: FieldRef<"Communication", 'String'>
    readonly content: FieldRef<"Communication", 'String'>
    readonly status: FieldRef<"Communication", 'String'>
    readonly communication_date: FieldRef<"Communication", 'DateTime'>
    readonly response_required: FieldRef<"Communication", 'Boolean'>
    readonly response_received: FieldRef<"Communication", 'Boolean'>
    readonly response_date: FieldRef<"Communication", 'DateTime'>
    readonly notes: FieldRef<"Communication", 'String'>
    readonly created_at: FieldRef<"Communication", 'DateTime'>
    readonly updated_at: FieldRef<"Communication", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Communication findUnique
   */
  export type CommunicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    /**
     * Filter, which Communication to fetch.
     */
    where: CommunicationWhereUniqueInput
  }

  /**
   * Communication findUniqueOrThrow
   */
  export type CommunicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    /**
     * Filter, which Communication to fetch.
     */
    where: CommunicationWhereUniqueInput
  }

  /**
   * Communication findFirst
   */
  export type CommunicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    /**
     * Filter, which Communication to fetch.
     */
    where?: CommunicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Communications to fetch.
     */
    orderBy?: CommunicationOrderByWithRelationInput | CommunicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Communications.
     */
    cursor?: CommunicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Communications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Communications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Communications.
     */
    distinct?: CommunicationScalarFieldEnum | CommunicationScalarFieldEnum[]
  }

  /**
   * Communication findFirstOrThrow
   */
  export type CommunicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    /**
     * Filter, which Communication to fetch.
     */
    where?: CommunicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Communications to fetch.
     */
    orderBy?: CommunicationOrderByWithRelationInput | CommunicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Communications.
     */
    cursor?: CommunicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Communications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Communications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Communications.
     */
    distinct?: CommunicationScalarFieldEnum | CommunicationScalarFieldEnum[]
  }

  /**
   * Communication findMany
   */
  export type CommunicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    /**
     * Filter, which Communications to fetch.
     */
    where?: CommunicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Communications to fetch.
     */
    orderBy?: CommunicationOrderByWithRelationInput | CommunicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Communications.
     */
    cursor?: CommunicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Communications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Communications.
     */
    skip?: number
    distinct?: CommunicationScalarFieldEnum | CommunicationScalarFieldEnum[]
  }

  /**
   * Communication create
   */
  export type CommunicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    /**
     * The data needed to create a Communication.
     */
    data: XOR<CommunicationCreateInput, CommunicationUncheckedCreateInput>
  }

  /**
   * Communication createMany
   */
  export type CommunicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Communications.
     */
    data: CommunicationCreateManyInput | CommunicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Communication update
   */
  export type CommunicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    /**
     * The data needed to update a Communication.
     */
    data: XOR<CommunicationUpdateInput, CommunicationUncheckedUpdateInput>
    /**
     * Choose, which Communication to update.
     */
    where: CommunicationWhereUniqueInput
  }

  /**
   * Communication updateMany
   */
  export type CommunicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Communications.
     */
    data: XOR<CommunicationUpdateManyMutationInput, CommunicationUncheckedUpdateManyInput>
    /**
     * Filter which Communications to update
     */
    where?: CommunicationWhereInput
    /**
     * Limit how many Communications to update.
     */
    limit?: number
  }

  /**
   * Communication upsert
   */
  export type CommunicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    /**
     * The filter to search for the Communication to update in case it exists.
     */
    where: CommunicationWhereUniqueInput
    /**
     * In case the Communication found by the `where` argument doesn't exist, create a new Communication with this data.
     */
    create: XOR<CommunicationCreateInput, CommunicationUncheckedCreateInput>
    /**
     * In case the Communication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommunicationUpdateInput, CommunicationUncheckedUpdateInput>
  }

  /**
   * Communication delete
   */
  export type CommunicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
    /**
     * Filter which Communication to delete.
     */
    where: CommunicationWhereUniqueInput
  }

  /**
   * Communication deleteMany
   */
  export type CommunicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Communications to delete
     */
    where?: CommunicationWhereInput
    /**
     * Limit how many Communications to delete.
     */
    limit?: number
  }

  /**
   * Communication without action
   */
  export type CommunicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Communication
     */
    select?: CommunicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Communication
     */
    omit?: CommunicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    password: 'password',
    avatar: 'avatar',
    createdAt: 'createdAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const DonationScalarFieldEnum: {
    id: 'id',
    amount: 'amount',
    donation_date: 'donation_date',
    donation_type: 'donation_type',
    payment_method: 'payment_method',
    status: 'status',
    campaign_id: 'campaign_id',
    event_id: 'event_id',
    notes: 'notes',
    is_anonymous: 'is_anonymous',
    is_deleted: 'is_deleted',
    deleted_at: 'deleted_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type DonationScalarFieldEnum = (typeof DonationScalarFieldEnum)[keyof typeof DonationScalarFieldEnum]


  export const TagScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    color: 'color',
    is_deleted: 'is_deleted',
    deleted_at: 'deleted_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TagScalarFieldEnum = (typeof TagScalarFieldEnum)[keyof typeof TagScalarFieldEnum]


  export const DonorScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    nick_name: 'nick_name',
    middle_name: 'middle_name',
    last_name: 'last_name',
    organization_name: 'organization_name',
    gender: 'gender',
    age: 'age',
    email: 'email',
    phone_number: 'phone_number',
    address: 'address',
    city: 'city',
    state: 'state',
    postal_code: 'postal_code',
    country: 'country',
    registration_date: 'registration_date',
    last_donation_id: 'last_donation_id',
    last_donation_date: 'last_donation_date',
    total_donation_amount: 'total_donation_amount',
    total_donations_count: 'total_donations_count',
    anonymous_donation_preference: 'anonymous_donation_preference',
    is_merged: 'is_merged',
    is_company: 'is_company',
    merge_to_donor_id: 'merge_to_donor_id',
    contact_phone_type: 'contact_phone_type',
    phone_restrictions: 'phone_restrictions',
    email_restrictions: 'email_restrictions',
    communication_restrictions: 'communication_restrictions',
    subscription_events_in_person: 'subscription_events_in_person',
    subscription_events_magazine: 'subscription_events_magazine',
    communication_preference: 'communication_preference',
    is_deleted: 'is_deleted',
    deleted_at: 'deleted_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type DonorScalarFieldEnum = (typeof DonorScalarFieldEnum)[keyof typeof DonorScalarFieldEnum]


  export const DonorDonationScalarFieldEnum: {
    donor_id: 'donor_id',
    donation_id: 'donation_id',
    amount: 'amount',
    is_primary: 'is_primary',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type DonorDonationScalarFieldEnum = (typeof DonorDonationScalarFieldEnum)[keyof typeof DonorDonationScalarFieldEnum]


  export const DonorTagScalarFieldEnum: {
    donor_id: 'donor_id',
    tag_id: 'tag_id',
    created_at: 'created_at'
  };

  export type DonorTagScalarFieldEnum = (typeof DonorTagScalarFieldEnum)[keyof typeof DonorTagScalarFieldEnum]


  export const InterestDomainScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type InterestDomainScalarFieldEnum = (typeof InterestDomainScalarFieldEnum)[keyof typeof InterestDomainScalarFieldEnum]


  export const DonorInterestDomainScalarFieldEnum: {
    donor_id: 'donor_id',
    interest_domain_id: 'interest_domain_id',
    level: 'level',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type DonorInterestDomainScalarFieldEnum = (typeof DonorInterestDomainScalarFieldEnum)[keyof typeof DonorInterestDomainScalarFieldEnum]


  export const CommunicationScalarFieldEnum: {
    id: 'id',
    donor_id: 'donor_id',
    type: 'type',
    direction: 'direction',
    subject: 'subject',
    content: 'content',
    status: 'status',
    communication_date: 'communication_date',
    response_required: 'response_required',
    response_received: 'response_received',
    response_date: 'response_date',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CommunicationScalarFieldEnum = (typeof CommunicationScalarFieldEnum)[keyof typeof CommunicationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const UserOrderByRelevanceFieldEnum: {
    username: 'username',
    email: 'email',
    password: 'password',
    avatar: 'avatar'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const DonationOrderByRelevanceFieldEnum: {
    id: 'id',
    donation_type: 'donation_type',
    payment_method: 'payment_method',
    status: 'status',
    campaign_id: 'campaign_id',
    event_id: 'event_id',
    notes: 'notes'
  };

  export type DonationOrderByRelevanceFieldEnum = (typeof DonationOrderByRelevanceFieldEnum)[keyof typeof DonationOrderByRelevanceFieldEnum]


  export const TagOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    color: 'color'
  };

  export type TagOrderByRelevanceFieldEnum = (typeof TagOrderByRelevanceFieldEnum)[keyof typeof TagOrderByRelevanceFieldEnum]


  export const DonorOrderByRelevanceFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    nick_name: 'nick_name',
    middle_name: 'middle_name',
    last_name: 'last_name',
    organization_name: 'organization_name',
    gender: 'gender',
    email: 'email',
    phone_number: 'phone_number',
    address: 'address',
    city: 'city',
    state: 'state',
    postal_code: 'postal_code',
    country: 'country',
    last_donation_id: 'last_donation_id',
    merge_to_donor_id: 'merge_to_donor_id',
    contact_phone_type: 'contact_phone_type',
    phone_restrictions: 'phone_restrictions',
    email_restrictions: 'email_restrictions',
    communication_restrictions: 'communication_restrictions',
    subscription_events_in_person: 'subscription_events_in_person',
    subscription_events_magazine: 'subscription_events_magazine',
    communication_preference: 'communication_preference'
  };

  export type DonorOrderByRelevanceFieldEnum = (typeof DonorOrderByRelevanceFieldEnum)[keyof typeof DonorOrderByRelevanceFieldEnum]


  export const DonorDonationOrderByRelevanceFieldEnum: {
    donor_id: 'donor_id',
    donation_id: 'donation_id'
  };

  export type DonorDonationOrderByRelevanceFieldEnum = (typeof DonorDonationOrderByRelevanceFieldEnum)[keyof typeof DonorDonationOrderByRelevanceFieldEnum]


  export const DonorTagOrderByRelevanceFieldEnum: {
    donor_id: 'donor_id',
    tag_id: 'tag_id'
  };

  export type DonorTagOrderByRelevanceFieldEnum = (typeof DonorTagOrderByRelevanceFieldEnum)[keyof typeof DonorTagOrderByRelevanceFieldEnum]


  export const InterestDomainOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description'
  };

  export type InterestDomainOrderByRelevanceFieldEnum = (typeof InterestDomainOrderByRelevanceFieldEnum)[keyof typeof InterestDomainOrderByRelevanceFieldEnum]


  export const DonorInterestDomainOrderByRelevanceFieldEnum: {
    donor_id: 'donor_id',
    interest_domain_id: 'interest_domain_id'
  };

  export type DonorInterestDomainOrderByRelevanceFieldEnum = (typeof DonorInterestDomainOrderByRelevanceFieldEnum)[keyof typeof DonorInterestDomainOrderByRelevanceFieldEnum]


  export const CommunicationOrderByRelevanceFieldEnum: {
    id: 'id',
    donor_id: 'donor_id',
    type: 'type',
    direction: 'direction',
    subject: 'subject',
    content: 'content',
    status: 'status',
    notes: 'notes'
  };

  export type CommunicationOrderByRelevanceFieldEnum = (typeof CommunicationOrderByRelevanceFieldEnum)[keyof typeof CommunicationOrderByRelevanceFieldEnum]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    username?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type DonationWhereInput = {
    AND?: DonationWhereInput | DonationWhereInput[]
    OR?: DonationWhereInput[]
    NOT?: DonationWhereInput | DonationWhereInput[]
    id?: StringFilter<"Donation"> | string
    amount?: DecimalFilter<"Donation"> | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFilter<"Donation"> | Date | string
    donation_type?: StringNullableFilter<"Donation"> | string | null
    payment_method?: StringNullableFilter<"Donation"> | string | null
    status?: StringFilter<"Donation"> | string
    campaign_id?: StringNullableFilter<"Donation"> | string | null
    event_id?: StringNullableFilter<"Donation"> | string | null
    notes?: StringNullableFilter<"Donation"> | string | null
    is_anonymous?: BoolFilter<"Donation"> | boolean
    is_deleted?: BoolFilter<"Donation"> | boolean
    deleted_at?: DateTimeNullableFilter<"Donation"> | Date | string | null
    created_at?: DateTimeFilter<"Donation"> | Date | string
    updated_at?: DateTimeFilter<"Donation"> | Date | string
    donorsLastDonation?: DonorListRelationFilter
    donors?: DonorDonationListRelationFilter
  }

  export type DonationOrderByWithRelationInput = {
    id?: SortOrder
    amount?: SortOrder
    donation_date?: SortOrder
    donation_type?: SortOrderInput | SortOrder
    payment_method?: SortOrderInput | SortOrder
    status?: SortOrder
    campaign_id?: SortOrderInput | SortOrder
    event_id?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    donorsLastDonation?: DonorOrderByRelationAggregateInput
    donors?: DonorDonationOrderByRelationAggregateInput
    _relevance?: DonationOrderByRelevanceInput
  }

  export type DonationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DonationWhereInput | DonationWhereInput[]
    OR?: DonationWhereInput[]
    NOT?: DonationWhereInput | DonationWhereInput[]
    amount?: DecimalFilter<"Donation"> | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFilter<"Donation"> | Date | string
    donation_type?: StringNullableFilter<"Donation"> | string | null
    payment_method?: StringNullableFilter<"Donation"> | string | null
    status?: StringFilter<"Donation"> | string
    campaign_id?: StringNullableFilter<"Donation"> | string | null
    event_id?: StringNullableFilter<"Donation"> | string | null
    notes?: StringNullableFilter<"Donation"> | string | null
    is_anonymous?: BoolFilter<"Donation"> | boolean
    is_deleted?: BoolFilter<"Donation"> | boolean
    deleted_at?: DateTimeNullableFilter<"Donation"> | Date | string | null
    created_at?: DateTimeFilter<"Donation"> | Date | string
    updated_at?: DateTimeFilter<"Donation"> | Date | string
    donorsLastDonation?: DonorListRelationFilter
    donors?: DonorDonationListRelationFilter
  }, "id">

  export type DonationOrderByWithAggregationInput = {
    id?: SortOrder
    amount?: SortOrder
    donation_date?: SortOrder
    donation_type?: SortOrderInput | SortOrder
    payment_method?: SortOrderInput | SortOrder
    status?: SortOrder
    campaign_id?: SortOrderInput | SortOrder
    event_id?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: DonationCountOrderByAggregateInput
    _avg?: DonationAvgOrderByAggregateInput
    _max?: DonationMaxOrderByAggregateInput
    _min?: DonationMinOrderByAggregateInput
    _sum?: DonationSumOrderByAggregateInput
  }

  export type DonationScalarWhereWithAggregatesInput = {
    AND?: DonationScalarWhereWithAggregatesInput | DonationScalarWhereWithAggregatesInput[]
    OR?: DonationScalarWhereWithAggregatesInput[]
    NOT?: DonationScalarWhereWithAggregatesInput | DonationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Donation"> | string
    amount?: DecimalWithAggregatesFilter<"Donation"> | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeWithAggregatesFilter<"Donation"> | Date | string
    donation_type?: StringNullableWithAggregatesFilter<"Donation"> | string | null
    payment_method?: StringNullableWithAggregatesFilter<"Donation"> | string | null
    status?: StringWithAggregatesFilter<"Donation"> | string
    campaign_id?: StringNullableWithAggregatesFilter<"Donation"> | string | null
    event_id?: StringNullableWithAggregatesFilter<"Donation"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Donation"> | string | null
    is_anonymous?: BoolWithAggregatesFilter<"Donation"> | boolean
    is_deleted?: BoolWithAggregatesFilter<"Donation"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"Donation"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"Donation"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Donation"> | Date | string
  }

  export type TagWhereInput = {
    AND?: TagWhereInput | TagWhereInput[]
    OR?: TagWhereInput[]
    NOT?: TagWhereInput | TagWhereInput[]
    id?: StringFilter<"Tag"> | string
    name?: StringFilter<"Tag"> | string
    description?: StringNullableFilter<"Tag"> | string | null
    color?: StringNullableFilter<"Tag"> | string | null
    is_deleted?: BoolFilter<"Tag"> | boolean
    deleted_at?: DateTimeNullableFilter<"Tag"> | Date | string | null
    created_at?: DateTimeFilter<"Tag"> | Date | string
    updated_at?: DateTimeFilter<"Tag"> | Date | string
    donors?: DonorTagListRelationFilter
  }

  export type TagOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    donors?: DonorTagOrderByRelationAggregateInput
    _relevance?: TagOrderByRelevanceInput
  }

  export type TagWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: TagWhereInput | TagWhereInput[]
    OR?: TagWhereInput[]
    NOT?: TagWhereInput | TagWhereInput[]
    description?: StringNullableFilter<"Tag"> | string | null
    color?: StringNullableFilter<"Tag"> | string | null
    is_deleted?: BoolFilter<"Tag"> | boolean
    deleted_at?: DateTimeNullableFilter<"Tag"> | Date | string | null
    created_at?: DateTimeFilter<"Tag"> | Date | string
    updated_at?: DateTimeFilter<"Tag"> | Date | string
    donors?: DonorTagListRelationFilter
  }, "id" | "name">

  export type TagOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: TagCountOrderByAggregateInput
    _max?: TagMaxOrderByAggregateInput
    _min?: TagMinOrderByAggregateInput
  }

  export type TagScalarWhereWithAggregatesInput = {
    AND?: TagScalarWhereWithAggregatesInput | TagScalarWhereWithAggregatesInput[]
    OR?: TagScalarWhereWithAggregatesInput[]
    NOT?: TagScalarWhereWithAggregatesInput | TagScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Tag"> | string
    name?: StringWithAggregatesFilter<"Tag"> | string
    description?: StringNullableWithAggregatesFilter<"Tag"> | string | null
    color?: StringNullableWithAggregatesFilter<"Tag"> | string | null
    is_deleted?: BoolWithAggregatesFilter<"Tag"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"Tag"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"Tag"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Tag"> | Date | string
  }

  export type DonorWhereInput = {
    AND?: DonorWhereInput | DonorWhereInput[]
    OR?: DonorWhereInput[]
    NOT?: DonorWhereInput | DonorWhereInput[]
    id?: StringFilter<"Donor"> | string
    first_name?: StringNullableFilter<"Donor"> | string | null
    nick_name?: StringNullableFilter<"Donor"> | string | null
    middle_name?: StringNullableFilter<"Donor"> | string | null
    last_name?: StringNullableFilter<"Donor"> | string | null
    organization_name?: StringNullableFilter<"Donor"> | string | null
    gender?: StringNullableFilter<"Donor"> | string | null
    age?: IntNullableFilter<"Donor"> | number | null
    email?: StringNullableFilter<"Donor"> | string | null
    phone_number?: StringNullableFilter<"Donor"> | string | null
    address?: StringNullableFilter<"Donor"> | string | null
    city?: StringNullableFilter<"Donor"> | string | null
    state?: StringNullableFilter<"Donor"> | string | null
    postal_code?: StringNullableFilter<"Donor"> | string | null
    country?: StringNullableFilter<"Donor"> | string | null
    registration_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    last_donation_id?: StringNullableFilter<"Donor"> | string | null
    last_donation_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    total_donation_amount?: DecimalFilter<"Donor"> | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFilter<"Donor"> | number
    anonymous_donation_preference?: BoolFilter<"Donor"> | boolean
    is_merged?: BoolFilter<"Donor"> | boolean
    is_company?: BoolFilter<"Donor"> | boolean
    merge_to_donor_id?: StringNullableFilter<"Donor"> | string | null
    contact_phone_type?: StringNullableFilter<"Donor"> | string | null
    phone_restrictions?: StringNullableFilter<"Donor"> | string | null
    email_restrictions?: StringNullableFilter<"Donor"> | string | null
    communication_restrictions?: StringNullableFilter<"Donor"> | string | null
    subscription_events_in_person?: StringNullableFilter<"Donor"> | string | null
    subscription_events_magazine?: StringNullableFilter<"Donor"> | string | null
    communication_preference?: StringNullableFilter<"Donor"> | string | null
    is_deleted?: BoolFilter<"Donor"> | boolean
    deleted_at?: DateTimeNullableFilter<"Donor"> | Date | string | null
    created_at?: DateTimeFilter<"Donor"> | Date | string
    updated_at?: DateTimeFilter<"Donor"> | Date | string
    last_donation?: XOR<DonationNullableScalarRelationFilter, DonationWhereInput> | null
    donations?: DonorDonationListRelationFilter
    interest_domains?: DonorInterestDomainListRelationFilter
    merge_to_donor?: XOR<DonorNullableScalarRelationFilter, DonorWhereInput> | null
    merged_donors?: DonorListRelationFilter
    tags?: DonorTagListRelationFilter
    communications?: CommunicationListRelationFilter
  }

  export type DonorOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    nick_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    organization_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    age?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    postal_code?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    registration_date?: SortOrderInput | SortOrder
    last_donation_id?: SortOrderInput | SortOrder
    last_donation_date?: SortOrderInput | SortOrder
    total_donation_amount?: SortOrder
    total_donations_count?: SortOrder
    anonymous_donation_preference?: SortOrder
    is_merged?: SortOrder
    is_company?: SortOrder
    merge_to_donor_id?: SortOrderInput | SortOrder
    contact_phone_type?: SortOrderInput | SortOrder
    phone_restrictions?: SortOrderInput | SortOrder
    email_restrictions?: SortOrderInput | SortOrder
    communication_restrictions?: SortOrderInput | SortOrder
    subscription_events_in_person?: SortOrderInput | SortOrder
    subscription_events_magazine?: SortOrderInput | SortOrder
    communication_preference?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    last_donation?: DonationOrderByWithRelationInput
    donations?: DonorDonationOrderByRelationAggregateInput
    interest_domains?: DonorInterestDomainOrderByRelationAggregateInput
    merge_to_donor?: DonorOrderByWithRelationInput
    merged_donors?: DonorOrderByRelationAggregateInput
    tags?: DonorTagOrderByRelationAggregateInput
    communications?: CommunicationOrderByRelationAggregateInput
    _relevance?: DonorOrderByRelevanceInput
  }

  export type DonorWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: DonorWhereInput | DonorWhereInput[]
    OR?: DonorWhereInput[]
    NOT?: DonorWhereInput | DonorWhereInput[]
    first_name?: StringNullableFilter<"Donor"> | string | null
    nick_name?: StringNullableFilter<"Donor"> | string | null
    middle_name?: StringNullableFilter<"Donor"> | string | null
    last_name?: StringNullableFilter<"Donor"> | string | null
    organization_name?: StringNullableFilter<"Donor"> | string | null
    gender?: StringNullableFilter<"Donor"> | string | null
    age?: IntNullableFilter<"Donor"> | number | null
    phone_number?: StringNullableFilter<"Donor"> | string | null
    address?: StringNullableFilter<"Donor"> | string | null
    city?: StringNullableFilter<"Donor"> | string | null
    state?: StringNullableFilter<"Donor"> | string | null
    postal_code?: StringNullableFilter<"Donor"> | string | null
    country?: StringNullableFilter<"Donor"> | string | null
    registration_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    last_donation_id?: StringNullableFilter<"Donor"> | string | null
    last_donation_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    total_donation_amount?: DecimalFilter<"Donor"> | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFilter<"Donor"> | number
    anonymous_donation_preference?: BoolFilter<"Donor"> | boolean
    is_merged?: BoolFilter<"Donor"> | boolean
    is_company?: BoolFilter<"Donor"> | boolean
    merge_to_donor_id?: StringNullableFilter<"Donor"> | string | null
    contact_phone_type?: StringNullableFilter<"Donor"> | string | null
    phone_restrictions?: StringNullableFilter<"Donor"> | string | null
    email_restrictions?: StringNullableFilter<"Donor"> | string | null
    communication_restrictions?: StringNullableFilter<"Donor"> | string | null
    subscription_events_in_person?: StringNullableFilter<"Donor"> | string | null
    subscription_events_magazine?: StringNullableFilter<"Donor"> | string | null
    communication_preference?: StringNullableFilter<"Donor"> | string | null
    is_deleted?: BoolFilter<"Donor"> | boolean
    deleted_at?: DateTimeNullableFilter<"Donor"> | Date | string | null
    created_at?: DateTimeFilter<"Donor"> | Date | string
    updated_at?: DateTimeFilter<"Donor"> | Date | string
    last_donation?: XOR<DonationNullableScalarRelationFilter, DonationWhereInput> | null
    donations?: DonorDonationListRelationFilter
    interest_domains?: DonorInterestDomainListRelationFilter
    merge_to_donor?: XOR<DonorNullableScalarRelationFilter, DonorWhereInput> | null
    merged_donors?: DonorListRelationFilter
    tags?: DonorTagListRelationFilter
    communications?: CommunicationListRelationFilter
  }, "id" | "email">

  export type DonorOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    nick_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    organization_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    age?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    postal_code?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    registration_date?: SortOrderInput | SortOrder
    last_donation_id?: SortOrderInput | SortOrder
    last_donation_date?: SortOrderInput | SortOrder
    total_donation_amount?: SortOrder
    total_donations_count?: SortOrder
    anonymous_donation_preference?: SortOrder
    is_merged?: SortOrder
    is_company?: SortOrder
    merge_to_donor_id?: SortOrderInput | SortOrder
    contact_phone_type?: SortOrderInput | SortOrder
    phone_restrictions?: SortOrderInput | SortOrder
    email_restrictions?: SortOrderInput | SortOrder
    communication_restrictions?: SortOrderInput | SortOrder
    subscription_events_in_person?: SortOrderInput | SortOrder
    subscription_events_magazine?: SortOrderInput | SortOrder
    communication_preference?: SortOrderInput | SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: DonorCountOrderByAggregateInput
    _avg?: DonorAvgOrderByAggregateInput
    _max?: DonorMaxOrderByAggregateInput
    _min?: DonorMinOrderByAggregateInput
    _sum?: DonorSumOrderByAggregateInput
  }

  export type DonorScalarWhereWithAggregatesInput = {
    AND?: DonorScalarWhereWithAggregatesInput | DonorScalarWhereWithAggregatesInput[]
    OR?: DonorScalarWhereWithAggregatesInput[]
    NOT?: DonorScalarWhereWithAggregatesInput | DonorScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Donor"> | string
    first_name?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    nick_name?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    middle_name?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    organization_name?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    gender?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    age?: IntNullableWithAggregatesFilter<"Donor"> | number | null
    email?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    phone_number?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    address?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    city?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    state?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    postal_code?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    country?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    registration_date?: DateTimeNullableWithAggregatesFilter<"Donor"> | Date | string | null
    last_donation_id?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    last_donation_date?: DateTimeNullableWithAggregatesFilter<"Donor"> | Date | string | null
    total_donation_amount?: DecimalWithAggregatesFilter<"Donor"> | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntWithAggregatesFilter<"Donor"> | number
    anonymous_donation_preference?: BoolWithAggregatesFilter<"Donor"> | boolean
    is_merged?: BoolWithAggregatesFilter<"Donor"> | boolean
    is_company?: BoolWithAggregatesFilter<"Donor"> | boolean
    merge_to_donor_id?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    contact_phone_type?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    phone_restrictions?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    email_restrictions?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    communication_restrictions?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    subscription_events_in_person?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    subscription_events_magazine?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    communication_preference?: StringNullableWithAggregatesFilter<"Donor"> | string | null
    is_deleted?: BoolWithAggregatesFilter<"Donor"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"Donor"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"Donor"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Donor"> | Date | string
  }

  export type DonorDonationWhereInput = {
    AND?: DonorDonationWhereInput | DonorDonationWhereInput[]
    OR?: DonorDonationWhereInput[]
    NOT?: DonorDonationWhereInput | DonorDonationWhereInput[]
    donor_id?: StringFilter<"DonorDonation"> | string
    donation_id?: StringFilter<"DonorDonation"> | string
    amount?: DecimalFilter<"DonorDonation"> | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFilter<"DonorDonation"> | boolean
    created_at?: DateTimeFilter<"DonorDonation"> | Date | string
    updated_at?: DateTimeFilter<"DonorDonation"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    donation?: XOR<DonationScalarRelationFilter, DonationWhereInput>
  }

  export type DonorDonationOrderByWithRelationInput = {
    donor_id?: SortOrder
    donation_id?: SortOrder
    amount?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    donor?: DonorOrderByWithRelationInput
    donation?: DonationOrderByWithRelationInput
    _relevance?: DonorDonationOrderByRelevanceInput
  }

  export type DonorDonationWhereUniqueInput = Prisma.AtLeast<{
    donor_id_donation_id?: DonorDonationDonor_idDonation_idCompoundUniqueInput
    AND?: DonorDonationWhereInput | DonorDonationWhereInput[]
    OR?: DonorDonationWhereInput[]
    NOT?: DonorDonationWhereInput | DonorDonationWhereInput[]
    donor_id?: StringFilter<"DonorDonation"> | string
    donation_id?: StringFilter<"DonorDonation"> | string
    amount?: DecimalFilter<"DonorDonation"> | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFilter<"DonorDonation"> | boolean
    created_at?: DateTimeFilter<"DonorDonation"> | Date | string
    updated_at?: DateTimeFilter<"DonorDonation"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    donation?: XOR<DonationScalarRelationFilter, DonationWhereInput>
  }, "donor_id_donation_id">

  export type DonorDonationOrderByWithAggregationInput = {
    donor_id?: SortOrder
    donation_id?: SortOrder
    amount?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: DonorDonationCountOrderByAggregateInput
    _avg?: DonorDonationAvgOrderByAggregateInput
    _max?: DonorDonationMaxOrderByAggregateInput
    _min?: DonorDonationMinOrderByAggregateInput
    _sum?: DonorDonationSumOrderByAggregateInput
  }

  export type DonorDonationScalarWhereWithAggregatesInput = {
    AND?: DonorDonationScalarWhereWithAggregatesInput | DonorDonationScalarWhereWithAggregatesInput[]
    OR?: DonorDonationScalarWhereWithAggregatesInput[]
    NOT?: DonorDonationScalarWhereWithAggregatesInput | DonorDonationScalarWhereWithAggregatesInput[]
    donor_id?: StringWithAggregatesFilter<"DonorDonation"> | string
    donation_id?: StringWithAggregatesFilter<"DonorDonation"> | string
    amount?: DecimalWithAggregatesFilter<"DonorDonation"> | Decimal | DecimalJsLike | number | string
    is_primary?: BoolWithAggregatesFilter<"DonorDonation"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"DonorDonation"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"DonorDonation"> | Date | string
  }

  export type DonorTagWhereInput = {
    AND?: DonorTagWhereInput | DonorTagWhereInput[]
    OR?: DonorTagWhereInput[]
    NOT?: DonorTagWhereInput | DonorTagWhereInput[]
    donor_id?: StringFilter<"DonorTag"> | string
    tag_id?: StringFilter<"DonorTag"> | string
    created_at?: DateTimeFilter<"DonorTag"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    tag?: XOR<TagScalarRelationFilter, TagWhereInput>
  }

  export type DonorTagOrderByWithRelationInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    donor?: DonorOrderByWithRelationInput
    tag?: TagOrderByWithRelationInput
    _relevance?: DonorTagOrderByRelevanceInput
  }

  export type DonorTagWhereUniqueInput = Prisma.AtLeast<{
    donor_id_tag_id?: DonorTagDonor_idTag_idCompoundUniqueInput
    AND?: DonorTagWhereInput | DonorTagWhereInput[]
    OR?: DonorTagWhereInput[]
    NOT?: DonorTagWhereInput | DonorTagWhereInput[]
    donor_id?: StringFilter<"DonorTag"> | string
    tag_id?: StringFilter<"DonorTag"> | string
    created_at?: DateTimeFilter<"DonorTag"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    tag?: XOR<TagScalarRelationFilter, TagWhereInput>
  }, "donor_id_tag_id">

  export type DonorTagOrderByWithAggregationInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
    _count?: DonorTagCountOrderByAggregateInput
    _max?: DonorTagMaxOrderByAggregateInput
    _min?: DonorTagMinOrderByAggregateInput
  }

  export type DonorTagScalarWhereWithAggregatesInput = {
    AND?: DonorTagScalarWhereWithAggregatesInput | DonorTagScalarWhereWithAggregatesInput[]
    OR?: DonorTagScalarWhereWithAggregatesInput[]
    NOT?: DonorTagScalarWhereWithAggregatesInput | DonorTagScalarWhereWithAggregatesInput[]
    donor_id?: StringWithAggregatesFilter<"DonorTag"> | string
    tag_id?: StringWithAggregatesFilter<"DonorTag"> | string
    created_at?: DateTimeWithAggregatesFilter<"DonorTag"> | Date | string
  }

  export type InterestDomainWhereInput = {
    AND?: InterestDomainWhereInput | InterestDomainWhereInput[]
    OR?: InterestDomainWhereInput[]
    NOT?: InterestDomainWhereInput | InterestDomainWhereInput[]
    id?: StringFilter<"InterestDomain"> | string
    name?: StringFilter<"InterestDomain"> | string
    description?: StringNullableFilter<"InterestDomain"> | string | null
    created_at?: DateTimeFilter<"InterestDomain"> | Date | string
    updated_at?: DateTimeFilter<"InterestDomain"> | Date | string
    donors?: DonorInterestDomainListRelationFilter
  }

  export type InterestDomainOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    donors?: DonorInterestDomainOrderByRelationAggregateInput
    _relevance?: InterestDomainOrderByRelevanceInput
  }

  export type InterestDomainWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: InterestDomainWhereInput | InterestDomainWhereInput[]
    OR?: InterestDomainWhereInput[]
    NOT?: InterestDomainWhereInput | InterestDomainWhereInput[]
    description?: StringNullableFilter<"InterestDomain"> | string | null
    created_at?: DateTimeFilter<"InterestDomain"> | Date | string
    updated_at?: DateTimeFilter<"InterestDomain"> | Date | string
    donors?: DonorInterestDomainListRelationFilter
  }, "id" | "name">

  export type InterestDomainOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: InterestDomainCountOrderByAggregateInput
    _max?: InterestDomainMaxOrderByAggregateInput
    _min?: InterestDomainMinOrderByAggregateInput
  }

  export type InterestDomainScalarWhereWithAggregatesInput = {
    AND?: InterestDomainScalarWhereWithAggregatesInput | InterestDomainScalarWhereWithAggregatesInput[]
    OR?: InterestDomainScalarWhereWithAggregatesInput[]
    NOT?: InterestDomainScalarWhereWithAggregatesInput | InterestDomainScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InterestDomain"> | string
    name?: StringWithAggregatesFilter<"InterestDomain"> | string
    description?: StringNullableWithAggregatesFilter<"InterestDomain"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"InterestDomain"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"InterestDomain"> | Date | string
  }

  export type DonorInterestDomainWhereInput = {
    AND?: DonorInterestDomainWhereInput | DonorInterestDomainWhereInput[]
    OR?: DonorInterestDomainWhereInput[]
    NOT?: DonorInterestDomainWhereInput | DonorInterestDomainWhereInput[]
    donor_id?: StringFilter<"DonorInterestDomain"> | string
    interest_domain_id?: StringFilter<"DonorInterestDomain"> | string
    level?: IntFilter<"DonorInterestDomain"> | number
    created_at?: DateTimeFilter<"DonorInterestDomain"> | Date | string
    updated_at?: DateTimeFilter<"DonorInterestDomain"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    interest_domain?: XOR<InterestDomainScalarRelationFilter, InterestDomainWhereInput>
  }

  export type DonorInterestDomainOrderByWithRelationInput = {
    donor_id?: SortOrder
    interest_domain_id?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    donor?: DonorOrderByWithRelationInput
    interest_domain?: InterestDomainOrderByWithRelationInput
    _relevance?: DonorInterestDomainOrderByRelevanceInput
  }

  export type DonorInterestDomainWhereUniqueInput = Prisma.AtLeast<{
    donor_id_interest_domain_id?: DonorInterestDomainDonor_idInterest_domain_idCompoundUniqueInput
    AND?: DonorInterestDomainWhereInput | DonorInterestDomainWhereInput[]
    OR?: DonorInterestDomainWhereInput[]
    NOT?: DonorInterestDomainWhereInput | DonorInterestDomainWhereInput[]
    donor_id?: StringFilter<"DonorInterestDomain"> | string
    interest_domain_id?: StringFilter<"DonorInterestDomain"> | string
    level?: IntFilter<"DonorInterestDomain"> | number
    created_at?: DateTimeFilter<"DonorInterestDomain"> | Date | string
    updated_at?: DateTimeFilter<"DonorInterestDomain"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
    interest_domain?: XOR<InterestDomainScalarRelationFilter, InterestDomainWhereInput>
  }, "donor_id_interest_domain_id">

  export type DonorInterestDomainOrderByWithAggregationInput = {
    donor_id?: SortOrder
    interest_domain_id?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: DonorInterestDomainCountOrderByAggregateInput
    _avg?: DonorInterestDomainAvgOrderByAggregateInput
    _max?: DonorInterestDomainMaxOrderByAggregateInput
    _min?: DonorInterestDomainMinOrderByAggregateInput
    _sum?: DonorInterestDomainSumOrderByAggregateInput
  }

  export type DonorInterestDomainScalarWhereWithAggregatesInput = {
    AND?: DonorInterestDomainScalarWhereWithAggregatesInput | DonorInterestDomainScalarWhereWithAggregatesInput[]
    OR?: DonorInterestDomainScalarWhereWithAggregatesInput[]
    NOT?: DonorInterestDomainScalarWhereWithAggregatesInput | DonorInterestDomainScalarWhereWithAggregatesInput[]
    donor_id?: StringWithAggregatesFilter<"DonorInterestDomain"> | string
    interest_domain_id?: StringWithAggregatesFilter<"DonorInterestDomain"> | string
    level?: IntWithAggregatesFilter<"DonorInterestDomain"> | number
    created_at?: DateTimeWithAggregatesFilter<"DonorInterestDomain"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"DonorInterestDomain"> | Date | string
  }

  export type CommunicationWhereInput = {
    AND?: CommunicationWhereInput | CommunicationWhereInput[]
    OR?: CommunicationWhereInput[]
    NOT?: CommunicationWhereInput | CommunicationWhereInput[]
    id?: StringFilter<"Communication"> | string
    donor_id?: StringFilter<"Communication"> | string
    type?: StringFilter<"Communication"> | string
    direction?: StringFilter<"Communication"> | string
    subject?: StringNullableFilter<"Communication"> | string | null
    content?: StringNullableFilter<"Communication"> | string | null
    status?: StringFilter<"Communication"> | string
    communication_date?: DateTimeFilter<"Communication"> | Date | string
    response_required?: BoolFilter<"Communication"> | boolean
    response_received?: BoolFilter<"Communication"> | boolean
    response_date?: DateTimeNullableFilter<"Communication"> | Date | string | null
    notes?: StringNullableFilter<"Communication"> | string | null
    created_at?: DateTimeFilter<"Communication"> | Date | string
    updated_at?: DateTimeFilter<"Communication"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
  }

  export type CommunicationOrderByWithRelationInput = {
    id?: SortOrder
    donor_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    subject?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    status?: SortOrder
    communication_date?: SortOrder
    response_required?: SortOrder
    response_received?: SortOrder
    response_date?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    donor?: DonorOrderByWithRelationInput
    _relevance?: CommunicationOrderByRelevanceInput
  }

  export type CommunicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CommunicationWhereInput | CommunicationWhereInput[]
    OR?: CommunicationWhereInput[]
    NOT?: CommunicationWhereInput | CommunicationWhereInput[]
    donor_id?: StringFilter<"Communication"> | string
    type?: StringFilter<"Communication"> | string
    direction?: StringFilter<"Communication"> | string
    subject?: StringNullableFilter<"Communication"> | string | null
    content?: StringNullableFilter<"Communication"> | string | null
    status?: StringFilter<"Communication"> | string
    communication_date?: DateTimeFilter<"Communication"> | Date | string
    response_required?: BoolFilter<"Communication"> | boolean
    response_received?: BoolFilter<"Communication"> | boolean
    response_date?: DateTimeNullableFilter<"Communication"> | Date | string | null
    notes?: StringNullableFilter<"Communication"> | string | null
    created_at?: DateTimeFilter<"Communication"> | Date | string
    updated_at?: DateTimeFilter<"Communication"> | Date | string
    donor?: XOR<DonorScalarRelationFilter, DonorWhereInput>
  }, "id">

  export type CommunicationOrderByWithAggregationInput = {
    id?: SortOrder
    donor_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    subject?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    status?: SortOrder
    communication_date?: SortOrder
    response_required?: SortOrder
    response_received?: SortOrder
    response_date?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: CommunicationCountOrderByAggregateInput
    _max?: CommunicationMaxOrderByAggregateInput
    _min?: CommunicationMinOrderByAggregateInput
  }

  export type CommunicationScalarWhereWithAggregatesInput = {
    AND?: CommunicationScalarWhereWithAggregatesInput | CommunicationScalarWhereWithAggregatesInput[]
    OR?: CommunicationScalarWhereWithAggregatesInput[]
    NOT?: CommunicationScalarWhereWithAggregatesInput | CommunicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Communication"> | string
    donor_id?: StringWithAggregatesFilter<"Communication"> | string
    type?: StringWithAggregatesFilter<"Communication"> | string
    direction?: StringWithAggregatesFilter<"Communication"> | string
    subject?: StringNullableWithAggregatesFilter<"Communication"> | string | null
    content?: StringNullableWithAggregatesFilter<"Communication"> | string | null
    status?: StringWithAggregatesFilter<"Communication"> | string
    communication_date?: DateTimeWithAggregatesFilter<"Communication"> | Date | string
    response_required?: BoolWithAggregatesFilter<"Communication"> | boolean
    response_received?: BoolWithAggregatesFilter<"Communication"> | boolean
    response_date?: DateTimeNullableWithAggregatesFilter<"Communication"> | Date | string | null
    notes?: StringNullableWithAggregatesFilter<"Communication"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Communication"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Communication"> | Date | string
  }

  export type UserCreateInput = {
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
  }

  export type UserUncheckedCreateInput = {
    id?: number
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
  }

  export type UserUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyInput = {
    id?: number
    username: string
    email: string
    password: string
    avatar?: string | null
    createdAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonationCreateInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    donation_date: Date | string
    donation_type?: string | null
    payment_method?: string | null
    status?: string
    campaign_id?: string | null
    event_id?: string | null
    notes?: string | null
    is_anonymous?: boolean
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donorsLastDonation?: DonorCreateNestedManyWithoutLast_donationInput
    donors?: DonorDonationCreateNestedManyWithoutDonationInput
  }

  export type DonationUncheckedCreateInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    donation_date: Date | string
    donation_type?: string | null
    payment_method?: string | null
    status?: string
    campaign_id?: string | null
    event_id?: string | null
    notes?: string | null
    is_anonymous?: boolean
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donorsLastDonation?: DonorUncheckedCreateNestedManyWithoutLast_donationInput
    donors?: DonorDonationUncheckedCreateNestedManyWithoutDonationInput
  }

  export type DonationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    donation_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    event_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donorsLastDonation?: DonorUpdateManyWithoutLast_donationNestedInput
    donors?: DonorDonationUpdateManyWithoutDonationNestedInput
  }

  export type DonationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    donation_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    event_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donorsLastDonation?: DonorUncheckedUpdateManyWithoutLast_donationNestedInput
    donors?: DonorDonationUncheckedUpdateManyWithoutDonationNestedInput
  }

  export type DonationCreateManyInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    donation_date: Date | string
    donation_type?: string | null
    payment_method?: string | null
    status?: string
    campaign_id?: string | null
    event_id?: string | null
    notes?: string | null
    is_anonymous?: boolean
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    donation_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    event_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    donation_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    event_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TagCreateInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorTagCreateNestedManyWithoutTagInput
  }

  export type TagUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorTagUncheckedCreateNestedManyWithoutTagInput
  }

  export type TagUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorTagUpdateManyWithoutTagNestedInput
  }

  export type TagUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorTagUncheckedUpdateManyWithoutTagNestedInput
  }

  export type TagCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type TagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorCreateInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    last_donation?: DonationCreateNestedOneWithoutDonorsLastDonationInput
    donations?: DonorDonationCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainCreateNestedManyWithoutDonorInput
    merge_to_donor?: DonorCreateNestedOneWithoutMerged_donorsInput
    merged_donors?: DonorCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagCreateNestedManyWithoutDonorInput
    communications?: CommunicationCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_id?: string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: string | null
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donations?: DonorDonationUncheckedCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainUncheckedCreateNestedManyWithoutDonorInput
    merged_donors?: DonorUncheckedCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagUncheckedCreateNestedManyWithoutDonorInput
    communications?: CommunicationUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_donation?: DonationUpdateOneWithoutDonorsLastDonationNestedInput
    donations?: DonorDonationUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUpdateManyWithoutDonorNestedInput
    merge_to_donor?: DonorUpdateOneWithoutMerged_donorsNestedInput
    merged_donors?: DonorUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_id?: NullableStringFieldUpdateOperationsInput | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    merge_to_donor_id?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donations?: DonorDonationUncheckedUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUncheckedUpdateManyWithoutDonorNestedInput
    merged_donors?: DonorUncheckedUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUncheckedUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type DonorCreateManyInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_id?: string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: string | null
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_id?: NullableStringFieldUpdateOperationsInput | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    merge_to_donor_id?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorDonationCreateInput = {
    amount: Decimal | DecimalJsLike | number | string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    donor: DonorCreateNestedOneWithoutDonationsInput
    donation: DonationCreateNestedOneWithoutDonorsInput
  }

  export type DonorDonationUncheckedCreateInput = {
    donor_id: string
    donation_id: string
    amount: Decimal | DecimalJsLike | number | string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorDonationUpdateInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutDonationsNestedInput
    donation?: DonationUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorDonationUncheckedUpdateInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    donation_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorDonationCreateManyInput = {
    donor_id: string
    donation_id: string
    amount: Decimal | DecimalJsLike | number | string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorDonationUpdateManyMutationInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorDonationUncheckedUpdateManyInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    donation_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagCreateInput = {
    created_at?: Date | string
    donor: DonorCreateNestedOneWithoutTagsInput
    tag: TagCreateNestedOneWithoutDonorsInput
  }

  export type DonorTagUncheckedCreateInput = {
    donor_id: string
    tag_id: string
    created_at?: Date | string
  }

  export type DonorTagUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutTagsNestedInput
    tag?: TagUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorTagUncheckedUpdateInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    tag_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagCreateManyInput = {
    donor_id: string
    tag_id: string
    created_at?: Date | string
  }

  export type DonorTagUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagUncheckedUpdateManyInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    tag_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InterestDomainCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorInterestDomainCreateNestedManyWithoutInterest_domainInput
  }

  export type InterestDomainUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorInterestDomainUncheckedCreateNestedManyWithoutInterest_domainInput
  }

  export type InterestDomainUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorInterestDomainUpdateManyWithoutInterest_domainNestedInput
  }

  export type InterestDomainUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorInterestDomainUncheckedUpdateManyWithoutInterest_domainNestedInput
  }

  export type InterestDomainCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type InterestDomainUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InterestDomainUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorInterestDomainCreateInput = {
    level?: number
    created_at?: Date | string
    updated_at?: Date | string
    donor: DonorCreateNestedOneWithoutInterest_domainsInput
    interest_domain: InterestDomainCreateNestedOneWithoutDonorsInput
  }

  export type DonorInterestDomainUncheckedCreateInput = {
    donor_id: string
    interest_domain_id: string
    level?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorInterestDomainUpdateInput = {
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutInterest_domainsNestedInput
    interest_domain?: InterestDomainUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorInterestDomainUncheckedUpdateInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    interest_domain_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorInterestDomainCreateManyInput = {
    donor_id: string
    interest_domain_id: string
    level?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorInterestDomainUpdateManyMutationInput = {
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorInterestDomainUncheckedUpdateManyInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    interest_domain_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationCreateInput = {
    id?: string
    type: string
    direction: string
    subject?: string | null
    content?: string | null
    status: string
    communication_date: Date | string
    response_required?: boolean
    response_received?: boolean
    response_date?: Date | string | null
    notes?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    donor: DonorCreateNestedOneWithoutCommunicationsInput
  }

  export type CommunicationUncheckedCreateInput = {
    id?: string
    donor_id: string
    type: string
    direction: string
    subject?: string | null
    content?: string | null
    status: string
    communication_date: Date | string
    response_required?: boolean
    response_received?: boolean
    response_date?: Date | string | null
    notes?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CommunicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    communication_date?: DateTimeFieldUpdateOperationsInput | Date | string
    response_required?: BoolFieldUpdateOperationsInput | boolean
    response_received?: BoolFieldUpdateOperationsInput | boolean
    response_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutCommunicationsNestedInput
  }

  export type CommunicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    donor_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    communication_date?: DateTimeFieldUpdateOperationsInput | Date | string
    response_required?: BoolFieldUpdateOperationsInput | boolean
    response_received?: BoolFieldUpdateOperationsInput | boolean
    response_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationCreateManyInput = {
    id?: string
    donor_id: string
    type: string
    direction: string
    subject?: string | null
    content?: string | null
    status: string
    communication_date: Date | string
    response_required?: boolean
    response_received?: boolean
    response_date?: Date | string | null
    notes?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CommunicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    communication_date?: DateTimeFieldUpdateOperationsInput | Date | string
    response_required?: BoolFieldUpdateOperationsInput | boolean
    response_received?: BoolFieldUpdateOperationsInput | boolean
    response_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    donor_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    communication_date?: DateTimeFieldUpdateOperationsInput | Date | string
    response_required?: BoolFieldUpdateOperationsInput | boolean
    response_received?: BoolFieldUpdateOperationsInput | boolean
    response_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    createdAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    createdAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    createdAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DonorListRelationFilter = {
    every?: DonorWhereInput
    some?: DonorWhereInput
    none?: DonorWhereInput
  }

  export type DonorDonationListRelationFilter = {
    every?: DonorDonationWhereInput
    some?: DonorDonationWhereInput
    none?: DonorDonationWhereInput
  }

  export type DonorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DonorDonationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DonationOrderByRelevanceInput = {
    fields: DonationOrderByRelevanceFieldEnum | DonationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DonationCountOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    donation_date?: SortOrder
    donation_type?: SortOrder
    payment_method?: SortOrder
    status?: SortOrder
    campaign_id?: SortOrder
    event_id?: SortOrder
    notes?: SortOrder
    is_anonymous?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonationAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type DonationMaxOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    donation_date?: SortOrder
    donation_type?: SortOrder
    payment_method?: SortOrder
    status?: SortOrder
    campaign_id?: SortOrder
    event_id?: SortOrder
    notes?: SortOrder
    is_anonymous?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonationMinOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    donation_date?: SortOrder
    donation_type?: SortOrder
    payment_method?: SortOrder
    status?: SortOrder
    campaign_id?: SortOrder
    event_id?: SortOrder
    notes?: SortOrder
    is_anonymous?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonationSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DonorTagListRelationFilter = {
    every?: DonorTagWhereInput
    some?: DonorTagWhereInput
    none?: DonorTagWhereInput
  }

  export type DonorTagOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TagOrderByRelevanceInput = {
    fields: TagOrderByRelevanceFieldEnum | TagOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TagCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    color?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TagMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    color?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type TagMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    color?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DonationNullableScalarRelationFilter = {
    is?: DonationWhereInput | null
    isNot?: DonationWhereInput | null
  }

  export type DonorInterestDomainListRelationFilter = {
    every?: DonorInterestDomainWhereInput
    some?: DonorInterestDomainWhereInput
    none?: DonorInterestDomainWhereInput
  }

  export type DonorNullableScalarRelationFilter = {
    is?: DonorWhereInput | null
    isNot?: DonorWhereInput | null
  }

  export type CommunicationListRelationFilter = {
    every?: CommunicationWhereInput
    some?: CommunicationWhereInput
    none?: CommunicationWhereInput
  }

  export type DonorInterestDomainOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommunicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DonorOrderByRelevanceInput = {
    fields: DonorOrderByRelevanceFieldEnum | DonorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DonorCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    nick_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    organization_name?: SortOrder
    gender?: SortOrder
    age?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postal_code?: SortOrder
    country?: SortOrder
    registration_date?: SortOrder
    last_donation_id?: SortOrder
    last_donation_date?: SortOrder
    total_donation_amount?: SortOrder
    total_donations_count?: SortOrder
    anonymous_donation_preference?: SortOrder
    is_merged?: SortOrder
    is_company?: SortOrder
    merge_to_donor_id?: SortOrder
    contact_phone_type?: SortOrder
    phone_restrictions?: SortOrder
    email_restrictions?: SortOrder
    communication_restrictions?: SortOrder
    subscription_events_in_person?: SortOrder
    subscription_events_magazine?: SortOrder
    communication_preference?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonorAvgOrderByAggregateInput = {
    age?: SortOrder
    total_donation_amount?: SortOrder
    total_donations_count?: SortOrder
  }

  export type DonorMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    nick_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    organization_name?: SortOrder
    gender?: SortOrder
    age?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postal_code?: SortOrder
    country?: SortOrder
    registration_date?: SortOrder
    last_donation_id?: SortOrder
    last_donation_date?: SortOrder
    total_donation_amount?: SortOrder
    total_donations_count?: SortOrder
    anonymous_donation_preference?: SortOrder
    is_merged?: SortOrder
    is_company?: SortOrder
    merge_to_donor_id?: SortOrder
    contact_phone_type?: SortOrder
    phone_restrictions?: SortOrder
    email_restrictions?: SortOrder
    communication_restrictions?: SortOrder
    subscription_events_in_person?: SortOrder
    subscription_events_magazine?: SortOrder
    communication_preference?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonorMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    nick_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    organization_name?: SortOrder
    gender?: SortOrder
    age?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postal_code?: SortOrder
    country?: SortOrder
    registration_date?: SortOrder
    last_donation_id?: SortOrder
    last_donation_date?: SortOrder
    total_donation_amount?: SortOrder
    total_donations_count?: SortOrder
    anonymous_donation_preference?: SortOrder
    is_merged?: SortOrder
    is_company?: SortOrder
    merge_to_donor_id?: SortOrder
    contact_phone_type?: SortOrder
    phone_restrictions?: SortOrder
    email_restrictions?: SortOrder
    communication_restrictions?: SortOrder
    subscription_events_in_person?: SortOrder
    subscription_events_magazine?: SortOrder
    communication_preference?: SortOrder
    is_deleted?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonorSumOrderByAggregateInput = {
    age?: SortOrder
    total_donation_amount?: SortOrder
    total_donations_count?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DonorScalarRelationFilter = {
    is?: DonorWhereInput
    isNot?: DonorWhereInput
  }

  export type DonationScalarRelationFilter = {
    is?: DonationWhereInput
    isNot?: DonationWhereInput
  }

  export type DonorDonationOrderByRelevanceInput = {
    fields: DonorDonationOrderByRelevanceFieldEnum | DonorDonationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DonorDonationDonor_idDonation_idCompoundUniqueInput = {
    donor_id: string
    donation_id: string
  }

  export type DonorDonationCountOrderByAggregateInput = {
    donor_id?: SortOrder
    donation_id?: SortOrder
    amount?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonorDonationAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type DonorDonationMaxOrderByAggregateInput = {
    donor_id?: SortOrder
    donation_id?: SortOrder
    amount?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonorDonationMinOrderByAggregateInput = {
    donor_id?: SortOrder
    donation_id?: SortOrder
    amount?: SortOrder
    is_primary?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonorDonationSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type TagScalarRelationFilter = {
    is?: TagWhereInput
    isNot?: TagWhereInput
  }

  export type DonorTagOrderByRelevanceInput = {
    fields: DonorTagOrderByRelevanceFieldEnum | DonorTagOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DonorTagDonor_idTag_idCompoundUniqueInput = {
    donor_id: string
    tag_id: string
  }

  export type DonorTagCountOrderByAggregateInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
  }

  export type DonorTagMaxOrderByAggregateInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
  }

  export type DonorTagMinOrderByAggregateInput = {
    donor_id?: SortOrder
    tag_id?: SortOrder
    created_at?: SortOrder
  }

  export type InterestDomainOrderByRelevanceInput = {
    fields: InterestDomainOrderByRelevanceFieldEnum | InterestDomainOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type InterestDomainCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type InterestDomainMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type InterestDomainMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type InterestDomainScalarRelationFilter = {
    is?: InterestDomainWhereInput
    isNot?: InterestDomainWhereInput
  }

  export type DonorInterestDomainOrderByRelevanceInput = {
    fields: DonorInterestDomainOrderByRelevanceFieldEnum | DonorInterestDomainOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DonorInterestDomainDonor_idInterest_domain_idCompoundUniqueInput = {
    donor_id: string
    interest_domain_id: string
  }

  export type DonorInterestDomainCountOrderByAggregateInput = {
    donor_id?: SortOrder
    interest_domain_id?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonorInterestDomainAvgOrderByAggregateInput = {
    level?: SortOrder
  }

  export type DonorInterestDomainMaxOrderByAggregateInput = {
    donor_id?: SortOrder
    interest_domain_id?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonorInterestDomainMinOrderByAggregateInput = {
    donor_id?: SortOrder
    interest_domain_id?: SortOrder
    level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DonorInterestDomainSumOrderByAggregateInput = {
    level?: SortOrder
  }

  export type CommunicationOrderByRelevanceInput = {
    fields: CommunicationOrderByRelevanceFieldEnum | CommunicationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CommunicationCountOrderByAggregateInput = {
    id?: SortOrder
    donor_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    subject?: SortOrder
    content?: SortOrder
    status?: SortOrder
    communication_date?: SortOrder
    response_required?: SortOrder
    response_received?: SortOrder
    response_date?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CommunicationMaxOrderByAggregateInput = {
    id?: SortOrder
    donor_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    subject?: SortOrder
    content?: SortOrder
    status?: SortOrder
    communication_date?: SortOrder
    response_required?: SortOrder
    response_received?: SortOrder
    response_date?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CommunicationMinOrderByAggregateInput = {
    id?: SortOrder
    donor_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    subject?: SortOrder
    content?: SortOrder
    status?: SortOrder
    communication_date?: SortOrder
    response_required?: SortOrder
    response_received?: SortOrder
    response_date?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DonorCreateNestedManyWithoutLast_donationInput = {
    create?: XOR<DonorCreateWithoutLast_donationInput, DonorUncheckedCreateWithoutLast_donationInput> | DonorCreateWithoutLast_donationInput[] | DonorUncheckedCreateWithoutLast_donationInput[]
    connectOrCreate?: DonorCreateOrConnectWithoutLast_donationInput | DonorCreateOrConnectWithoutLast_donationInput[]
    createMany?: DonorCreateManyLast_donationInputEnvelope
    connect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
  }

  export type DonorDonationCreateNestedManyWithoutDonationInput = {
    create?: XOR<DonorDonationCreateWithoutDonationInput, DonorDonationUncheckedCreateWithoutDonationInput> | DonorDonationCreateWithoutDonationInput[] | DonorDonationUncheckedCreateWithoutDonationInput[]
    connectOrCreate?: DonorDonationCreateOrConnectWithoutDonationInput | DonorDonationCreateOrConnectWithoutDonationInput[]
    createMany?: DonorDonationCreateManyDonationInputEnvelope
    connect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
  }

  export type DonorUncheckedCreateNestedManyWithoutLast_donationInput = {
    create?: XOR<DonorCreateWithoutLast_donationInput, DonorUncheckedCreateWithoutLast_donationInput> | DonorCreateWithoutLast_donationInput[] | DonorUncheckedCreateWithoutLast_donationInput[]
    connectOrCreate?: DonorCreateOrConnectWithoutLast_donationInput | DonorCreateOrConnectWithoutLast_donationInput[]
    createMany?: DonorCreateManyLast_donationInputEnvelope
    connect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
  }

  export type DonorDonationUncheckedCreateNestedManyWithoutDonationInput = {
    create?: XOR<DonorDonationCreateWithoutDonationInput, DonorDonationUncheckedCreateWithoutDonationInput> | DonorDonationCreateWithoutDonationInput[] | DonorDonationUncheckedCreateWithoutDonationInput[]
    connectOrCreate?: DonorDonationCreateOrConnectWithoutDonationInput | DonorDonationCreateOrConnectWithoutDonationInput[]
    createMany?: DonorDonationCreateManyDonationInputEnvelope
    connect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DonorUpdateManyWithoutLast_donationNestedInput = {
    create?: XOR<DonorCreateWithoutLast_donationInput, DonorUncheckedCreateWithoutLast_donationInput> | DonorCreateWithoutLast_donationInput[] | DonorUncheckedCreateWithoutLast_donationInput[]
    connectOrCreate?: DonorCreateOrConnectWithoutLast_donationInput | DonorCreateOrConnectWithoutLast_donationInput[]
    upsert?: DonorUpsertWithWhereUniqueWithoutLast_donationInput | DonorUpsertWithWhereUniqueWithoutLast_donationInput[]
    createMany?: DonorCreateManyLast_donationInputEnvelope
    set?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    disconnect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    delete?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    connect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    update?: DonorUpdateWithWhereUniqueWithoutLast_donationInput | DonorUpdateWithWhereUniqueWithoutLast_donationInput[]
    updateMany?: DonorUpdateManyWithWhereWithoutLast_donationInput | DonorUpdateManyWithWhereWithoutLast_donationInput[]
    deleteMany?: DonorScalarWhereInput | DonorScalarWhereInput[]
  }

  export type DonorDonationUpdateManyWithoutDonationNestedInput = {
    create?: XOR<DonorDonationCreateWithoutDonationInput, DonorDonationUncheckedCreateWithoutDonationInput> | DonorDonationCreateWithoutDonationInput[] | DonorDonationUncheckedCreateWithoutDonationInput[]
    connectOrCreate?: DonorDonationCreateOrConnectWithoutDonationInput | DonorDonationCreateOrConnectWithoutDonationInput[]
    upsert?: DonorDonationUpsertWithWhereUniqueWithoutDonationInput | DonorDonationUpsertWithWhereUniqueWithoutDonationInput[]
    createMany?: DonorDonationCreateManyDonationInputEnvelope
    set?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    disconnect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    delete?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    connect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    update?: DonorDonationUpdateWithWhereUniqueWithoutDonationInput | DonorDonationUpdateWithWhereUniqueWithoutDonationInput[]
    updateMany?: DonorDonationUpdateManyWithWhereWithoutDonationInput | DonorDonationUpdateManyWithWhereWithoutDonationInput[]
    deleteMany?: DonorDonationScalarWhereInput | DonorDonationScalarWhereInput[]
  }

  export type DonorUncheckedUpdateManyWithoutLast_donationNestedInput = {
    create?: XOR<DonorCreateWithoutLast_donationInput, DonorUncheckedCreateWithoutLast_donationInput> | DonorCreateWithoutLast_donationInput[] | DonorUncheckedCreateWithoutLast_donationInput[]
    connectOrCreate?: DonorCreateOrConnectWithoutLast_donationInput | DonorCreateOrConnectWithoutLast_donationInput[]
    upsert?: DonorUpsertWithWhereUniqueWithoutLast_donationInput | DonorUpsertWithWhereUniqueWithoutLast_donationInput[]
    createMany?: DonorCreateManyLast_donationInputEnvelope
    set?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    disconnect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    delete?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    connect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    update?: DonorUpdateWithWhereUniqueWithoutLast_donationInput | DonorUpdateWithWhereUniqueWithoutLast_donationInput[]
    updateMany?: DonorUpdateManyWithWhereWithoutLast_donationInput | DonorUpdateManyWithWhereWithoutLast_donationInput[]
    deleteMany?: DonorScalarWhereInput | DonorScalarWhereInput[]
  }

  export type DonorDonationUncheckedUpdateManyWithoutDonationNestedInput = {
    create?: XOR<DonorDonationCreateWithoutDonationInput, DonorDonationUncheckedCreateWithoutDonationInput> | DonorDonationCreateWithoutDonationInput[] | DonorDonationUncheckedCreateWithoutDonationInput[]
    connectOrCreate?: DonorDonationCreateOrConnectWithoutDonationInput | DonorDonationCreateOrConnectWithoutDonationInput[]
    upsert?: DonorDonationUpsertWithWhereUniqueWithoutDonationInput | DonorDonationUpsertWithWhereUniqueWithoutDonationInput[]
    createMany?: DonorDonationCreateManyDonationInputEnvelope
    set?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    disconnect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    delete?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    connect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    update?: DonorDonationUpdateWithWhereUniqueWithoutDonationInput | DonorDonationUpdateWithWhereUniqueWithoutDonationInput[]
    updateMany?: DonorDonationUpdateManyWithWhereWithoutDonationInput | DonorDonationUpdateManyWithWhereWithoutDonationInput[]
    deleteMany?: DonorDonationScalarWhereInput | DonorDonationScalarWhereInput[]
  }

  export type DonorTagCreateNestedManyWithoutTagInput = {
    create?: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput> | DonorTagCreateWithoutTagInput[] | DonorTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutTagInput | DonorTagCreateOrConnectWithoutTagInput[]
    createMany?: DonorTagCreateManyTagInputEnvelope
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
  }

  export type DonorTagUncheckedCreateNestedManyWithoutTagInput = {
    create?: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput> | DonorTagCreateWithoutTagInput[] | DonorTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutTagInput | DonorTagCreateOrConnectWithoutTagInput[]
    createMany?: DonorTagCreateManyTagInputEnvelope
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
  }

  export type DonorTagUpdateManyWithoutTagNestedInput = {
    create?: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput> | DonorTagCreateWithoutTagInput[] | DonorTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutTagInput | DonorTagCreateOrConnectWithoutTagInput[]
    upsert?: DonorTagUpsertWithWhereUniqueWithoutTagInput | DonorTagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: DonorTagCreateManyTagInputEnvelope
    set?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    disconnect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    delete?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    update?: DonorTagUpdateWithWhereUniqueWithoutTagInput | DonorTagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: DonorTagUpdateManyWithWhereWithoutTagInput | DonorTagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
  }

  export type DonorTagUncheckedUpdateManyWithoutTagNestedInput = {
    create?: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput> | DonorTagCreateWithoutTagInput[] | DonorTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutTagInput | DonorTagCreateOrConnectWithoutTagInput[]
    upsert?: DonorTagUpsertWithWhereUniqueWithoutTagInput | DonorTagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: DonorTagCreateManyTagInputEnvelope
    set?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    disconnect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    delete?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    update?: DonorTagUpdateWithWhereUniqueWithoutTagInput | DonorTagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: DonorTagUpdateManyWithWhereWithoutTagInput | DonorTagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
  }

  export type DonationCreateNestedOneWithoutDonorsLastDonationInput = {
    create?: XOR<DonationCreateWithoutDonorsLastDonationInput, DonationUncheckedCreateWithoutDonorsLastDonationInput>
    connectOrCreate?: DonationCreateOrConnectWithoutDonorsLastDonationInput
    connect?: DonationWhereUniqueInput
  }

  export type DonorDonationCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorDonationCreateWithoutDonorInput, DonorDonationUncheckedCreateWithoutDonorInput> | DonorDonationCreateWithoutDonorInput[] | DonorDonationUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorDonationCreateOrConnectWithoutDonorInput | DonorDonationCreateOrConnectWithoutDonorInput[]
    createMany?: DonorDonationCreateManyDonorInputEnvelope
    connect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
  }

  export type DonorInterestDomainCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorInterestDomainCreateWithoutDonorInput, DonorInterestDomainUncheckedCreateWithoutDonorInput> | DonorInterestDomainCreateWithoutDonorInput[] | DonorInterestDomainUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorInterestDomainCreateOrConnectWithoutDonorInput | DonorInterestDomainCreateOrConnectWithoutDonorInput[]
    createMany?: DonorInterestDomainCreateManyDonorInputEnvelope
    connect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
  }

  export type DonorCreateNestedOneWithoutMerged_donorsInput = {
    create?: XOR<DonorCreateWithoutMerged_donorsInput, DonorUncheckedCreateWithoutMerged_donorsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutMerged_donorsInput
    connect?: DonorWhereUniqueInput
  }

  export type DonorCreateNestedManyWithoutMerge_to_donorInput = {
    create?: XOR<DonorCreateWithoutMerge_to_donorInput, DonorUncheckedCreateWithoutMerge_to_donorInput> | DonorCreateWithoutMerge_to_donorInput[] | DonorUncheckedCreateWithoutMerge_to_donorInput[]
    connectOrCreate?: DonorCreateOrConnectWithoutMerge_to_donorInput | DonorCreateOrConnectWithoutMerge_to_donorInput[]
    createMany?: DonorCreateManyMerge_to_donorInputEnvelope
    connect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
  }

  export type DonorTagCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput> | DonorTagCreateWithoutDonorInput[] | DonorTagUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutDonorInput | DonorTagCreateOrConnectWithoutDonorInput[]
    createMany?: DonorTagCreateManyDonorInputEnvelope
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
  }

  export type CommunicationCreateNestedManyWithoutDonorInput = {
    create?: XOR<CommunicationCreateWithoutDonorInput, CommunicationUncheckedCreateWithoutDonorInput> | CommunicationCreateWithoutDonorInput[] | CommunicationUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: CommunicationCreateOrConnectWithoutDonorInput | CommunicationCreateOrConnectWithoutDonorInput[]
    createMany?: CommunicationCreateManyDonorInputEnvelope
    connect?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
  }

  export type DonorDonationUncheckedCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorDonationCreateWithoutDonorInput, DonorDonationUncheckedCreateWithoutDonorInput> | DonorDonationCreateWithoutDonorInput[] | DonorDonationUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorDonationCreateOrConnectWithoutDonorInput | DonorDonationCreateOrConnectWithoutDonorInput[]
    createMany?: DonorDonationCreateManyDonorInputEnvelope
    connect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
  }

  export type DonorInterestDomainUncheckedCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorInterestDomainCreateWithoutDonorInput, DonorInterestDomainUncheckedCreateWithoutDonorInput> | DonorInterestDomainCreateWithoutDonorInput[] | DonorInterestDomainUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorInterestDomainCreateOrConnectWithoutDonorInput | DonorInterestDomainCreateOrConnectWithoutDonorInput[]
    createMany?: DonorInterestDomainCreateManyDonorInputEnvelope
    connect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
  }

  export type DonorUncheckedCreateNestedManyWithoutMerge_to_donorInput = {
    create?: XOR<DonorCreateWithoutMerge_to_donorInput, DonorUncheckedCreateWithoutMerge_to_donorInput> | DonorCreateWithoutMerge_to_donorInput[] | DonorUncheckedCreateWithoutMerge_to_donorInput[]
    connectOrCreate?: DonorCreateOrConnectWithoutMerge_to_donorInput | DonorCreateOrConnectWithoutMerge_to_donorInput[]
    createMany?: DonorCreateManyMerge_to_donorInputEnvelope
    connect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
  }

  export type DonorTagUncheckedCreateNestedManyWithoutDonorInput = {
    create?: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput> | DonorTagCreateWithoutDonorInput[] | DonorTagUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutDonorInput | DonorTagCreateOrConnectWithoutDonorInput[]
    createMany?: DonorTagCreateManyDonorInputEnvelope
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
  }

  export type CommunicationUncheckedCreateNestedManyWithoutDonorInput = {
    create?: XOR<CommunicationCreateWithoutDonorInput, CommunicationUncheckedCreateWithoutDonorInput> | CommunicationCreateWithoutDonorInput[] | CommunicationUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: CommunicationCreateOrConnectWithoutDonorInput | CommunicationCreateOrConnectWithoutDonorInput[]
    createMany?: CommunicationCreateManyDonorInputEnvelope
    connect?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DonationUpdateOneWithoutDonorsLastDonationNestedInput = {
    create?: XOR<DonationCreateWithoutDonorsLastDonationInput, DonationUncheckedCreateWithoutDonorsLastDonationInput>
    connectOrCreate?: DonationCreateOrConnectWithoutDonorsLastDonationInput
    upsert?: DonationUpsertWithoutDonorsLastDonationInput
    disconnect?: DonationWhereInput | boolean
    delete?: DonationWhereInput | boolean
    connect?: DonationWhereUniqueInput
    update?: XOR<XOR<DonationUpdateToOneWithWhereWithoutDonorsLastDonationInput, DonationUpdateWithoutDonorsLastDonationInput>, DonationUncheckedUpdateWithoutDonorsLastDonationInput>
  }

  export type DonorDonationUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorDonationCreateWithoutDonorInput, DonorDonationUncheckedCreateWithoutDonorInput> | DonorDonationCreateWithoutDonorInput[] | DonorDonationUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorDonationCreateOrConnectWithoutDonorInput | DonorDonationCreateOrConnectWithoutDonorInput[]
    upsert?: DonorDonationUpsertWithWhereUniqueWithoutDonorInput | DonorDonationUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorDonationCreateManyDonorInputEnvelope
    set?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    disconnect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    delete?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    connect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    update?: DonorDonationUpdateWithWhereUniqueWithoutDonorInput | DonorDonationUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorDonationUpdateManyWithWhereWithoutDonorInput | DonorDonationUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorDonationScalarWhereInput | DonorDonationScalarWhereInput[]
  }

  export type DonorInterestDomainUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorInterestDomainCreateWithoutDonorInput, DonorInterestDomainUncheckedCreateWithoutDonorInput> | DonorInterestDomainCreateWithoutDonorInput[] | DonorInterestDomainUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorInterestDomainCreateOrConnectWithoutDonorInput | DonorInterestDomainCreateOrConnectWithoutDonorInput[]
    upsert?: DonorInterestDomainUpsertWithWhereUniqueWithoutDonorInput | DonorInterestDomainUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorInterestDomainCreateManyDonorInputEnvelope
    set?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    disconnect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    delete?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    connect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    update?: DonorInterestDomainUpdateWithWhereUniqueWithoutDonorInput | DonorInterestDomainUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorInterestDomainUpdateManyWithWhereWithoutDonorInput | DonorInterestDomainUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorInterestDomainScalarWhereInput | DonorInterestDomainScalarWhereInput[]
  }

  export type DonorUpdateOneWithoutMerged_donorsNestedInput = {
    create?: XOR<DonorCreateWithoutMerged_donorsInput, DonorUncheckedCreateWithoutMerged_donorsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutMerged_donorsInput
    upsert?: DonorUpsertWithoutMerged_donorsInput
    disconnect?: DonorWhereInput | boolean
    delete?: DonorWhereInput | boolean
    connect?: DonorWhereUniqueInput
    update?: XOR<XOR<DonorUpdateToOneWithWhereWithoutMerged_donorsInput, DonorUpdateWithoutMerged_donorsInput>, DonorUncheckedUpdateWithoutMerged_donorsInput>
  }

  export type DonorUpdateManyWithoutMerge_to_donorNestedInput = {
    create?: XOR<DonorCreateWithoutMerge_to_donorInput, DonorUncheckedCreateWithoutMerge_to_donorInput> | DonorCreateWithoutMerge_to_donorInput[] | DonorUncheckedCreateWithoutMerge_to_donorInput[]
    connectOrCreate?: DonorCreateOrConnectWithoutMerge_to_donorInput | DonorCreateOrConnectWithoutMerge_to_donorInput[]
    upsert?: DonorUpsertWithWhereUniqueWithoutMerge_to_donorInput | DonorUpsertWithWhereUniqueWithoutMerge_to_donorInput[]
    createMany?: DonorCreateManyMerge_to_donorInputEnvelope
    set?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    disconnect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    delete?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    connect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    update?: DonorUpdateWithWhereUniqueWithoutMerge_to_donorInput | DonorUpdateWithWhereUniqueWithoutMerge_to_donorInput[]
    updateMany?: DonorUpdateManyWithWhereWithoutMerge_to_donorInput | DonorUpdateManyWithWhereWithoutMerge_to_donorInput[]
    deleteMany?: DonorScalarWhereInput | DonorScalarWhereInput[]
  }

  export type DonorTagUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput> | DonorTagCreateWithoutDonorInput[] | DonorTagUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutDonorInput | DonorTagCreateOrConnectWithoutDonorInput[]
    upsert?: DonorTagUpsertWithWhereUniqueWithoutDonorInput | DonorTagUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorTagCreateManyDonorInputEnvelope
    set?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    disconnect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    delete?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    update?: DonorTagUpdateWithWhereUniqueWithoutDonorInput | DonorTagUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorTagUpdateManyWithWhereWithoutDonorInput | DonorTagUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
  }

  export type CommunicationUpdateManyWithoutDonorNestedInput = {
    create?: XOR<CommunicationCreateWithoutDonorInput, CommunicationUncheckedCreateWithoutDonorInput> | CommunicationCreateWithoutDonorInput[] | CommunicationUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: CommunicationCreateOrConnectWithoutDonorInput | CommunicationCreateOrConnectWithoutDonorInput[]
    upsert?: CommunicationUpsertWithWhereUniqueWithoutDonorInput | CommunicationUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: CommunicationCreateManyDonorInputEnvelope
    set?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
    disconnect?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
    delete?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
    connect?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
    update?: CommunicationUpdateWithWhereUniqueWithoutDonorInput | CommunicationUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: CommunicationUpdateManyWithWhereWithoutDonorInput | CommunicationUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: CommunicationScalarWhereInput | CommunicationScalarWhereInput[]
  }

  export type DonorDonationUncheckedUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorDonationCreateWithoutDonorInput, DonorDonationUncheckedCreateWithoutDonorInput> | DonorDonationCreateWithoutDonorInput[] | DonorDonationUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorDonationCreateOrConnectWithoutDonorInput | DonorDonationCreateOrConnectWithoutDonorInput[]
    upsert?: DonorDonationUpsertWithWhereUniqueWithoutDonorInput | DonorDonationUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorDonationCreateManyDonorInputEnvelope
    set?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    disconnect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    delete?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    connect?: DonorDonationWhereUniqueInput | DonorDonationWhereUniqueInput[]
    update?: DonorDonationUpdateWithWhereUniqueWithoutDonorInput | DonorDonationUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorDonationUpdateManyWithWhereWithoutDonorInput | DonorDonationUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorDonationScalarWhereInput | DonorDonationScalarWhereInput[]
  }

  export type DonorInterestDomainUncheckedUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorInterestDomainCreateWithoutDonorInput, DonorInterestDomainUncheckedCreateWithoutDonorInput> | DonorInterestDomainCreateWithoutDonorInput[] | DonorInterestDomainUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorInterestDomainCreateOrConnectWithoutDonorInput | DonorInterestDomainCreateOrConnectWithoutDonorInput[]
    upsert?: DonorInterestDomainUpsertWithWhereUniqueWithoutDonorInput | DonorInterestDomainUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorInterestDomainCreateManyDonorInputEnvelope
    set?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    disconnect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    delete?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    connect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    update?: DonorInterestDomainUpdateWithWhereUniqueWithoutDonorInput | DonorInterestDomainUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorInterestDomainUpdateManyWithWhereWithoutDonorInput | DonorInterestDomainUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorInterestDomainScalarWhereInput | DonorInterestDomainScalarWhereInput[]
  }

  export type DonorUncheckedUpdateManyWithoutMerge_to_donorNestedInput = {
    create?: XOR<DonorCreateWithoutMerge_to_donorInput, DonorUncheckedCreateWithoutMerge_to_donorInput> | DonorCreateWithoutMerge_to_donorInput[] | DonorUncheckedCreateWithoutMerge_to_donorInput[]
    connectOrCreate?: DonorCreateOrConnectWithoutMerge_to_donorInput | DonorCreateOrConnectWithoutMerge_to_donorInput[]
    upsert?: DonorUpsertWithWhereUniqueWithoutMerge_to_donorInput | DonorUpsertWithWhereUniqueWithoutMerge_to_donorInput[]
    createMany?: DonorCreateManyMerge_to_donorInputEnvelope
    set?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    disconnect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    delete?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    connect?: DonorWhereUniqueInput | DonorWhereUniqueInput[]
    update?: DonorUpdateWithWhereUniqueWithoutMerge_to_donorInput | DonorUpdateWithWhereUniqueWithoutMerge_to_donorInput[]
    updateMany?: DonorUpdateManyWithWhereWithoutMerge_to_donorInput | DonorUpdateManyWithWhereWithoutMerge_to_donorInput[]
    deleteMany?: DonorScalarWhereInput | DonorScalarWhereInput[]
  }

  export type DonorTagUncheckedUpdateManyWithoutDonorNestedInput = {
    create?: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput> | DonorTagCreateWithoutDonorInput[] | DonorTagUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: DonorTagCreateOrConnectWithoutDonorInput | DonorTagCreateOrConnectWithoutDonorInput[]
    upsert?: DonorTagUpsertWithWhereUniqueWithoutDonorInput | DonorTagUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: DonorTagCreateManyDonorInputEnvelope
    set?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    disconnect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    delete?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    connect?: DonorTagWhereUniqueInput | DonorTagWhereUniqueInput[]
    update?: DonorTagUpdateWithWhereUniqueWithoutDonorInput | DonorTagUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: DonorTagUpdateManyWithWhereWithoutDonorInput | DonorTagUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
  }

  export type CommunicationUncheckedUpdateManyWithoutDonorNestedInput = {
    create?: XOR<CommunicationCreateWithoutDonorInput, CommunicationUncheckedCreateWithoutDonorInput> | CommunicationCreateWithoutDonorInput[] | CommunicationUncheckedCreateWithoutDonorInput[]
    connectOrCreate?: CommunicationCreateOrConnectWithoutDonorInput | CommunicationCreateOrConnectWithoutDonorInput[]
    upsert?: CommunicationUpsertWithWhereUniqueWithoutDonorInput | CommunicationUpsertWithWhereUniqueWithoutDonorInput[]
    createMany?: CommunicationCreateManyDonorInputEnvelope
    set?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
    disconnect?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
    delete?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
    connect?: CommunicationWhereUniqueInput | CommunicationWhereUniqueInput[]
    update?: CommunicationUpdateWithWhereUniqueWithoutDonorInput | CommunicationUpdateWithWhereUniqueWithoutDonorInput[]
    updateMany?: CommunicationUpdateManyWithWhereWithoutDonorInput | CommunicationUpdateManyWithWhereWithoutDonorInput[]
    deleteMany?: CommunicationScalarWhereInput | CommunicationScalarWhereInput[]
  }

  export type DonorCreateNestedOneWithoutDonationsInput = {
    create?: XOR<DonorCreateWithoutDonationsInput, DonorUncheckedCreateWithoutDonationsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutDonationsInput
    connect?: DonorWhereUniqueInput
  }

  export type DonationCreateNestedOneWithoutDonorsInput = {
    create?: XOR<DonationCreateWithoutDonorsInput, DonationUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: DonationCreateOrConnectWithoutDonorsInput
    connect?: DonationWhereUniqueInput
  }

  export type DonorUpdateOneRequiredWithoutDonationsNestedInput = {
    create?: XOR<DonorCreateWithoutDonationsInput, DonorUncheckedCreateWithoutDonationsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutDonationsInput
    upsert?: DonorUpsertWithoutDonationsInput
    connect?: DonorWhereUniqueInput
    update?: XOR<XOR<DonorUpdateToOneWithWhereWithoutDonationsInput, DonorUpdateWithoutDonationsInput>, DonorUncheckedUpdateWithoutDonationsInput>
  }

  export type DonationUpdateOneRequiredWithoutDonorsNestedInput = {
    create?: XOR<DonationCreateWithoutDonorsInput, DonationUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: DonationCreateOrConnectWithoutDonorsInput
    upsert?: DonationUpsertWithoutDonorsInput
    connect?: DonationWhereUniqueInput
    update?: XOR<XOR<DonationUpdateToOneWithWhereWithoutDonorsInput, DonationUpdateWithoutDonorsInput>, DonationUncheckedUpdateWithoutDonorsInput>
  }

  export type DonorCreateNestedOneWithoutTagsInput = {
    create?: XOR<DonorCreateWithoutTagsInput, DonorUncheckedCreateWithoutTagsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutTagsInput
    connect?: DonorWhereUniqueInput
  }

  export type TagCreateNestedOneWithoutDonorsInput = {
    create?: XOR<TagCreateWithoutDonorsInput, TagUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: TagCreateOrConnectWithoutDonorsInput
    connect?: TagWhereUniqueInput
  }

  export type DonorUpdateOneRequiredWithoutTagsNestedInput = {
    create?: XOR<DonorCreateWithoutTagsInput, DonorUncheckedCreateWithoutTagsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutTagsInput
    upsert?: DonorUpsertWithoutTagsInput
    connect?: DonorWhereUniqueInput
    update?: XOR<XOR<DonorUpdateToOneWithWhereWithoutTagsInput, DonorUpdateWithoutTagsInput>, DonorUncheckedUpdateWithoutTagsInput>
  }

  export type TagUpdateOneRequiredWithoutDonorsNestedInput = {
    create?: XOR<TagCreateWithoutDonorsInput, TagUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: TagCreateOrConnectWithoutDonorsInput
    upsert?: TagUpsertWithoutDonorsInput
    connect?: TagWhereUniqueInput
    update?: XOR<XOR<TagUpdateToOneWithWhereWithoutDonorsInput, TagUpdateWithoutDonorsInput>, TagUncheckedUpdateWithoutDonorsInput>
  }

  export type DonorInterestDomainCreateNestedManyWithoutInterest_domainInput = {
    create?: XOR<DonorInterestDomainCreateWithoutInterest_domainInput, DonorInterestDomainUncheckedCreateWithoutInterest_domainInput> | DonorInterestDomainCreateWithoutInterest_domainInput[] | DonorInterestDomainUncheckedCreateWithoutInterest_domainInput[]
    connectOrCreate?: DonorInterestDomainCreateOrConnectWithoutInterest_domainInput | DonorInterestDomainCreateOrConnectWithoutInterest_domainInput[]
    createMany?: DonorInterestDomainCreateManyInterest_domainInputEnvelope
    connect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
  }

  export type DonorInterestDomainUncheckedCreateNestedManyWithoutInterest_domainInput = {
    create?: XOR<DonorInterestDomainCreateWithoutInterest_domainInput, DonorInterestDomainUncheckedCreateWithoutInterest_domainInput> | DonorInterestDomainCreateWithoutInterest_domainInput[] | DonorInterestDomainUncheckedCreateWithoutInterest_domainInput[]
    connectOrCreate?: DonorInterestDomainCreateOrConnectWithoutInterest_domainInput | DonorInterestDomainCreateOrConnectWithoutInterest_domainInput[]
    createMany?: DonorInterestDomainCreateManyInterest_domainInputEnvelope
    connect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
  }

  export type DonorInterestDomainUpdateManyWithoutInterest_domainNestedInput = {
    create?: XOR<DonorInterestDomainCreateWithoutInterest_domainInput, DonorInterestDomainUncheckedCreateWithoutInterest_domainInput> | DonorInterestDomainCreateWithoutInterest_domainInput[] | DonorInterestDomainUncheckedCreateWithoutInterest_domainInput[]
    connectOrCreate?: DonorInterestDomainCreateOrConnectWithoutInterest_domainInput | DonorInterestDomainCreateOrConnectWithoutInterest_domainInput[]
    upsert?: DonorInterestDomainUpsertWithWhereUniqueWithoutInterest_domainInput | DonorInterestDomainUpsertWithWhereUniqueWithoutInterest_domainInput[]
    createMany?: DonorInterestDomainCreateManyInterest_domainInputEnvelope
    set?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    disconnect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    delete?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    connect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    update?: DonorInterestDomainUpdateWithWhereUniqueWithoutInterest_domainInput | DonorInterestDomainUpdateWithWhereUniqueWithoutInterest_domainInput[]
    updateMany?: DonorInterestDomainUpdateManyWithWhereWithoutInterest_domainInput | DonorInterestDomainUpdateManyWithWhereWithoutInterest_domainInput[]
    deleteMany?: DonorInterestDomainScalarWhereInput | DonorInterestDomainScalarWhereInput[]
  }

  export type DonorInterestDomainUncheckedUpdateManyWithoutInterest_domainNestedInput = {
    create?: XOR<DonorInterestDomainCreateWithoutInterest_domainInput, DonorInterestDomainUncheckedCreateWithoutInterest_domainInput> | DonorInterestDomainCreateWithoutInterest_domainInput[] | DonorInterestDomainUncheckedCreateWithoutInterest_domainInput[]
    connectOrCreate?: DonorInterestDomainCreateOrConnectWithoutInterest_domainInput | DonorInterestDomainCreateOrConnectWithoutInterest_domainInput[]
    upsert?: DonorInterestDomainUpsertWithWhereUniqueWithoutInterest_domainInput | DonorInterestDomainUpsertWithWhereUniqueWithoutInterest_domainInput[]
    createMany?: DonorInterestDomainCreateManyInterest_domainInputEnvelope
    set?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    disconnect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    delete?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    connect?: DonorInterestDomainWhereUniqueInput | DonorInterestDomainWhereUniqueInput[]
    update?: DonorInterestDomainUpdateWithWhereUniqueWithoutInterest_domainInput | DonorInterestDomainUpdateWithWhereUniqueWithoutInterest_domainInput[]
    updateMany?: DonorInterestDomainUpdateManyWithWhereWithoutInterest_domainInput | DonorInterestDomainUpdateManyWithWhereWithoutInterest_domainInput[]
    deleteMany?: DonorInterestDomainScalarWhereInput | DonorInterestDomainScalarWhereInput[]
  }

  export type DonorCreateNestedOneWithoutInterest_domainsInput = {
    create?: XOR<DonorCreateWithoutInterest_domainsInput, DonorUncheckedCreateWithoutInterest_domainsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutInterest_domainsInput
    connect?: DonorWhereUniqueInput
  }

  export type InterestDomainCreateNestedOneWithoutDonorsInput = {
    create?: XOR<InterestDomainCreateWithoutDonorsInput, InterestDomainUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: InterestDomainCreateOrConnectWithoutDonorsInput
    connect?: InterestDomainWhereUniqueInput
  }

  export type DonorUpdateOneRequiredWithoutInterest_domainsNestedInput = {
    create?: XOR<DonorCreateWithoutInterest_domainsInput, DonorUncheckedCreateWithoutInterest_domainsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutInterest_domainsInput
    upsert?: DonorUpsertWithoutInterest_domainsInput
    connect?: DonorWhereUniqueInput
    update?: XOR<XOR<DonorUpdateToOneWithWhereWithoutInterest_domainsInput, DonorUpdateWithoutInterest_domainsInput>, DonorUncheckedUpdateWithoutInterest_domainsInput>
  }

  export type InterestDomainUpdateOneRequiredWithoutDonorsNestedInput = {
    create?: XOR<InterestDomainCreateWithoutDonorsInput, InterestDomainUncheckedCreateWithoutDonorsInput>
    connectOrCreate?: InterestDomainCreateOrConnectWithoutDonorsInput
    upsert?: InterestDomainUpsertWithoutDonorsInput
    connect?: InterestDomainWhereUniqueInput
    update?: XOR<XOR<InterestDomainUpdateToOneWithWhereWithoutDonorsInput, InterestDomainUpdateWithoutDonorsInput>, InterestDomainUncheckedUpdateWithoutDonorsInput>
  }

  export type DonorCreateNestedOneWithoutCommunicationsInput = {
    create?: XOR<DonorCreateWithoutCommunicationsInput, DonorUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutCommunicationsInput
    connect?: DonorWhereUniqueInput
  }

  export type DonorUpdateOneRequiredWithoutCommunicationsNestedInput = {
    create?: XOR<DonorCreateWithoutCommunicationsInput, DonorUncheckedCreateWithoutCommunicationsInput>
    connectOrCreate?: DonorCreateOrConnectWithoutCommunicationsInput
    upsert?: DonorUpsertWithoutCommunicationsInput
    connect?: DonorWhereUniqueInput
    update?: XOR<XOR<DonorUpdateToOneWithWhereWithoutCommunicationsInput, DonorUpdateWithoutCommunicationsInput>, DonorUncheckedUpdateWithoutCommunicationsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type DonorCreateWithoutLast_donationInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donations?: DonorDonationCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainCreateNestedManyWithoutDonorInput
    merge_to_donor?: DonorCreateNestedOneWithoutMerged_donorsInput
    merged_donors?: DonorCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagCreateNestedManyWithoutDonorInput
    communications?: CommunicationCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateWithoutLast_donationInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: string | null
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donations?: DonorDonationUncheckedCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainUncheckedCreateNestedManyWithoutDonorInput
    merged_donors?: DonorUncheckedCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagUncheckedCreateNestedManyWithoutDonorInput
    communications?: CommunicationUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorCreateOrConnectWithoutLast_donationInput = {
    where: DonorWhereUniqueInput
    create: XOR<DonorCreateWithoutLast_donationInput, DonorUncheckedCreateWithoutLast_donationInput>
  }

  export type DonorCreateManyLast_donationInputEnvelope = {
    data: DonorCreateManyLast_donationInput | DonorCreateManyLast_donationInput[]
    skipDuplicates?: boolean
  }

  export type DonorDonationCreateWithoutDonationInput = {
    amount: Decimal | DecimalJsLike | number | string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    donor: DonorCreateNestedOneWithoutDonationsInput
  }

  export type DonorDonationUncheckedCreateWithoutDonationInput = {
    donor_id: string
    amount: Decimal | DecimalJsLike | number | string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorDonationCreateOrConnectWithoutDonationInput = {
    where: DonorDonationWhereUniqueInput
    create: XOR<DonorDonationCreateWithoutDonationInput, DonorDonationUncheckedCreateWithoutDonationInput>
  }

  export type DonorDonationCreateManyDonationInputEnvelope = {
    data: DonorDonationCreateManyDonationInput | DonorDonationCreateManyDonationInput[]
    skipDuplicates?: boolean
  }

  export type DonorUpsertWithWhereUniqueWithoutLast_donationInput = {
    where: DonorWhereUniqueInput
    update: XOR<DonorUpdateWithoutLast_donationInput, DonorUncheckedUpdateWithoutLast_donationInput>
    create: XOR<DonorCreateWithoutLast_donationInput, DonorUncheckedCreateWithoutLast_donationInput>
  }

  export type DonorUpdateWithWhereUniqueWithoutLast_donationInput = {
    where: DonorWhereUniqueInput
    data: XOR<DonorUpdateWithoutLast_donationInput, DonorUncheckedUpdateWithoutLast_donationInput>
  }

  export type DonorUpdateManyWithWhereWithoutLast_donationInput = {
    where: DonorScalarWhereInput
    data: XOR<DonorUpdateManyMutationInput, DonorUncheckedUpdateManyWithoutLast_donationInput>
  }

  export type DonorScalarWhereInput = {
    AND?: DonorScalarWhereInput | DonorScalarWhereInput[]
    OR?: DonorScalarWhereInput[]
    NOT?: DonorScalarWhereInput | DonorScalarWhereInput[]
    id?: StringFilter<"Donor"> | string
    first_name?: StringNullableFilter<"Donor"> | string | null
    nick_name?: StringNullableFilter<"Donor"> | string | null
    middle_name?: StringNullableFilter<"Donor"> | string | null
    last_name?: StringNullableFilter<"Donor"> | string | null
    organization_name?: StringNullableFilter<"Donor"> | string | null
    gender?: StringNullableFilter<"Donor"> | string | null
    age?: IntNullableFilter<"Donor"> | number | null
    email?: StringNullableFilter<"Donor"> | string | null
    phone_number?: StringNullableFilter<"Donor"> | string | null
    address?: StringNullableFilter<"Donor"> | string | null
    city?: StringNullableFilter<"Donor"> | string | null
    state?: StringNullableFilter<"Donor"> | string | null
    postal_code?: StringNullableFilter<"Donor"> | string | null
    country?: StringNullableFilter<"Donor"> | string | null
    registration_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    last_donation_id?: StringNullableFilter<"Donor"> | string | null
    last_donation_date?: DateTimeNullableFilter<"Donor"> | Date | string | null
    total_donation_amount?: DecimalFilter<"Donor"> | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFilter<"Donor"> | number
    anonymous_donation_preference?: BoolFilter<"Donor"> | boolean
    is_merged?: BoolFilter<"Donor"> | boolean
    is_company?: BoolFilter<"Donor"> | boolean
    merge_to_donor_id?: StringNullableFilter<"Donor"> | string | null
    contact_phone_type?: StringNullableFilter<"Donor"> | string | null
    phone_restrictions?: StringNullableFilter<"Donor"> | string | null
    email_restrictions?: StringNullableFilter<"Donor"> | string | null
    communication_restrictions?: StringNullableFilter<"Donor"> | string | null
    subscription_events_in_person?: StringNullableFilter<"Donor"> | string | null
    subscription_events_magazine?: StringNullableFilter<"Donor"> | string | null
    communication_preference?: StringNullableFilter<"Donor"> | string | null
    is_deleted?: BoolFilter<"Donor"> | boolean
    deleted_at?: DateTimeNullableFilter<"Donor"> | Date | string | null
    created_at?: DateTimeFilter<"Donor"> | Date | string
    updated_at?: DateTimeFilter<"Donor"> | Date | string
  }

  export type DonorDonationUpsertWithWhereUniqueWithoutDonationInput = {
    where: DonorDonationWhereUniqueInput
    update: XOR<DonorDonationUpdateWithoutDonationInput, DonorDonationUncheckedUpdateWithoutDonationInput>
    create: XOR<DonorDonationCreateWithoutDonationInput, DonorDonationUncheckedCreateWithoutDonationInput>
  }

  export type DonorDonationUpdateWithWhereUniqueWithoutDonationInput = {
    where: DonorDonationWhereUniqueInput
    data: XOR<DonorDonationUpdateWithoutDonationInput, DonorDonationUncheckedUpdateWithoutDonationInput>
  }

  export type DonorDonationUpdateManyWithWhereWithoutDonationInput = {
    where: DonorDonationScalarWhereInput
    data: XOR<DonorDonationUpdateManyMutationInput, DonorDonationUncheckedUpdateManyWithoutDonationInput>
  }

  export type DonorDonationScalarWhereInput = {
    AND?: DonorDonationScalarWhereInput | DonorDonationScalarWhereInput[]
    OR?: DonorDonationScalarWhereInput[]
    NOT?: DonorDonationScalarWhereInput | DonorDonationScalarWhereInput[]
    donor_id?: StringFilter<"DonorDonation"> | string
    donation_id?: StringFilter<"DonorDonation"> | string
    amount?: DecimalFilter<"DonorDonation"> | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFilter<"DonorDonation"> | boolean
    created_at?: DateTimeFilter<"DonorDonation"> | Date | string
    updated_at?: DateTimeFilter<"DonorDonation"> | Date | string
  }

  export type DonorTagCreateWithoutTagInput = {
    created_at?: Date | string
    donor: DonorCreateNestedOneWithoutTagsInput
  }

  export type DonorTagUncheckedCreateWithoutTagInput = {
    donor_id: string
    created_at?: Date | string
  }

  export type DonorTagCreateOrConnectWithoutTagInput = {
    where: DonorTagWhereUniqueInput
    create: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput>
  }

  export type DonorTagCreateManyTagInputEnvelope = {
    data: DonorTagCreateManyTagInput | DonorTagCreateManyTagInput[]
    skipDuplicates?: boolean
  }

  export type DonorTagUpsertWithWhereUniqueWithoutTagInput = {
    where: DonorTagWhereUniqueInput
    update: XOR<DonorTagUpdateWithoutTagInput, DonorTagUncheckedUpdateWithoutTagInput>
    create: XOR<DonorTagCreateWithoutTagInput, DonorTagUncheckedCreateWithoutTagInput>
  }

  export type DonorTagUpdateWithWhereUniqueWithoutTagInput = {
    where: DonorTagWhereUniqueInput
    data: XOR<DonorTagUpdateWithoutTagInput, DonorTagUncheckedUpdateWithoutTagInput>
  }

  export type DonorTagUpdateManyWithWhereWithoutTagInput = {
    where: DonorTagScalarWhereInput
    data: XOR<DonorTagUpdateManyMutationInput, DonorTagUncheckedUpdateManyWithoutTagInput>
  }

  export type DonorTagScalarWhereInput = {
    AND?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
    OR?: DonorTagScalarWhereInput[]
    NOT?: DonorTagScalarWhereInput | DonorTagScalarWhereInput[]
    donor_id?: StringFilter<"DonorTag"> | string
    tag_id?: StringFilter<"DonorTag"> | string
    created_at?: DateTimeFilter<"DonorTag"> | Date | string
  }

  export type DonationCreateWithoutDonorsLastDonationInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    donation_date: Date | string
    donation_type?: string | null
    payment_method?: string | null
    status?: string
    campaign_id?: string | null
    event_id?: string | null
    notes?: string | null
    is_anonymous?: boolean
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorDonationCreateNestedManyWithoutDonationInput
  }

  export type DonationUncheckedCreateWithoutDonorsLastDonationInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    donation_date: Date | string
    donation_type?: string | null
    payment_method?: string | null
    status?: string
    campaign_id?: string | null
    event_id?: string | null
    notes?: string | null
    is_anonymous?: boolean
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donors?: DonorDonationUncheckedCreateNestedManyWithoutDonationInput
  }

  export type DonationCreateOrConnectWithoutDonorsLastDonationInput = {
    where: DonationWhereUniqueInput
    create: XOR<DonationCreateWithoutDonorsLastDonationInput, DonationUncheckedCreateWithoutDonorsLastDonationInput>
  }

  export type DonorDonationCreateWithoutDonorInput = {
    amount: Decimal | DecimalJsLike | number | string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    donation: DonationCreateNestedOneWithoutDonorsInput
  }

  export type DonorDonationUncheckedCreateWithoutDonorInput = {
    donation_id: string
    amount: Decimal | DecimalJsLike | number | string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorDonationCreateOrConnectWithoutDonorInput = {
    where: DonorDonationWhereUniqueInput
    create: XOR<DonorDonationCreateWithoutDonorInput, DonorDonationUncheckedCreateWithoutDonorInput>
  }

  export type DonorDonationCreateManyDonorInputEnvelope = {
    data: DonorDonationCreateManyDonorInput | DonorDonationCreateManyDonorInput[]
    skipDuplicates?: boolean
  }

  export type DonorInterestDomainCreateWithoutDonorInput = {
    level?: number
    created_at?: Date | string
    updated_at?: Date | string
    interest_domain: InterestDomainCreateNestedOneWithoutDonorsInput
  }

  export type DonorInterestDomainUncheckedCreateWithoutDonorInput = {
    interest_domain_id: string
    level?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorInterestDomainCreateOrConnectWithoutDonorInput = {
    where: DonorInterestDomainWhereUniqueInput
    create: XOR<DonorInterestDomainCreateWithoutDonorInput, DonorInterestDomainUncheckedCreateWithoutDonorInput>
  }

  export type DonorInterestDomainCreateManyDonorInputEnvelope = {
    data: DonorInterestDomainCreateManyDonorInput | DonorInterestDomainCreateManyDonorInput[]
    skipDuplicates?: boolean
  }

  export type DonorCreateWithoutMerged_donorsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    last_donation?: DonationCreateNestedOneWithoutDonorsLastDonationInput
    donations?: DonorDonationCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainCreateNestedManyWithoutDonorInput
    merge_to_donor?: DonorCreateNestedOneWithoutMerged_donorsInput
    tags?: DonorTagCreateNestedManyWithoutDonorInput
    communications?: CommunicationCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateWithoutMerged_donorsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_id?: string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: string | null
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donations?: DonorDonationUncheckedCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainUncheckedCreateNestedManyWithoutDonorInput
    tags?: DonorTagUncheckedCreateNestedManyWithoutDonorInput
    communications?: CommunicationUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorCreateOrConnectWithoutMerged_donorsInput = {
    where: DonorWhereUniqueInput
    create: XOR<DonorCreateWithoutMerged_donorsInput, DonorUncheckedCreateWithoutMerged_donorsInput>
  }

  export type DonorCreateWithoutMerge_to_donorInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    last_donation?: DonationCreateNestedOneWithoutDonorsLastDonationInput
    donations?: DonorDonationCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainCreateNestedManyWithoutDonorInput
    merged_donors?: DonorCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagCreateNestedManyWithoutDonorInput
    communications?: CommunicationCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateWithoutMerge_to_donorInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_id?: string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donations?: DonorDonationUncheckedCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainUncheckedCreateNestedManyWithoutDonorInput
    merged_donors?: DonorUncheckedCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagUncheckedCreateNestedManyWithoutDonorInput
    communications?: CommunicationUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorCreateOrConnectWithoutMerge_to_donorInput = {
    where: DonorWhereUniqueInput
    create: XOR<DonorCreateWithoutMerge_to_donorInput, DonorUncheckedCreateWithoutMerge_to_donorInput>
  }

  export type DonorCreateManyMerge_to_donorInputEnvelope = {
    data: DonorCreateManyMerge_to_donorInput | DonorCreateManyMerge_to_donorInput[]
    skipDuplicates?: boolean
  }

  export type DonorTagCreateWithoutDonorInput = {
    created_at?: Date | string
    tag: TagCreateNestedOneWithoutDonorsInput
  }

  export type DonorTagUncheckedCreateWithoutDonorInput = {
    tag_id: string
    created_at?: Date | string
  }

  export type DonorTagCreateOrConnectWithoutDonorInput = {
    where: DonorTagWhereUniqueInput
    create: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput>
  }

  export type DonorTagCreateManyDonorInputEnvelope = {
    data: DonorTagCreateManyDonorInput | DonorTagCreateManyDonorInput[]
    skipDuplicates?: boolean
  }

  export type CommunicationCreateWithoutDonorInput = {
    id?: string
    type: string
    direction: string
    subject?: string | null
    content?: string | null
    status: string
    communication_date: Date | string
    response_required?: boolean
    response_received?: boolean
    response_date?: Date | string | null
    notes?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CommunicationUncheckedCreateWithoutDonorInput = {
    id?: string
    type: string
    direction: string
    subject?: string | null
    content?: string | null
    status: string
    communication_date: Date | string
    response_required?: boolean
    response_received?: boolean
    response_date?: Date | string | null
    notes?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CommunicationCreateOrConnectWithoutDonorInput = {
    where: CommunicationWhereUniqueInput
    create: XOR<CommunicationCreateWithoutDonorInput, CommunicationUncheckedCreateWithoutDonorInput>
  }

  export type CommunicationCreateManyDonorInputEnvelope = {
    data: CommunicationCreateManyDonorInput | CommunicationCreateManyDonorInput[]
    skipDuplicates?: boolean
  }

  export type DonationUpsertWithoutDonorsLastDonationInput = {
    update: XOR<DonationUpdateWithoutDonorsLastDonationInput, DonationUncheckedUpdateWithoutDonorsLastDonationInput>
    create: XOR<DonationCreateWithoutDonorsLastDonationInput, DonationUncheckedCreateWithoutDonorsLastDonationInput>
    where?: DonationWhereInput
  }

  export type DonationUpdateToOneWithWhereWithoutDonorsLastDonationInput = {
    where?: DonationWhereInput
    data: XOR<DonationUpdateWithoutDonorsLastDonationInput, DonationUncheckedUpdateWithoutDonorsLastDonationInput>
  }

  export type DonationUpdateWithoutDonorsLastDonationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    donation_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    event_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorDonationUpdateManyWithoutDonationNestedInput
  }

  export type DonationUncheckedUpdateWithoutDonorsLastDonationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    donation_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    event_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donors?: DonorDonationUncheckedUpdateManyWithoutDonationNestedInput
  }

  export type DonorDonationUpsertWithWhereUniqueWithoutDonorInput = {
    where: DonorDonationWhereUniqueInput
    update: XOR<DonorDonationUpdateWithoutDonorInput, DonorDonationUncheckedUpdateWithoutDonorInput>
    create: XOR<DonorDonationCreateWithoutDonorInput, DonorDonationUncheckedCreateWithoutDonorInput>
  }

  export type DonorDonationUpdateWithWhereUniqueWithoutDonorInput = {
    where: DonorDonationWhereUniqueInput
    data: XOR<DonorDonationUpdateWithoutDonorInput, DonorDonationUncheckedUpdateWithoutDonorInput>
  }

  export type DonorDonationUpdateManyWithWhereWithoutDonorInput = {
    where: DonorDonationScalarWhereInput
    data: XOR<DonorDonationUpdateManyMutationInput, DonorDonationUncheckedUpdateManyWithoutDonorInput>
  }

  export type DonorInterestDomainUpsertWithWhereUniqueWithoutDonorInput = {
    where: DonorInterestDomainWhereUniqueInput
    update: XOR<DonorInterestDomainUpdateWithoutDonorInput, DonorInterestDomainUncheckedUpdateWithoutDonorInput>
    create: XOR<DonorInterestDomainCreateWithoutDonorInput, DonorInterestDomainUncheckedCreateWithoutDonorInput>
  }

  export type DonorInterestDomainUpdateWithWhereUniqueWithoutDonorInput = {
    where: DonorInterestDomainWhereUniqueInput
    data: XOR<DonorInterestDomainUpdateWithoutDonorInput, DonorInterestDomainUncheckedUpdateWithoutDonorInput>
  }

  export type DonorInterestDomainUpdateManyWithWhereWithoutDonorInput = {
    where: DonorInterestDomainScalarWhereInput
    data: XOR<DonorInterestDomainUpdateManyMutationInput, DonorInterestDomainUncheckedUpdateManyWithoutDonorInput>
  }

  export type DonorInterestDomainScalarWhereInput = {
    AND?: DonorInterestDomainScalarWhereInput | DonorInterestDomainScalarWhereInput[]
    OR?: DonorInterestDomainScalarWhereInput[]
    NOT?: DonorInterestDomainScalarWhereInput | DonorInterestDomainScalarWhereInput[]
    donor_id?: StringFilter<"DonorInterestDomain"> | string
    interest_domain_id?: StringFilter<"DonorInterestDomain"> | string
    level?: IntFilter<"DonorInterestDomain"> | number
    created_at?: DateTimeFilter<"DonorInterestDomain"> | Date | string
    updated_at?: DateTimeFilter<"DonorInterestDomain"> | Date | string
  }

  export type DonorUpsertWithoutMerged_donorsInput = {
    update: XOR<DonorUpdateWithoutMerged_donorsInput, DonorUncheckedUpdateWithoutMerged_donorsInput>
    create: XOR<DonorCreateWithoutMerged_donorsInput, DonorUncheckedCreateWithoutMerged_donorsInput>
    where?: DonorWhereInput
  }

  export type DonorUpdateToOneWithWhereWithoutMerged_donorsInput = {
    where?: DonorWhereInput
    data: XOR<DonorUpdateWithoutMerged_donorsInput, DonorUncheckedUpdateWithoutMerged_donorsInput>
  }

  export type DonorUpdateWithoutMerged_donorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_donation?: DonationUpdateOneWithoutDonorsLastDonationNestedInput
    donations?: DonorDonationUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUpdateManyWithoutDonorNestedInput
    merge_to_donor?: DonorUpdateOneWithoutMerged_donorsNestedInput
    tags?: DonorTagUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateWithoutMerged_donorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_id?: NullableStringFieldUpdateOperationsInput | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    merge_to_donor_id?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donations?: DonorDonationUncheckedUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUncheckedUpdateManyWithoutDonorNestedInput
    tags?: DonorTagUncheckedUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type DonorUpsertWithWhereUniqueWithoutMerge_to_donorInput = {
    where: DonorWhereUniqueInput
    update: XOR<DonorUpdateWithoutMerge_to_donorInput, DonorUncheckedUpdateWithoutMerge_to_donorInput>
    create: XOR<DonorCreateWithoutMerge_to_donorInput, DonorUncheckedCreateWithoutMerge_to_donorInput>
  }

  export type DonorUpdateWithWhereUniqueWithoutMerge_to_donorInput = {
    where: DonorWhereUniqueInput
    data: XOR<DonorUpdateWithoutMerge_to_donorInput, DonorUncheckedUpdateWithoutMerge_to_donorInput>
  }

  export type DonorUpdateManyWithWhereWithoutMerge_to_donorInput = {
    where: DonorScalarWhereInput
    data: XOR<DonorUpdateManyMutationInput, DonorUncheckedUpdateManyWithoutMerge_to_donorInput>
  }

  export type DonorTagUpsertWithWhereUniqueWithoutDonorInput = {
    where: DonorTagWhereUniqueInput
    update: XOR<DonorTagUpdateWithoutDonorInput, DonorTagUncheckedUpdateWithoutDonorInput>
    create: XOR<DonorTagCreateWithoutDonorInput, DonorTagUncheckedCreateWithoutDonorInput>
  }

  export type DonorTagUpdateWithWhereUniqueWithoutDonorInput = {
    where: DonorTagWhereUniqueInput
    data: XOR<DonorTagUpdateWithoutDonorInput, DonorTagUncheckedUpdateWithoutDonorInput>
  }

  export type DonorTagUpdateManyWithWhereWithoutDonorInput = {
    where: DonorTagScalarWhereInput
    data: XOR<DonorTagUpdateManyMutationInput, DonorTagUncheckedUpdateManyWithoutDonorInput>
  }

  export type CommunicationUpsertWithWhereUniqueWithoutDonorInput = {
    where: CommunicationWhereUniqueInput
    update: XOR<CommunicationUpdateWithoutDonorInput, CommunicationUncheckedUpdateWithoutDonorInput>
    create: XOR<CommunicationCreateWithoutDonorInput, CommunicationUncheckedCreateWithoutDonorInput>
  }

  export type CommunicationUpdateWithWhereUniqueWithoutDonorInput = {
    where: CommunicationWhereUniqueInput
    data: XOR<CommunicationUpdateWithoutDonorInput, CommunicationUncheckedUpdateWithoutDonorInput>
  }

  export type CommunicationUpdateManyWithWhereWithoutDonorInput = {
    where: CommunicationScalarWhereInput
    data: XOR<CommunicationUpdateManyMutationInput, CommunicationUncheckedUpdateManyWithoutDonorInput>
  }

  export type CommunicationScalarWhereInput = {
    AND?: CommunicationScalarWhereInput | CommunicationScalarWhereInput[]
    OR?: CommunicationScalarWhereInput[]
    NOT?: CommunicationScalarWhereInput | CommunicationScalarWhereInput[]
    id?: StringFilter<"Communication"> | string
    donor_id?: StringFilter<"Communication"> | string
    type?: StringFilter<"Communication"> | string
    direction?: StringFilter<"Communication"> | string
    subject?: StringNullableFilter<"Communication"> | string | null
    content?: StringNullableFilter<"Communication"> | string | null
    status?: StringFilter<"Communication"> | string
    communication_date?: DateTimeFilter<"Communication"> | Date | string
    response_required?: BoolFilter<"Communication"> | boolean
    response_received?: BoolFilter<"Communication"> | boolean
    response_date?: DateTimeNullableFilter<"Communication"> | Date | string | null
    notes?: StringNullableFilter<"Communication"> | string | null
    created_at?: DateTimeFilter<"Communication"> | Date | string
    updated_at?: DateTimeFilter<"Communication"> | Date | string
  }

  export type DonorCreateWithoutDonationsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    last_donation?: DonationCreateNestedOneWithoutDonorsLastDonationInput
    interest_domains?: DonorInterestDomainCreateNestedManyWithoutDonorInput
    merge_to_donor?: DonorCreateNestedOneWithoutMerged_donorsInput
    merged_donors?: DonorCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagCreateNestedManyWithoutDonorInput
    communications?: CommunicationCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateWithoutDonationsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_id?: string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: string | null
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    interest_domains?: DonorInterestDomainUncheckedCreateNestedManyWithoutDonorInput
    merged_donors?: DonorUncheckedCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagUncheckedCreateNestedManyWithoutDonorInput
    communications?: CommunicationUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorCreateOrConnectWithoutDonationsInput = {
    where: DonorWhereUniqueInput
    create: XOR<DonorCreateWithoutDonationsInput, DonorUncheckedCreateWithoutDonationsInput>
  }

  export type DonationCreateWithoutDonorsInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    donation_date: Date | string
    donation_type?: string | null
    payment_method?: string | null
    status?: string
    campaign_id?: string | null
    event_id?: string | null
    notes?: string | null
    is_anonymous?: boolean
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donorsLastDonation?: DonorCreateNestedManyWithoutLast_donationInput
  }

  export type DonationUncheckedCreateWithoutDonorsInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    donation_date: Date | string
    donation_type?: string | null
    payment_method?: string | null
    status?: string
    campaign_id?: string | null
    event_id?: string | null
    notes?: string | null
    is_anonymous?: boolean
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donorsLastDonation?: DonorUncheckedCreateNestedManyWithoutLast_donationInput
  }

  export type DonationCreateOrConnectWithoutDonorsInput = {
    where: DonationWhereUniqueInput
    create: XOR<DonationCreateWithoutDonorsInput, DonationUncheckedCreateWithoutDonorsInput>
  }

  export type DonorUpsertWithoutDonationsInput = {
    update: XOR<DonorUpdateWithoutDonationsInput, DonorUncheckedUpdateWithoutDonationsInput>
    create: XOR<DonorCreateWithoutDonationsInput, DonorUncheckedCreateWithoutDonationsInput>
    where?: DonorWhereInput
  }

  export type DonorUpdateToOneWithWhereWithoutDonationsInput = {
    where?: DonorWhereInput
    data: XOR<DonorUpdateWithoutDonationsInput, DonorUncheckedUpdateWithoutDonationsInput>
  }

  export type DonorUpdateWithoutDonationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_donation?: DonationUpdateOneWithoutDonorsLastDonationNestedInput
    interest_domains?: DonorInterestDomainUpdateManyWithoutDonorNestedInput
    merge_to_donor?: DonorUpdateOneWithoutMerged_donorsNestedInput
    merged_donors?: DonorUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateWithoutDonationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_id?: NullableStringFieldUpdateOperationsInput | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    merge_to_donor_id?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    interest_domains?: DonorInterestDomainUncheckedUpdateManyWithoutDonorNestedInput
    merged_donors?: DonorUncheckedUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUncheckedUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type DonationUpsertWithoutDonorsInput = {
    update: XOR<DonationUpdateWithoutDonorsInput, DonationUncheckedUpdateWithoutDonorsInput>
    create: XOR<DonationCreateWithoutDonorsInput, DonationUncheckedCreateWithoutDonorsInput>
    where?: DonationWhereInput
  }

  export type DonationUpdateToOneWithWhereWithoutDonorsInput = {
    where?: DonationWhereInput
    data: XOR<DonationUpdateWithoutDonorsInput, DonationUncheckedUpdateWithoutDonorsInput>
  }

  export type DonationUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    donation_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    event_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donorsLastDonation?: DonorUpdateManyWithoutLast_donationNestedInput
  }

  export type DonationUncheckedUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    donation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    donation_type?: NullableStringFieldUpdateOperationsInput | string | null
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    campaign_id?: NullableStringFieldUpdateOperationsInput | string | null
    event_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donorsLastDonation?: DonorUncheckedUpdateManyWithoutLast_donationNestedInput
  }

  export type DonorCreateWithoutTagsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    last_donation?: DonationCreateNestedOneWithoutDonorsLastDonationInput
    donations?: DonorDonationCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainCreateNestedManyWithoutDonorInput
    merge_to_donor?: DonorCreateNestedOneWithoutMerged_donorsInput
    merged_donors?: DonorCreateNestedManyWithoutMerge_to_donorInput
    communications?: CommunicationCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateWithoutTagsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_id?: string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: string | null
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donations?: DonorDonationUncheckedCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainUncheckedCreateNestedManyWithoutDonorInput
    merged_donors?: DonorUncheckedCreateNestedManyWithoutMerge_to_donorInput
    communications?: CommunicationUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorCreateOrConnectWithoutTagsInput = {
    where: DonorWhereUniqueInput
    create: XOR<DonorCreateWithoutTagsInput, DonorUncheckedCreateWithoutTagsInput>
  }

  export type TagCreateWithoutDonorsInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type TagUncheckedCreateWithoutDonorsInput = {
    id?: string
    name: string
    description?: string | null
    color?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type TagCreateOrConnectWithoutDonorsInput = {
    where: TagWhereUniqueInput
    create: XOR<TagCreateWithoutDonorsInput, TagUncheckedCreateWithoutDonorsInput>
  }

  export type DonorUpsertWithoutTagsInput = {
    update: XOR<DonorUpdateWithoutTagsInput, DonorUncheckedUpdateWithoutTagsInput>
    create: XOR<DonorCreateWithoutTagsInput, DonorUncheckedCreateWithoutTagsInput>
    where?: DonorWhereInput
  }

  export type DonorUpdateToOneWithWhereWithoutTagsInput = {
    where?: DonorWhereInput
    data: XOR<DonorUpdateWithoutTagsInput, DonorUncheckedUpdateWithoutTagsInput>
  }

  export type DonorUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_donation?: DonationUpdateOneWithoutDonorsLastDonationNestedInput
    donations?: DonorDonationUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUpdateManyWithoutDonorNestedInput
    merge_to_donor?: DonorUpdateOneWithoutMerged_donorsNestedInput
    merged_donors?: DonorUpdateManyWithoutMerge_to_donorNestedInput
    communications?: CommunicationUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_id?: NullableStringFieldUpdateOperationsInput | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    merge_to_donor_id?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donations?: DonorDonationUncheckedUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUncheckedUpdateManyWithoutDonorNestedInput
    merged_donors?: DonorUncheckedUpdateManyWithoutMerge_to_donorNestedInput
    communications?: CommunicationUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type TagUpsertWithoutDonorsInput = {
    update: XOR<TagUpdateWithoutDonorsInput, TagUncheckedUpdateWithoutDonorsInput>
    create: XOR<TagCreateWithoutDonorsInput, TagUncheckedCreateWithoutDonorsInput>
    where?: TagWhereInput
  }

  export type TagUpdateToOneWithWhereWithoutDonorsInput = {
    where?: TagWhereInput
    data: XOR<TagUpdateWithoutDonorsInput, TagUncheckedUpdateWithoutDonorsInput>
  }

  export type TagUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TagUncheckedUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorInterestDomainCreateWithoutInterest_domainInput = {
    level?: number
    created_at?: Date | string
    updated_at?: Date | string
    donor: DonorCreateNestedOneWithoutInterest_domainsInput
  }

  export type DonorInterestDomainUncheckedCreateWithoutInterest_domainInput = {
    donor_id: string
    level?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorInterestDomainCreateOrConnectWithoutInterest_domainInput = {
    where: DonorInterestDomainWhereUniqueInput
    create: XOR<DonorInterestDomainCreateWithoutInterest_domainInput, DonorInterestDomainUncheckedCreateWithoutInterest_domainInput>
  }

  export type DonorInterestDomainCreateManyInterest_domainInputEnvelope = {
    data: DonorInterestDomainCreateManyInterest_domainInput | DonorInterestDomainCreateManyInterest_domainInput[]
    skipDuplicates?: boolean
  }

  export type DonorInterestDomainUpsertWithWhereUniqueWithoutInterest_domainInput = {
    where: DonorInterestDomainWhereUniqueInput
    update: XOR<DonorInterestDomainUpdateWithoutInterest_domainInput, DonorInterestDomainUncheckedUpdateWithoutInterest_domainInput>
    create: XOR<DonorInterestDomainCreateWithoutInterest_domainInput, DonorInterestDomainUncheckedCreateWithoutInterest_domainInput>
  }

  export type DonorInterestDomainUpdateWithWhereUniqueWithoutInterest_domainInput = {
    where: DonorInterestDomainWhereUniqueInput
    data: XOR<DonorInterestDomainUpdateWithoutInterest_domainInput, DonorInterestDomainUncheckedUpdateWithoutInterest_domainInput>
  }

  export type DonorInterestDomainUpdateManyWithWhereWithoutInterest_domainInput = {
    where: DonorInterestDomainScalarWhereInput
    data: XOR<DonorInterestDomainUpdateManyMutationInput, DonorInterestDomainUncheckedUpdateManyWithoutInterest_domainInput>
  }

  export type DonorCreateWithoutInterest_domainsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    last_donation?: DonationCreateNestedOneWithoutDonorsLastDonationInput
    donations?: DonorDonationCreateNestedManyWithoutDonorInput
    merge_to_donor?: DonorCreateNestedOneWithoutMerged_donorsInput
    merged_donors?: DonorCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagCreateNestedManyWithoutDonorInput
    communications?: CommunicationCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateWithoutInterest_domainsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_id?: string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: string | null
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donations?: DonorDonationUncheckedCreateNestedManyWithoutDonorInput
    merged_donors?: DonorUncheckedCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagUncheckedCreateNestedManyWithoutDonorInput
    communications?: CommunicationUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorCreateOrConnectWithoutInterest_domainsInput = {
    where: DonorWhereUniqueInput
    create: XOR<DonorCreateWithoutInterest_domainsInput, DonorUncheckedCreateWithoutInterest_domainsInput>
  }

  export type InterestDomainCreateWithoutDonorsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type InterestDomainUncheckedCreateWithoutDonorsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type InterestDomainCreateOrConnectWithoutDonorsInput = {
    where: InterestDomainWhereUniqueInput
    create: XOR<InterestDomainCreateWithoutDonorsInput, InterestDomainUncheckedCreateWithoutDonorsInput>
  }

  export type DonorUpsertWithoutInterest_domainsInput = {
    update: XOR<DonorUpdateWithoutInterest_domainsInput, DonorUncheckedUpdateWithoutInterest_domainsInput>
    create: XOR<DonorCreateWithoutInterest_domainsInput, DonorUncheckedCreateWithoutInterest_domainsInput>
    where?: DonorWhereInput
  }

  export type DonorUpdateToOneWithWhereWithoutInterest_domainsInput = {
    where?: DonorWhereInput
    data: XOR<DonorUpdateWithoutInterest_domainsInput, DonorUncheckedUpdateWithoutInterest_domainsInput>
  }

  export type DonorUpdateWithoutInterest_domainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_donation?: DonationUpdateOneWithoutDonorsLastDonationNestedInput
    donations?: DonorDonationUpdateManyWithoutDonorNestedInput
    merge_to_donor?: DonorUpdateOneWithoutMerged_donorsNestedInput
    merged_donors?: DonorUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateWithoutInterest_domainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_id?: NullableStringFieldUpdateOperationsInput | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    merge_to_donor_id?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donations?: DonorDonationUncheckedUpdateManyWithoutDonorNestedInput
    merged_donors?: DonorUncheckedUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUncheckedUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type InterestDomainUpsertWithoutDonorsInput = {
    update: XOR<InterestDomainUpdateWithoutDonorsInput, InterestDomainUncheckedUpdateWithoutDonorsInput>
    create: XOR<InterestDomainCreateWithoutDonorsInput, InterestDomainUncheckedCreateWithoutDonorsInput>
    where?: InterestDomainWhereInput
  }

  export type InterestDomainUpdateToOneWithWhereWithoutDonorsInput = {
    where?: InterestDomainWhereInput
    data: XOR<InterestDomainUpdateWithoutDonorsInput, InterestDomainUncheckedUpdateWithoutDonorsInput>
  }

  export type InterestDomainUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InterestDomainUncheckedUpdateWithoutDonorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorCreateWithoutCommunicationsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    last_donation?: DonationCreateNestedOneWithoutDonorsLastDonationInput
    donations?: DonorDonationCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainCreateNestedManyWithoutDonorInput
    merge_to_donor?: DonorCreateNestedOneWithoutMerged_donorsInput
    merged_donors?: DonorCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagCreateNestedManyWithoutDonorInput
  }

  export type DonorUncheckedCreateWithoutCommunicationsInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_id?: string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: string | null
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    donations?: DonorDonationUncheckedCreateNestedManyWithoutDonorInput
    interest_domains?: DonorInterestDomainUncheckedCreateNestedManyWithoutDonorInput
    merged_donors?: DonorUncheckedCreateNestedManyWithoutMerge_to_donorInput
    tags?: DonorTagUncheckedCreateNestedManyWithoutDonorInput
  }

  export type DonorCreateOrConnectWithoutCommunicationsInput = {
    where: DonorWhereUniqueInput
    create: XOR<DonorCreateWithoutCommunicationsInput, DonorUncheckedCreateWithoutCommunicationsInput>
  }

  export type DonorUpsertWithoutCommunicationsInput = {
    update: XOR<DonorUpdateWithoutCommunicationsInput, DonorUncheckedUpdateWithoutCommunicationsInput>
    create: XOR<DonorCreateWithoutCommunicationsInput, DonorUncheckedCreateWithoutCommunicationsInput>
    where?: DonorWhereInput
  }

  export type DonorUpdateToOneWithWhereWithoutCommunicationsInput = {
    where?: DonorWhereInput
    data: XOR<DonorUpdateWithoutCommunicationsInput, DonorUncheckedUpdateWithoutCommunicationsInput>
  }

  export type DonorUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_donation?: DonationUpdateOneWithoutDonorsLastDonationNestedInput
    donations?: DonorDonationUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUpdateManyWithoutDonorNestedInput
    merge_to_donor?: DonorUpdateOneWithoutMerged_donorsNestedInput
    merged_donors?: DonorUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateWithoutCommunicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_id?: NullableStringFieldUpdateOperationsInput | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    merge_to_donor_id?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donations?: DonorDonationUncheckedUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUncheckedUpdateManyWithoutDonorNestedInput
    merged_donors?: DonorUncheckedUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type DonorCreateManyLast_donationInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    merge_to_donor_id?: string | null
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorDonationCreateManyDonationInput = {
    donor_id: string
    amount: Decimal | DecimalJsLike | number | string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorUpdateWithoutLast_donationInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donations?: DonorDonationUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUpdateManyWithoutDonorNestedInput
    merge_to_donor?: DonorUpdateOneWithoutMerged_donorsNestedInput
    merged_donors?: DonorUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateWithoutLast_donationInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    merge_to_donor_id?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donations?: DonorDonationUncheckedUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUncheckedUpdateManyWithoutDonorNestedInput
    merged_donors?: DonorUncheckedUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUncheckedUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateManyWithoutLast_donationInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    merge_to_donor_id?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorDonationUpdateWithoutDonationInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutDonationsNestedInput
  }

  export type DonorDonationUncheckedUpdateWithoutDonationInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorDonationUncheckedUpdateManyWithoutDonationInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagCreateManyTagInput = {
    donor_id: string
    created_at?: Date | string
  }

  export type DonorTagUpdateWithoutTagInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutTagsNestedInput
  }

  export type DonorTagUncheckedUpdateWithoutTagInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagUncheckedUpdateManyWithoutTagInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorDonationCreateManyDonorInput = {
    donation_id: string
    amount: Decimal | DecimalJsLike | number | string
    is_primary?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorInterestDomainCreateManyDonorInput = {
    interest_domain_id: string
    level?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorCreateManyMerge_to_donorInput = {
    id?: string
    first_name?: string | null
    nick_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    organization_name?: string | null
    gender?: string | null
    age?: number | null
    email?: string | null
    phone_number?: string | null
    address?: string | null
    city?: string | null
    state?: string | null
    postal_code?: string | null
    country?: string | null
    registration_date?: Date | string | null
    last_donation_id?: string | null
    last_donation_date?: Date | string | null
    total_donation_amount?: Decimal | DecimalJsLike | number | string
    total_donations_count?: number
    anonymous_donation_preference?: boolean
    is_merged?: boolean
    is_company?: boolean
    contact_phone_type?: string | null
    phone_restrictions?: string | null
    email_restrictions?: string | null
    communication_restrictions?: string | null
    subscription_events_in_person?: string | null
    subscription_events_magazine?: string | null
    communication_preference?: string | null
    is_deleted?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorTagCreateManyDonorInput = {
    tag_id: string
    created_at?: Date | string
  }

  export type CommunicationCreateManyDonorInput = {
    id?: string
    type: string
    direction: string
    subject?: string | null
    content?: string | null
    status: string
    communication_date: Date | string
    response_required?: boolean
    response_received?: boolean
    response_date?: Date | string | null
    notes?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorDonationUpdateWithoutDonorInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donation?: DonationUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorDonationUncheckedUpdateWithoutDonorInput = {
    donation_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorDonationUncheckedUpdateManyWithoutDonorInput = {
    donation_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_primary?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorInterestDomainUpdateWithoutDonorInput = {
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    interest_domain?: InterestDomainUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorInterestDomainUncheckedUpdateWithoutDonorInput = {
    interest_domain_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorInterestDomainUncheckedUpdateManyWithoutDonorInput = {
    interest_domain_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorUpdateWithoutMerge_to_donorInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_donation?: DonationUpdateOneWithoutDonorsLastDonationNestedInput
    donations?: DonorDonationUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUpdateManyWithoutDonorNestedInput
    merged_donors?: DonorUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateWithoutMerge_to_donorInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_id?: NullableStringFieldUpdateOperationsInput | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donations?: DonorDonationUncheckedUpdateManyWithoutDonorNestedInput
    interest_domains?: DonorInterestDomainUncheckedUpdateManyWithoutDonorNestedInput
    merged_donors?: DonorUncheckedUpdateManyWithoutMerge_to_donorNestedInput
    tags?: DonorTagUncheckedUpdateManyWithoutDonorNestedInput
    communications?: CommunicationUncheckedUpdateManyWithoutDonorNestedInput
  }

  export type DonorUncheckedUpdateManyWithoutMerge_to_donorInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    nick_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    organization_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_donation_id?: NullableStringFieldUpdateOperationsInput | string | null
    last_donation_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total_donation_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_donations_count?: IntFieldUpdateOperationsInput | number
    anonymous_donation_preference?: BoolFieldUpdateOperationsInput | boolean
    is_merged?: BoolFieldUpdateOperationsInput | boolean
    is_company?: BoolFieldUpdateOperationsInput | boolean
    contact_phone_type?: NullableStringFieldUpdateOperationsInput | string | null
    phone_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    email_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    communication_restrictions?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_in_person?: NullableStringFieldUpdateOperationsInput | string | null
    subscription_events_magazine?: NullableStringFieldUpdateOperationsInput | string | null
    communication_preference?: NullableStringFieldUpdateOperationsInput | string | null
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagUpdateWithoutDonorInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: TagUpdateOneRequiredWithoutDonorsNestedInput
  }

  export type DonorTagUncheckedUpdateWithoutDonorInput = {
    tag_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorTagUncheckedUpdateManyWithoutDonorInput = {
    tag_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationUpdateWithoutDonorInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    communication_date?: DateTimeFieldUpdateOperationsInput | Date | string
    response_required?: BoolFieldUpdateOperationsInput | boolean
    response_received?: BoolFieldUpdateOperationsInput | boolean
    response_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationUncheckedUpdateWithoutDonorInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    communication_date?: DateTimeFieldUpdateOperationsInput | Date | string
    response_required?: BoolFieldUpdateOperationsInput | boolean
    response_received?: BoolFieldUpdateOperationsInput | boolean
    response_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationUncheckedUpdateManyWithoutDonorInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    direction?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    communication_date?: DateTimeFieldUpdateOperationsInput | Date | string
    response_required?: BoolFieldUpdateOperationsInput | boolean
    response_received?: BoolFieldUpdateOperationsInput | boolean
    response_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorInterestDomainCreateManyInterest_domainInput = {
    donor_id: string
    level?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DonorInterestDomainUpdateWithoutInterest_domainInput = {
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    donor?: DonorUpdateOneRequiredWithoutInterest_domainsNestedInput
  }

  export type DonorInterestDomainUncheckedUpdateWithoutInterest_domainInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DonorInterestDomainUncheckedUpdateManyWithoutInterest_domainInput = {
    donor_id?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}