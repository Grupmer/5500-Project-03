// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  username  String
  email     String  @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  events    Event[] @relation("UserCreatedEvents")
  collaborators     EventCollaborator[]
  editHistories   EventEditHistory[]  @relation("EditorHistory")
}

model Tag {
  id                String      @id @default(uuid())
  name              String      @unique
  description       String?     @db.Text
  color             String?     @db.VarChar(20)  // For UI color coding
  donors            DonorTag[]
  events      Event[]     @relation("EventTags")
  is_deleted        Boolean     @default(false)
  deleted_at        DateTime?
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt

  @@map("Tag")
  @@index([name])
}

model Donor {
  id                      String      @id @default(uuid())
  first_name              String      @db.VarChar(255)
  nick_name               String?     @db.VarChar(255)
  last_name               String      @db.VarChar(255)
  organization_name       String?     @db.VarChar(255)
  unit_number             String?     @db.VarChar(255)
  street_address          String      @db.Text
  city                    City

  total_donation_amount   Decimal?    @default(0) @db.Decimal(10, 2)
  total_pledge            Decimal?    @db.Decimal(10, 2)
  largest_gift_amount     Decimal?    @db.Decimal(10, 2)
  largest_gift_appeal     String?     @db.VarChar(255)
  last_gift_amount        Decimal?    @db.Decimal(10, 2)
  last_gift_request       String?     @db.VarChar(255)
  last_gift_appeal        String?     @db.VarChar(255)
  first_gift_date         DateTime?
  last_gift_date          DateTime?

  pmm                     String
  exclude                 Boolean?
  deceased                Boolean?

  contact_phone_type           ContactPhoneType?    
  phone_restrictions           String?
  email_restrictions           String?
  communication_restrictions  String?
  subscription_events_in_person SubscriptionPreference?
  subscription_events_magazine SubscriptionPreference?
  communication_preference CommunicationPreference?

  tags                    DonorTag[]
  events                  DonorEvent[]

  is_deleted              Boolean     @default(false)
  deleted_at              DateTime?
  created_at              DateTime    @default(now())
  updated_at              DateTime    @updatedAt

  attendance_lable              Boolean?
  donation_lable                Boolean?
  total_invitations             Int?       @default(0)
  total_attendance              Int?       @default(0)
  last_invitation_attendance    Boolean?
  invitation_acceptance_rate Float?
  ml_score                   Float?

  @@index([last_name])
  @@index([organization_name])
  @@index([city])
  @@index([exclude])
  @@index([deceased])
  @@index([pmm])
  @@index([communication_preference])
  @@index([subscription_events_in_person])
  @@index([subscription_events_magazine])
  @@index([created_at])

  @@map("Donor")
}


model DonorTag {
  donor              Donor       @relation(fields: [donor_id], references: [id], onDelete: Cascade)
  donor_id           String
  tag                Tag         @relation(fields: [tag_id], references: [id], onDelete: Cascade)
  tag_id             String
  created_at         DateTime    @default(now())

  @@id([donor_id, tag_id])
  @@map("Donor_Tag")
  @@index([donor_id])
  @@index([tag_id])
}

enum EventStatus {
  draft
  published
  archived
}

model Event {
  id          String      @id @default(uuid())
  name        String      @unique
  description String?     @db.Text
  date        DateTime?
  location    String?     @db.Text
  status      EventStatus @default(draft)
  capacity Int?
  donors      DonorEvent[]
  tags        Tag[]       @relation("EventTags")
  editHistory  EventEditHistory[] 
  is_deleted  Boolean     @default(false)
  deleted_at  DateTime?
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  created_by  Int?
  createdBy   User?       @relation("UserCreatedEvents", fields: [created_by], references: [id])
  collaborators  EventCollaborator[]

  @@map("Event")
  @@index([date])
}

model EventCollaborator {
  id        Int     @id @default(autoincrement())
  event     Event   @relation(fields: [eventId], references: [id])
  eventId   String
  user      User    @relation(fields: [userId], references: [id])
  userId    Int

  @@unique([eventId, userId])
}

model DonorEvent {
  donor      Donor   @relation(fields: [donor_id], references: [id], onDelete: Cascade)
  donor_id   String

  event      Event   @relation(fields: [event_id], references: [id], onDelete: Cascade)
  event_id   String

  status     ParticipationStatus?
  counted_invitation Boolean @default(false)
  counted_attendance Boolean @default(false)
  created_at DateTime @default(now())

  @@id([donor_id, event_id])
  @@map("Donor_Event")
  @@index([donor_id])
  @@index([event_id])
}

model EventEditHistory {
  id           String   @id @default(uuid())
  event        Event    @relation(fields: [event_id], references: [id], onDelete: Cascade)
  event_id     String

  editor       User?    @relation("EditorHistory", fields: [editor_id], references: [id])
  editor_id    Int?

  edit_type    String
  old_value    String?  @db.Text
  new_value    String?  @db.Text

  created_at   DateTime @default(now())

  @@index([event_id])
  @@index([editor_id])
  @@map("Event_Edit_History")
}



enum ParticipationStatus {
  invited
  confirmed
  attended
  declined
}

enum ContactPhoneType {
  Home
  Work
  Mobile
}

enum SubscriptionPreference {
  Opt_out
  Opt_in
}

enum CommunicationPreference {
  Thank_you
  Magazine
  Inspiration_event
  Newsletter
  Survey
  Holiday_Card
  Event
  Appeal
  Research_update
}

enum City {
  Victoria
  Nanaimo
  Courtenay
  Parksville
  Campbell_River
  Saanich
  Vancouver
  Surrey
  Burnaby
  Richmond
  North_Vancouver
  White_Rock
  Coquitlam
  West_Vancouver
  New_Westminster
  Prince_George
  Williams_Lake
  Delta
  Abbotsford
  Maple_Ridge
  Kelowna
  Langley
  Port_Coquitlam
  Vernon
  Kamloops
  Salmon_Arm
}